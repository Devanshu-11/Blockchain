{
	"compiler": {
		"version": "0.8.26+commit.8a97fa7a"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"inputs": [],
				"stateMutability": "nonpayable",
				"type": "constructor"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "address",
						"name": "previousOwner",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "address",
						"name": "newOwner",
						"type": "address"
					}
				],
				"name": "ProxyOwnershipTransferred",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "implementation",
						"type": "address"
					}
				],
				"name": "Upgraded",
				"type": "event"
			},
			{
				"stateMutability": "payable",
				"type": "fallback"
			},
			{
				"inputs": [],
				"name": "implementation",
				"outputs": [
					{
						"internalType": "address",
						"name": "impl",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "maintenance",
				"outputs": [
					{
						"internalType": "bool",
						"name": "_maintenance",
						"type": "bool"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "proxyOwner",
				"outputs": [
					{
						"internalType": "address",
						"name": "owner",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bool",
						"name": "_maintenance",
						"type": "bool"
					}
				],
				"name": "setMaintenance",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "newOwner",
						"type": "address"
					}
				],
				"name": "transferProxyOwnership",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "newImplementation",
						"type": "address"
					}
				],
				"name": "upgradeTo",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "newImplementation",
						"type": "address"
					},
					{
						"internalType": "bytes",
						"name": "data",
						"type": "bytes"
					}
				],
				"name": "upgradeToAndCall",
				"outputs": [],
				"stateMutability": "payable",
				"type": "function"
			},
			{
				"stateMutability": "payable",
				"type": "receive"
			}
		],
		"devdoc": {
			"details": "This contract combines an upgradeability proxy with basic authorization control functionalities",
			"events": {
				"ProxyOwnershipTransferred(address,address)": {
					"details": "Event to show ownership has been transferred",
					"params": {
						"newOwner": "representing the address of the new owner",
						"previousOwner": "representing the address of the previous owner"
					}
				},
				"Upgraded(address)": {
					"details": "This event will be emitted every time the implementation gets upgraded",
					"params": {
						"implementation": "representing the address of the upgraded implementation"
					}
				}
			},
			"kind": "dev",
			"methods": {
				"constructor": {
					"details": "the constructor sets the original owner of the contract to the sender account."
				},
				"implementation()": {
					"details": "Tells the address of the current implementation",
					"returns": {
						"impl": "address of the current implementation"
					}
				},
				"maintenance()": {
					"details": "Tells if contract is on maintenance",
					"returns": {
						"_maintenance": "if contract is on maintenance"
					}
				},
				"proxyOwner()": {
					"details": "Tells the address of the owner",
					"returns": {
						"owner": "the address of the owner"
					}
				},
				"setMaintenance(bool)": {
					"details": "Sets if contract is on maintenance"
				},
				"transferProxyOwnership(address)": {
					"details": "Allows the current owner to transfer control of the contract to a newOwner.",
					"params": {
						"newOwner": "The address to transfer ownership to."
					}
				}
			},
			"title": "OwnedUpgradeabilityProxy",
			"version": 1
		},
		"userdoc": {
			"kind": "user",
			"methods": {},
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"contracts/OwnedUpgradeabilityProxy.sol": "OwnedUpgradeabilityProxy"
		},
		"evmVersion": "cancun",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": false,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"contracts/OwnedUpgradeabilityProxy.sol": {
			"keccak256": "0x0fbf0d51408cbc3805f9311d33d3053704c3f5e79e05bdc34003ce1ac31bf1cb",
			"license": "UNLICENSED",
			"urls": [
				"bzz-raw://8358c4e000474f813da52d775c92e9dc3a13d977c57c0bb5815b86d47f064b80",
				"dweb:/ipfs/QmaU5fttpXW6UptKi1EwTmUpgGJaWgNYZo8rbvzmb4tTSF"
			]
		}
	},
	"version": 1
}