{
	"id": "8ec5badb021d0474a7101d8938f882a8",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.26",
	"solcLongVersion": "0.8.26+commit.8a97fa7a",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/StakingUpgrade.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.20;\r\nimport \"./StakeToken.sol\";\r\nimport \"./RewardToken.sol\";\r\nimport \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\";\r\nimport \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\";\r\n\r\ncontract StakingUpgrade is Initializable,OwnableUpgradeable{\r\n    StakeToken public stakeToken;\r\n    RewardToken public rewardToken;\r\n    uint256 lastUpdatedTime;\r\n    // address owner;\r\n\r\n    // adding the new variable\r\n    // uint256 newVar;\r\n\r\n    // constructor(address _StakeToken, address _RewardToken){\r\n    //     stakeToken=StakeToken(_StakeToken);\r\n    //     rewardToken=RewardToken(_RewardToken);\r\n    //     owner=msg.sender;\r\n    // }\r\n\r\n    // we should use initializer instead of constructor\r\n    // function initialize(address _StakeToken, address _RewardToken,uint _newVar) public initializer{\r\n    //     stakeToken=StakeToken(_StakeToken);\r\n    //     rewardToken=RewardToken(_RewardToken);\r\n    //     __Ownable_init(msg.sender);\r\n\r\n    //     // adding the new variable\r\n    //     newVar=_newVar;\r\n    // }\r\n\r\n    mapping(address=>uint) public userStaked;\r\n    mapping(address=>uint) public userRewards;\r\n    \r\n    // creating the events\r\n    event Staked(address indexed user, uint amount);\r\n    event Withdraw(address indexed user, uint amount);\r\n    event RewardsClaimed(address indexed user, uint amount);\r\n\r\n    // user will stake some tokens\r\n    function stake(uint amount) public{\r\n        require(amount>0,\"The amount should be always greater than zero\");\r\n\r\n        // also check for the allowance\r\n        require(stakeToken.allowance(msg.sender,address(this))>=amount,\"Not set the enough amount for allowance\");\r\n\r\n        // now we will do the transfer\r\n        stakeToken.transferFrom(msg.sender,address(this),amount);\r\n\r\n        // if user staked first time then no rewards will be calculated\r\n        if(lastUpdatedTime!=0){\r\n            calculateTotalRewards();\r\n        }\r\n\r\n        userStaked[msg.sender]=userStaked[msg.sender]+amount;\r\n        lastUpdatedTime=block.timestamp;\r\n        \r\n        // emit the staked event\r\n        emit Staked(msg.sender,amount);\r\n    }\r\n\r\n    // user will withdraw some tokens\r\n    function withdraw(uint amount) public{\r\n        require(userStaked[msg.sender]>0,\"Insufficient staked balance\");\r\n        calculateTotalRewards();\r\n        userStaked[msg.sender]=userStaked[msg.sender]-amount;\r\n        stakeToken.transfer(msg.sender,amount);\r\n        lastUpdatedTime=block.timestamp;\r\n        \r\n        // emit the withdraw event \r\n        emit Withdraw(msg.sender,amount);\r\n    }\r\n\r\n    // In this we will calculate total rewards and it will be calculated 3% per seconds\r\n    function calculateTotalRewards() public{\r\n        uint calculatedTime=block.timestamp-lastUpdatedTime;\r\n\r\n        // as the reward will be calculated 4% per second\r\n        uint StakeRewardsPerSecond=(userStaked[msg.sender]*4)/100;\r\n        uint totalRewardsCalculated=StakeRewardsPerSecond*calculatedTime;\r\n        userRewards[msg.sender]=userRewards[msg.sender]+totalRewardsCalculated;\r\n    }\r\n\r\n    // user will be claim the rewards\r\n    function claimRewards() public{\r\n        require(userRewards[msg.sender]>0,\"No rewards to claim\");\r\n        rewardToken.transfer(msg.sender,userRewards[msg.sender]);\r\n\r\n        // emit the RewardsClaimed event\r\n        emit RewardsClaimed(msg.sender,userRewards[msg.sender]);\r\n        userRewards[msg.sender]=0;\r\n    }\r\n}"
			},
			"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {ContextUpgradeable} from \"../utils/ContextUpgradeable.sol\";\nimport {Initializable} from \"../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract OwnableUpgradeable is Initializable, ContextUpgradeable {\n    /// @custom:storage-location erc7201:openzeppelin.storage.Ownable\n    struct OwnableStorage {\n        address _owner;\n    }\n\n    // keccak256(abi.encode(uint256(keccak256(\"openzeppelin.storage.Ownable\")) - 1)) & ~bytes32(uint256(0xff))\n    bytes32 private constant OwnableStorageLocation = 0x9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300;\n\n    function _getOwnableStorage() private pure returns (OwnableStorage storage $) {\n        assembly {\n            $.slot := OwnableStorageLocation\n        }\n    }\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    function __Ownable_init(address initialOwner) internal onlyInitializing {\n        __Ownable_init_unchained(initialOwner);\n    }\n\n    function __Ownable_init_unchained(address initialOwner) internal onlyInitializing {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        OwnableStorage storage $ = _getOwnableStorage();\n        return $._owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        OwnableStorage storage $ = _getOwnableStorage();\n        address oldOwner = $._owner;\n        $._owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/utils/Initializable.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\n *\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\n * reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in\n * case an upgrade adds a module that needs to be initialized.\n *\n * For example:\n *\n * [.hljs-theme-light.nopadding]\n * ```solidity\n * contract MyToken is ERC20Upgradeable {\n *     function initialize() initializer public {\n *         __ERC20_init(\"MyToken\", \"MTK\");\n *     }\n * }\n *\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\n *     function initializeV2() reinitializer(2) public {\n *         __ERC20Permit_init(\"MyToken\");\n *     }\n * }\n * ```\n *\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\n *\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\n *\n * [CAUTION]\n * ====\n * Avoid leaving a contract uninitialized.\n *\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\n *\n * [.hljs-theme-light.nopadding]\n * ```\n * /// @custom:oz-upgrades-unsafe-allow constructor\n * constructor() {\n *     _disableInitializers();\n * }\n * ```\n * ====\n */\nabstract contract Initializable {\n    /**\n     * @dev Storage of the initializable contract.\n     *\n     * It's implemented on a custom ERC-7201 namespace to reduce the risk of storage collisions\n     * when using with upgradeable contracts.\n     *\n     * @custom:storage-location erc7201:openzeppelin.storage.Initializable\n     */\n    struct InitializableStorage {\n        /**\n         * @dev Indicates that the contract has been initialized.\n         */\n        uint64 _initialized;\n        /**\n         * @dev Indicates that the contract is in the process of being initialized.\n         */\n        bool _initializing;\n    }\n\n    // keccak256(abi.encode(uint256(keccak256(\"openzeppelin.storage.Initializable\")) - 1)) & ~bytes32(uint256(0xff))\n    bytes32 private constant INITIALIZABLE_STORAGE = 0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00;\n\n    /**\n     * @dev The contract is already initialized.\n     */\n    error InvalidInitialization();\n\n    /**\n     * @dev The contract is not initializing.\n     */\n    error NotInitializing();\n\n    /**\n     * @dev Triggered when the contract has been initialized or reinitialized.\n     */\n    event Initialized(uint64 version);\n\n    /**\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\n     * `onlyInitializing` functions can be used to initialize parent contracts.\n     *\n     * Similar to `reinitializer(1)`, except that in the context of a constructor an `initializer` may be invoked any\n     * number of times. This behavior in the constructor can be useful during testing and is not expected to be used in\n     * production.\n     *\n     * Emits an {Initialized} event.\n     */\n    modifier initializer() {\n        // solhint-disable-next-line var-name-mixedcase\n        InitializableStorage storage $ = _getInitializableStorage();\n\n        // Cache values to avoid duplicated sloads\n        bool isTopLevelCall = !$._initializing;\n        uint64 initialized = $._initialized;\n\n        // Allowed calls:\n        // - initialSetup: the contract is not in the initializing state and no previous version was\n        //                 initialized\n        // - construction: the contract is initialized at version 1 (no reininitialization) and the\n        //                 current contract is just being deployed\n        bool initialSetup = initialized == 0 && isTopLevelCall;\n        bool construction = initialized == 1 && address(this).code.length == 0;\n\n        if (!initialSetup && !construction) {\n            revert InvalidInitialization();\n        }\n        $._initialized = 1;\n        if (isTopLevelCall) {\n            $._initializing = true;\n        }\n        _;\n        if (isTopLevelCall) {\n            $._initializing = false;\n            emit Initialized(1);\n        }\n    }\n\n    /**\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\n     * used to initialize parent contracts.\n     *\n     * A reinitializer may be used after the original initialization step. This is essential to configure modules that\n     * are added through upgrades and that require initialization.\n     *\n     * When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\n     * cannot be nested. If one is invoked in the context of another, execution will revert.\n     *\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\n     * a contract, executing them in the right order is up to the developer or operator.\n     *\n     * WARNING: Setting the version to 2**64 - 1 will prevent any future reinitialization.\n     *\n     * Emits an {Initialized} event.\n     */\n    modifier reinitializer(uint64 version) {\n        // solhint-disable-next-line var-name-mixedcase\n        InitializableStorage storage $ = _getInitializableStorage();\n\n        if ($._initializing || $._initialized >= version) {\n            revert InvalidInitialization();\n        }\n        $._initialized = version;\n        $._initializing = true;\n        _;\n        $._initializing = false;\n        emit Initialized(version);\n    }\n\n    /**\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\n     */\n    modifier onlyInitializing() {\n        _checkInitializing();\n        _;\n    }\n\n    /**\n     * @dev Reverts if the contract is not in an initializing state. See {onlyInitializing}.\n     */\n    function _checkInitializing() internal view virtual {\n        if (!_isInitializing()) {\n            revert NotInitializing();\n        }\n    }\n\n    /**\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\n     * through proxies.\n     *\n     * Emits an {Initialized} event the first time it is successfully executed.\n     */\n    function _disableInitializers() internal virtual {\n        // solhint-disable-next-line var-name-mixedcase\n        InitializableStorage storage $ = _getInitializableStorage();\n\n        if ($._initializing) {\n            revert InvalidInitialization();\n        }\n        if ($._initialized != type(uint64).max) {\n            $._initialized = type(uint64).max;\n            emit Initialized(type(uint64).max);\n        }\n    }\n\n    /**\n     * @dev Returns the highest version that has been initialized. See {reinitializer}.\n     */\n    function _getInitializedVersion() internal view returns (uint64) {\n        return _getInitializableStorage()._initialized;\n    }\n\n    /**\n     * @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}.\n     */\n    function _isInitializing() internal view returns (bool) {\n        return _getInitializableStorage()._initializing;\n    }\n\n    /**\n     * @dev Returns a pointer to the storage namespace.\n     */\n    // solhint-disable-next-line var-name-mixedcase\n    function _getInitializableStorage() private pure returns (InitializableStorage storage $) {\n        assembly {\n            $.slot := INITIALIZABLE_STORAGE\n        }\n    }\n}\n"
			},
			"contracts/RewardToken.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.20;\r\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\r\n\r\ncontract RewardToken is ERC20{\r\n    constructor() ERC20(\"RewardToken\",\"RWD\"){}\r\n\r\n    function mint(uint amount) public{\r\n        _mint(msg.sender,amount);\r\n    }\r\n}"
			},
			"contracts/StakeToken.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.20;\r\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\r\n\r\ncontract StakeToken is ERC20{\r\n    constructor() ERC20(\"StakeToken\",\"STK\"){}\r\n\r\n    function mint(uint amount) public{\r\n        _mint(msg.sender,amount);\r\n    }\r\n}"
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC20Metadata} from \"./extensions/IERC20Metadata.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {IERC20Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC-20\n * applications.\n */\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\n    mapping(address account => uint256) private _balances;\n\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `value`.\n     */\n    function transfer(address to, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Skips emitting an {Approval} event indicating an allowance update. This is not\n     * required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `value`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `value`.\n     */\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, value);\n        _transfer(from, to, value);\n        return true;\n    }\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _transfer(address from, address to, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        if (to == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(from, to, value);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n     * this function.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _update(address from, address to, uint256 value) internal virtual {\n        if (from == address(0)) {\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\n            _totalSupply += value;\n        } else {\n            uint256 fromBalance = _balances[from];\n            if (fromBalance < value) {\n                revert ERC20InsufficientBalance(from, fromBalance, value);\n            }\n            unchecked {\n                // Overflow not possible: value <= fromBalance <= totalSupply.\n                _balances[from] = fromBalance - value;\n            }\n        }\n\n        if (to == address(0)) {\n            unchecked {\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\n                _totalSupply -= value;\n            }\n        } else {\n            unchecked {\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\n                _balances[to] += value;\n            }\n        }\n\n        emit Transfer(from, to, value);\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n     * Relies on the `_update` mechanism\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _mint(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(address(0), account, value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n     * Relies on the `_update` mechanism.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead\n     */\n    function _burn(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        _update(account, address(0), value);\n    }\n\n    /**\n     * @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address owner, address spender, uint256 value) internal {\n        _approve(owner, spender, value, true);\n    }\n\n    /**\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n     *\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n     * `Approval` event during `transferFrom` operations.\n     *\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n     * true using the following override:\n     *\n     * ```solidity\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     *     super._approve(owner, spender, value, true);\n     * }\n     * ```\n     *\n     * Requirements are the same as {_approve}.\n     */\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\n        if (owner == address(0)) {\n            revert ERC20InvalidApprover(address(0));\n        }\n        if (spender == address(0)) {\n            revert ERC20InvalidSpender(address(0));\n        }\n        _allowances[owner][spender] = value;\n        if (emitEvent) {\n            emit Approval(owner, spender, value);\n        }\n    }\n\n    /**\n     * @dev Updates `owner` s allowance for `spender` based on spent `value`.\n     *\n     * Does not update the allowance value in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Does not emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance != type(uint256).max) {\n            if (currentAllowance < value) {\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\n            }\n            unchecked {\n                _approve(owner, spender, currentAllowance - value, false);\n            }\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\nimport {Initializable} from \"../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract ContextUpgradeable is Initializable {\n    function __Context_init() internal onlyInitializing {\n    }\n\n    function __Context_init_unchained() internal onlyInitializing {\n    }\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC-20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC-721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC-1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC-20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol": {
				"OwnableUpgradeable": {
					"abi": [
						{
							"inputs": [],
							"name": "InvalidInitialization",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotInitializing",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint64",
									"name": "version",
									"type": "uint64"
								}
							],
							"name": "Initialized",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"errors": {
							"InvalidInitialization()": [
								{
									"details": "The contract is already initialized."
								}
							],
							"NotInitializing()": [
								{
									"details": "The contract is not initializing."
								}
							],
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"events": {
							"Initialized(uint64)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							}
						},
						"kind": "dev",
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":\"OwnableUpgradeable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":{\"keccak256\":\"0xc163fcf9bb10138631a9ba5564df1fa25db9adff73bd9ee868a8ae1858fe093a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9706d43a0124053d9880f6e31a59f31bc0a6a3dc1acd66ce0a16e1111658c5f6\",\"dweb:/ipfs/QmUFmfowzkRwGtDu36cXV9SPTBHJ3n7dG9xQiK5B28jTf2\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol": {
				"Initializable": {
					"abi": [
						{
							"inputs": [],
							"name": "InvalidInitialization",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotInitializing",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint64",
									"name": "version",
									"type": "uint64"
								}
							],
							"name": "Initialized",
							"type": "event"
						}
					],
					"devdoc": {
						"custom:oz-upgrades-unsafe-allow": "constructor constructor() {     _disableInitializers(); } ``` ====",
						"details": "This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer function so it can only be called once. The {initializer} modifier provided by this contract will have this effect. The initialization functions use a version number. Once a version number is used, it is consumed and cannot be reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in case an upgrade adds a module that needs to be initialized. For example: [.hljs-theme-light.nopadding] ```solidity contract MyToken is ERC20Upgradeable {     function initialize() initializer public {         __ERC20_init(\"MyToken\", \"MTK\");     } } contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {     function initializeV2() reinitializer(2) public {         __ERC20Permit_init(\"MyToken\");     } } ``` TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}. CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure that all initializers are idempotent. This is not verified automatically as constructors are by Solidity. [CAUTION] ==== Avoid leaving a contract uninitialized. An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke the {_disableInitializers} function in the constructor to automatically lock it when it is deployed: [.hljs-theme-light.nopadding] ```",
						"errors": {
							"InvalidInitialization()": [
								{
									"details": "The contract is already initialized."
								}
							],
							"NotInitializing()": [
								{
									"details": "The contract is not initializing."
								}
							]
						},
						"events": {
							"Initialized(uint64)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							}
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"}],\"devdoc\":{\"custom:oz-upgrades-unsafe-allow\":\"constructor constructor() {     _disableInitializers(); } ``` ====\",\"details\":\"This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer function so it can only be called once. The {initializer} modifier provided by this contract will have this effect. The initialization functions use a version number. Once a version number is used, it is consumed and cannot be reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in case an upgrade adds a module that needs to be initialized. For example: [.hljs-theme-light.nopadding] ```solidity contract MyToken is ERC20Upgradeable {     function initialize() initializer public {         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");     } } contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {     function initializeV2() reinitializer(2) public {         __ERC20Permit_init(\\\"MyToken\\\");     } } ``` TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}. CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure that all initializers are idempotent. This is not verified automatically as constructors are by Solidity. [CAUTION] ==== Avoid leaving a contract uninitialized. An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke the {_disableInitializers} function in the constructor to automatically lock it when it is deployed: [.hljs-theme-light.nopadding] ```\",\"errors\":{\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":\"Initializable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol": {
				"ContextUpgradeable": {
					"abi": [
						{
							"inputs": [],
							"name": "InvalidInitialization",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotInitializing",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint64",
									"name": "version",
									"type": "uint64"
								}
							],
							"name": "Initialized",
							"type": "event"
						}
					],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"errors": {
							"InvalidInitialization()": [
								{
									"details": "The contract is already initialized."
								}
							],
							"NotInitializing()": [
								{
									"details": "The contract is not initializing."
								}
							]
						},
						"events": {
							"Initialized(uint64)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							}
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"}],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"errors\":{\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":\"ContextUpgradeable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"IERC1155Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.",
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"constructor": {
								"details": "Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xbf61ab2ae1d575a17ea58fbb99ca232baddcc4e0eeea180e84cbc74b0c348b31\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4e0968705bad99747a8e5288aa008678c2be2f471f919dce3925a3cc4f1dee09\",\"dweb:/ipfs/QmbAFnCQfo4tw6ssfQSjhA5LzwHWNNryXN8bX7ty8jiqqn\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 654,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 660,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 662,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 664,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 666,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-20 standard as defined in the ERC.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"IERC20Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the optional metadata functions from the ERC-20 standard.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC-20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/RewardToken.sol": {
				"RewardToken": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "mint",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/RewardToken.sol\":118:283  contract RewardToken is ERC20{... */\n  mstore(0x40, 0x80)\n    /* \"contracts/RewardToken.sol\":154:196  constructor() ERC20(\"RewardToken\",\"RWD\"){} */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1601:1714  constructor(string memory name_, string memory symbol_) {... */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x0b\n  dup2\n  mstore\n  0x20\n  add\n  0x526577617264546f6b656e000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x03\n  dup2\n  mstore\n  0x20\n  add\n  0x5257440000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1675:1680  name_ */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1667:1672  _name */\n  0x03\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1667:1680  _name = name_ */\n  swap1\n  dup2\n  tag_5\n  swap2\n  swap1\n  tag_6\n  jump\t// in\ntag_5:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1700:1707  symbol_ */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1690:1697  _symbol */\n  0x04\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1690:1707  _symbol = symbol_ */\n  swap1\n  dup2\n  tag_7\n  swap2\n  swap1\n  tag_6\n  jump\t// in\ntag_7:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1601:1714  constructor(string memory name_, string memory symbol_) {... */\n  pop\n  pop\n    /* \"contracts/RewardToken.sol\":118:283  contract RewardToken is ERC20{... */\n  jump(tag_9)\n    /* \"#utility.yul\":7:106   */\ntag_10:\n    /* \"#utility.yul\":59:65   */\n  0x00\n    /* \"#utility.yul\":93:98   */\n  dup2\n    /* \"#utility.yul\":87:99   */\n  mload\n    /* \"#utility.yul\":77:99   */\n  swap1\n  pop\n    /* \"#utility.yul\":7:106   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":112:292   */\ntag_11:\n    /* \"#utility.yul\":160:237   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":157:158   */\n  0x00\n    /* \"#utility.yul\":150:238   */\n  mstore\n    /* \"#utility.yul\":257:261   */\n  0x41\n    /* \"#utility.yul\":254:255   */\n  0x04\n    /* \"#utility.yul\":247:262   */\n  mstore\n    /* \"#utility.yul\":281:285   */\n  0x24\n    /* \"#utility.yul\":278:279   */\n  0x00\n    /* \"#utility.yul\":271:286   */\n  revert\n    /* \"#utility.yul\":298:478   */\ntag_12:\n    /* \"#utility.yul\":346:423   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":343:344   */\n  0x00\n    /* \"#utility.yul\":336:424   */\n  mstore\n    /* \"#utility.yul\":443:447   */\n  0x22\n    /* \"#utility.yul\":440:441   */\n  0x04\n    /* \"#utility.yul\":433:448   */\n  mstore\n    /* \"#utility.yul\":467:471   */\n  0x24\n    /* \"#utility.yul\":464:465   */\n  0x00\n    /* \"#utility.yul\":457:472   */\n  revert\n    /* \"#utility.yul\":484:804   */\ntag_13:\n    /* \"#utility.yul\":528:534   */\n  0x00\n    /* \"#utility.yul\":565:566   */\n  0x02\n    /* \"#utility.yul\":559:563   */\n  dup3\n    /* \"#utility.yul\":555:567   */\n  div\n    /* \"#utility.yul\":545:567   */\n  swap1\n  pop\n    /* \"#utility.yul\":612:613   */\n  0x01\n    /* \"#utility.yul\":606:610   */\n  dup3\n    /* \"#utility.yul\":602:614   */\n  and\n    /* \"#utility.yul\":633:651   */\n  dup1\n    /* \"#utility.yul\":623:704   */\n  tag_35\n  jumpi\n    /* \"#utility.yul\":689:693   */\n  0x7f\n    /* \"#utility.yul\":681:687   */\n  dup3\n    /* \"#utility.yul\":677:694   */\n  and\n    /* \"#utility.yul\":667:694   */\n  swap2\n  pop\n    /* \"#utility.yul\":623:704   */\ntag_35:\n    /* \"#utility.yul\":751:753   */\n  0x20\n    /* \"#utility.yul\":743:749   */\n  dup3\n    /* \"#utility.yul\":740:754   */\n  lt\n    /* \"#utility.yul\":720:738   */\n  dup2\n    /* \"#utility.yul\":717:755   */\n  sub\n    /* \"#utility.yul\":714:798   */\n  tag_36\n  jumpi\n    /* \"#utility.yul\":770:788   */\n  tag_37\n  tag_12\n  jump\t// in\ntag_37:\n    /* \"#utility.yul\":714:798   */\ntag_36:\n    /* \"#utility.yul\":535:804   */\n  pop\n    /* \"#utility.yul\":484:804   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":810:951   */\ntag_14:\n    /* \"#utility.yul\":859:863   */\n  0x00\n    /* \"#utility.yul\":882:885   */\n  dup2\n    /* \"#utility.yul\":874:885   */\n  swap1\n  pop\n    /* \"#utility.yul\":905:908   */\n  dup2\n    /* \"#utility.yul\":902:903   */\n  0x00\n    /* \"#utility.yul\":895:909   */\n  mstore\n    /* \"#utility.yul\":939:943   */\n  0x20\n    /* \"#utility.yul\":936:937   */\n  0x00\n    /* \"#utility.yul\":926:944   */\n  keccak256\n    /* \"#utility.yul\":918:944   */\n  swap1\n  pop\n    /* \"#utility.yul\":810:951   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":957:1050   */\ntag_15:\n    /* \"#utility.yul\":994:1000   */\n  0x00\n    /* \"#utility.yul\":1041:1043   */\n  0x20\n    /* \"#utility.yul\":1036:1038   */\n  0x1f\n    /* \"#utility.yul\":1029:1034   */\n  dup4\n    /* \"#utility.yul\":1025:1039   */\n  add\n    /* \"#utility.yul\":1021:1044   */\n  div\n    /* \"#utility.yul\":1011:1044   */\n  swap1\n  pop\n    /* \"#utility.yul\":957:1050   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1056:1163   */\ntag_16:\n    /* \"#utility.yul\":1100:1108   */\n  0x00\n    /* \"#utility.yul\":1150:1155   */\n  dup3\n    /* \"#utility.yul\":1144:1148   */\n  dup3\n    /* \"#utility.yul\":1140:1156   */\n  shl\n    /* \"#utility.yul\":1119:1156   */\n  swap1\n  pop\n    /* \"#utility.yul\":1056:1163   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1169:1562   */\ntag_17:\n    /* \"#utility.yul\":1238:1244   */\n  0x00\n    /* \"#utility.yul\":1288:1289   */\n  0x08\n    /* \"#utility.yul\":1276:1286   */\n  dup4\n    /* \"#utility.yul\":1272:1290   */\n  mul\n    /* \"#utility.yul\":1311:1408   */\n  tag_42\n    /* \"#utility.yul\":1341:1407   */\n  0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":1330:1339   */\n  dup3\n    /* \"#utility.yul\":1311:1408   */\n  tag_16\n  jump\t// in\ntag_42:\n    /* \"#utility.yul\":1429:1468   */\n  tag_43\n    /* \"#utility.yul\":1459:1467   */\n  dup7\n    /* \"#utility.yul\":1448:1457   */\n  dup4\n    /* \"#utility.yul\":1429:1468   */\n  tag_16\n  jump\t// in\ntag_43:\n    /* \"#utility.yul\":1417:1468   */\n  swap6\n  pop\n    /* \"#utility.yul\":1501:1505   */\n  dup1\n    /* \"#utility.yul\":1497:1506   */\n  not\n    /* \"#utility.yul\":1490:1495   */\n  dup5\n    /* \"#utility.yul\":1486:1507   */\n  and\n    /* \"#utility.yul\":1477:1507   */\n  swap4\n  pop\n    /* \"#utility.yul\":1550:1554   */\n  dup1\n    /* \"#utility.yul\":1540:1548   */\n  dup7\n    /* \"#utility.yul\":1536:1555   */\n  and\n    /* \"#utility.yul\":1529:1534   */\n  dup5\n    /* \"#utility.yul\":1526:1556   */\n  or\n    /* \"#utility.yul\":1516:1556   */\n  swap3\n  pop\n    /* \"#utility.yul\":1245:1562   */\n  pop\n  pop\n    /* \"#utility.yul\":1169:1562   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1568:1645   */\ntag_18:\n    /* \"#utility.yul\":1605:1612   */\n  0x00\n    /* \"#utility.yul\":1634:1639   */\n  dup2\n    /* \"#utility.yul\":1623:1639   */\n  swap1\n  pop\n    /* \"#utility.yul\":1568:1645   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1651:1711   */\ntag_19:\n    /* \"#utility.yul\":1679:1682   */\n  0x00\n    /* \"#utility.yul\":1700:1705   */\n  dup2\n    /* \"#utility.yul\":1693:1705   */\n  swap1\n  pop\n    /* \"#utility.yul\":1651:1711   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1717:1859   */\ntag_20:\n    /* \"#utility.yul\":1767:1776   */\n  0x00\n    /* \"#utility.yul\":1800:1853   */\n  tag_47\n    /* \"#utility.yul\":1818:1852   */\n  tag_48\n    /* \"#utility.yul\":1827:1851   */\n  tag_49\n    /* \"#utility.yul\":1845:1850   */\n  dup5\n    /* \"#utility.yul\":1827:1851   */\n  tag_18\n  jump\t// in\ntag_49:\n    /* \"#utility.yul\":1818:1852   */\n  tag_19\n  jump\t// in\ntag_48:\n    /* \"#utility.yul\":1800:1853   */\n  tag_18\n  jump\t// in\ntag_47:\n    /* \"#utility.yul\":1787:1853   */\n  swap1\n  pop\n    /* \"#utility.yul\":1717:1859   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1865:1940   */\ntag_21:\n    /* \"#utility.yul\":1908:1911   */\n  0x00\n    /* \"#utility.yul\":1929:1934   */\n  dup2\n    /* \"#utility.yul\":1922:1934   */\n  swap1\n  pop\n    /* \"#utility.yul\":1865:1940   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1946:2215   */\ntag_22:\n    /* \"#utility.yul\":2056:2095   */\n  tag_52\n    /* \"#utility.yul\":2087:2094   */\n  dup4\n    /* \"#utility.yul\":2056:2095   */\n  tag_20\n  jump\t// in\ntag_52:\n    /* \"#utility.yul\":2117:2208   */\n  tag_53\n    /* \"#utility.yul\":2166:2207   */\n  tag_54\n    /* \"#utility.yul\":2190:2206   */\n  dup3\n    /* \"#utility.yul\":2166:2207   */\n  tag_21\n  jump\t// in\ntag_54:\n    /* \"#utility.yul\":2158:2164   */\n  dup5\n    /* \"#utility.yul\":2151:2155   */\n  dup5\n    /* \"#utility.yul\":2145:2156   */\n  sload\n    /* \"#utility.yul\":2117:2208   */\n  tag_17\n  jump\t// in\ntag_53:\n    /* \"#utility.yul\":2111:2115   */\n  dup3\n    /* \"#utility.yul\":2104:2209   */\n  sstore\n    /* \"#utility.yul\":2022:2215   */\n  pop\n    /* \"#utility.yul\":1946:2215   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2221:2294   */\ntag_23:\n    /* \"#utility.yul\":2266:2269   */\n  0x00\n    /* \"#utility.yul\":2221:2294   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":2300:2489   */\ntag_24:\n    /* \"#utility.yul\":2377:2409   */\n  tag_57\n  tag_23\n  jump\t// in\ntag_57:\n    /* \"#utility.yul\":2418:2483   */\n  tag_58\n    /* \"#utility.yul\":2476:2482   */\n  dup2\n    /* \"#utility.yul\":2468:2474   */\n  dup5\n    /* \"#utility.yul\":2462:2466   */\n  dup5\n    /* \"#utility.yul\":2418:2483   */\n  tag_22\n  jump\t// in\ntag_58:\n    /* \"#utility.yul\":2353:2489   */\n  pop\n    /* \"#utility.yul\":2300:2489   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2495:2681   */\ntag_25:\n    /* \"#utility.yul\":2555:2675   */\ntag_60:\n    /* \"#utility.yul\":2572:2575   */\n  dup2\n    /* \"#utility.yul\":2565:2570   */\n  dup2\n    /* \"#utility.yul\":2562:2576   */\n  lt\n    /* \"#utility.yul\":2555:2675   */\n  iszero\n  tag_62\n  jumpi\n    /* \"#utility.yul\":2626:2665   */\n  tag_63\n    /* \"#utility.yul\":2663:2664   */\n  0x00\n    /* \"#utility.yul\":2656:2661   */\n  dup3\n    /* \"#utility.yul\":2626:2665   */\n  tag_24\n  jump\t// in\ntag_63:\n    /* \"#utility.yul\":2599:2600   */\n  0x01\n    /* \"#utility.yul\":2592:2597   */\n  dup2\n    /* \"#utility.yul\":2588:2601   */\n  add\n    /* \"#utility.yul\":2579:2601   */\n  swap1\n  pop\n    /* \"#utility.yul\":2555:2675   */\n  jump(tag_60)\ntag_62:\n    /* \"#utility.yul\":2495:2681   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2687:3230   */\ntag_26:\n    /* \"#utility.yul\":2788:2790   */\n  0x1f\n    /* \"#utility.yul\":2783:2786   */\n  dup3\n    /* \"#utility.yul\":2780:2791   */\n  gt\n    /* \"#utility.yul\":2777:3223   */\n  iszero\n  tag_65\n  jumpi\n    /* \"#utility.yul\":2822:2860   */\n  tag_66\n    /* \"#utility.yul\":2854:2859   */\n  dup2\n    /* \"#utility.yul\":2822:2860   */\n  tag_14\n  jump\t// in\ntag_66:\n    /* \"#utility.yul\":2906:2935   */\n  tag_67\n    /* \"#utility.yul\":2924:2934   */\n  dup5\n    /* \"#utility.yul\":2906:2935   */\n  tag_15\n  jump\t// in\ntag_67:\n    /* \"#utility.yul\":2896:2904   */\n  dup2\n    /* \"#utility.yul\":2892:2936   */\n  add\n    /* \"#utility.yul\":3089:3091   */\n  0x20\n    /* \"#utility.yul\":3077:3087   */\n  dup6\n    /* \"#utility.yul\":3074:3092   */\n  lt\n    /* \"#utility.yul\":3071:3120   */\n  iszero\n  tag_68\n  jumpi\n    /* \"#utility.yul\":3110:3118   */\n  dup2\n    /* \"#utility.yul\":3095:3118   */\n  swap1\n  pop\n    /* \"#utility.yul\":3071:3120   */\ntag_68:\n    /* \"#utility.yul\":3133:3213   */\n  tag_69\n    /* \"#utility.yul\":3189:3211   */\n  tag_70\n    /* \"#utility.yul\":3207:3210   */\n  dup6\n    /* \"#utility.yul\":3189:3211   */\n  tag_15\n  jump\t// in\ntag_70:\n    /* \"#utility.yul\":3179:3187   */\n  dup4\n    /* \"#utility.yul\":3175:3212   */\n  add\n    /* \"#utility.yul\":3162:3173   */\n  dup3\n    /* \"#utility.yul\":3133:3213   */\n  tag_25\n  jump\t// in\ntag_69:\n    /* \"#utility.yul\":2792:3223   */\n  pop\n  pop\n    /* \"#utility.yul\":2777:3223   */\ntag_65:\n    /* \"#utility.yul\":2687:3230   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3236:3353   */\ntag_27:\n    /* \"#utility.yul\":3290:3298   */\n  0x00\n    /* \"#utility.yul\":3340:3345   */\n  dup3\n    /* \"#utility.yul\":3334:3338   */\n  dup3\n    /* \"#utility.yul\":3330:3346   */\n  shr\n    /* \"#utility.yul\":3309:3346   */\n  swap1\n  pop\n    /* \"#utility.yul\":3236:3353   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3359:3528   */\ntag_28:\n    /* \"#utility.yul\":3403:3409   */\n  0x00\n    /* \"#utility.yul\":3436:3487   */\n  tag_73\n    /* \"#utility.yul\":3484:3485   */\n  0x00\n    /* \"#utility.yul\":3480:3486   */\n  not\n    /* \"#utility.yul\":3472:3477   */\n  dup5\n    /* \"#utility.yul\":3469:3470   */\n  0x08\n    /* \"#utility.yul\":3465:3478   */\n  mul\n    /* \"#utility.yul\":3436:3487   */\n  tag_27\n  jump\t// in\ntag_73:\n    /* \"#utility.yul\":3432:3488   */\n  not\n    /* \"#utility.yul\":3517:3521   */\n  dup1\n    /* \"#utility.yul\":3511:3515   */\n  dup4\n    /* \"#utility.yul\":3507:3522   */\n  and\n    /* \"#utility.yul\":3497:3522   */\n  swap2\n  pop\n    /* \"#utility.yul\":3410:3528   */\n  pop\n    /* \"#utility.yul\":3359:3528   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3533:3828   */\ntag_29:\n    /* \"#utility.yul\":3609:3613   */\n  0x00\n    /* \"#utility.yul\":3755:3784   */\n  tag_75\n    /* \"#utility.yul\":3780:3783   */\n  dup4\n    /* \"#utility.yul\":3774:3778   */\n  dup4\n    /* \"#utility.yul\":3755:3784   */\n  tag_28\n  jump\t// in\ntag_75:\n    /* \"#utility.yul\":3747:3784   */\n  swap2\n  pop\n    /* \"#utility.yul\":3817:3820   */\n  dup3\n    /* \"#utility.yul\":3814:3815   */\n  0x02\n    /* \"#utility.yul\":3810:3821   */\n  mul\n    /* \"#utility.yul\":3804:3808   */\n  dup3\n    /* \"#utility.yul\":3801:3822   */\n  or\n    /* \"#utility.yul\":3793:3822   */\n  swap1\n  pop\n    /* \"#utility.yul\":3533:3828   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3833:5228   */\ntag_6:\n    /* \"#utility.yul\":3950:3987   */\n  tag_77\n    /* \"#utility.yul\":3983:3986   */\n  dup3\n    /* \"#utility.yul\":3950:3987   */\n  tag_10\n  jump\t// in\ntag_77:\n    /* \"#utility.yul\":4052:4070   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":4044:4050   */\n  dup2\n    /* \"#utility.yul\":4041:4071   */\n  gt\n    /* \"#utility.yul\":4038:4094   */\n  iszero\n  tag_78\n  jumpi\n    /* \"#utility.yul\":4074:4092   */\n  tag_79\n  tag_11\n  jump\t// in\ntag_79:\n    /* \"#utility.yul\":4038:4094   */\ntag_78:\n    /* \"#utility.yul\":4118:4156   */\n  tag_80\n    /* \"#utility.yul\":4150:4154   */\n  dup3\n    /* \"#utility.yul\":4144:4155   */\n  sload\n    /* \"#utility.yul\":4118:4156   */\n  tag_13\n  jump\t// in\ntag_80:\n    /* \"#utility.yul\":4203:4270   */\n  tag_81\n    /* \"#utility.yul\":4263:4269   */\n  dup3\n    /* \"#utility.yul\":4255:4261   */\n  dup3\n    /* \"#utility.yul\":4249:4253   */\n  dup6\n    /* \"#utility.yul\":4203:4270   */\n  tag_26\n  jump\t// in\ntag_81:\n    /* \"#utility.yul\":4297:4298   */\n  0x00\n    /* \"#utility.yul\":4321:4325   */\n  0x20\n    /* \"#utility.yul\":4308:4325   */\n  swap1\n  pop\n    /* \"#utility.yul\":4353:4355   */\n  0x1f\n    /* \"#utility.yul\":4345:4351   */\n  dup4\n    /* \"#utility.yul\":4342:4356   */\n  gt\n    /* \"#utility.yul\":4370:4371   */\n  0x01\n    /* \"#utility.yul\":4365:4983   */\n  dup2\n  eq\n  tag_83\n  jumpi\n    /* \"#utility.yul\":5027:5028   */\n  0x00\n    /* \"#utility.yul\":5044:5050   */\n  dup5\n    /* \"#utility.yul\":5041:5118   */\n  iszero\n  tag_84\n  jumpi\n    /* \"#utility.yul\":5093:5102   */\n  dup3\n    /* \"#utility.yul\":5088:5091   */\n  dup8\n    /* \"#utility.yul\":5084:5103   */\n  add\n    /* \"#utility.yul\":5078:5104   */\n  mload\n    /* \"#utility.yul\":5069:5104   */\n  swap1\n  pop\n    /* \"#utility.yul\":5041:5118   */\ntag_84:\n    /* \"#utility.yul\":5144:5211   */\n  tag_85\n    /* \"#utility.yul\":5204:5210   */\n  dup6\n    /* \"#utility.yul\":5197:5202   */\n  dup3\n    /* \"#utility.yul\":5144:5211   */\n  tag_29\n  jump\t// in\ntag_85:\n    /* \"#utility.yul\":5138:5142   */\n  dup7\n    /* \"#utility.yul\":5131:5212   */\n  sstore\n    /* \"#utility.yul\":5000:5222   */\n  pop\n    /* \"#utility.yul\":4335:5222   */\n  jump(tag_82)\n    /* \"#utility.yul\":4365:4983   */\ntag_83:\n    /* \"#utility.yul\":4417:4421   */\n  0x1f\n    /* \"#utility.yul\":4413:4422   */\n  not\n    /* \"#utility.yul\":4405:4411   */\n  dup5\n    /* \"#utility.yul\":4401:4423   */\n  and\n    /* \"#utility.yul\":4451:4488   */\n  tag_86\n    /* \"#utility.yul\":4483:4487   */\n  dup7\n    /* \"#utility.yul\":4451:4488   */\n  tag_14\n  jump\t// in\ntag_86:\n    /* \"#utility.yul\":4510:4511   */\n  0x00\n    /* \"#utility.yul\":4524:4732   */\ntag_87:\n    /* \"#utility.yul\":4538:4545   */\n  dup3\n    /* \"#utility.yul\":4535:4536   */\n  dup2\n    /* \"#utility.yul\":4532:4546   */\n  lt\n    /* \"#utility.yul\":4524:4732   */\n  iszero\n  tag_89\n  jumpi\n    /* \"#utility.yul\":4617:4626   */\n  dup5\n    /* \"#utility.yul\":4612:4615   */\n  dup10\n    /* \"#utility.yul\":4608:4627   */\n  add\n    /* \"#utility.yul\":4602:4628   */\n  mload\n    /* \"#utility.yul\":4594:4600   */\n  dup3\n    /* \"#utility.yul\":4587:4629   */\n  sstore\n    /* \"#utility.yul\":4668:4669   */\n  0x01\n    /* \"#utility.yul\":4660:4666   */\n  dup3\n    /* \"#utility.yul\":4656:4670   */\n  add\n    /* \"#utility.yul\":4646:4670   */\n  swap2\n  pop\n    /* \"#utility.yul\":4715:4717   */\n  0x20\n    /* \"#utility.yul\":4704:4713   */\n  dup6\n    /* \"#utility.yul\":4700:4718   */\n  add\n    /* \"#utility.yul\":4687:4718   */\n  swap5\n  pop\n    /* \"#utility.yul\":4561:4565   */\n  0x20\n    /* \"#utility.yul\":4558:4559   */\n  dup2\n    /* \"#utility.yul\":4554:4566   */\n  add\n    /* \"#utility.yul\":4549:4566   */\n  swap1\n  pop\n    /* \"#utility.yul\":4524:4732   */\n  jump(tag_87)\ntag_89:\n    /* \"#utility.yul\":4760:4766   */\n  dup7\n    /* \"#utility.yul\":4751:4758   */\n  dup4\n    /* \"#utility.yul\":4748:4767   */\n  lt\n    /* \"#utility.yul\":4745:4924   */\n  iszero\n  tag_90\n  jumpi\n    /* \"#utility.yul\":4818:4827   */\n  dup5\n    /* \"#utility.yul\":4813:4816   */\n  dup10\n    /* \"#utility.yul\":4809:4828   */\n  add\n    /* \"#utility.yul\":4803:4829   */\n  mload\n    /* \"#utility.yul\":4861:4909   */\n  tag_91\n    /* \"#utility.yul\":4903:4907   */\n  0x1f\n    /* \"#utility.yul\":4895:4901   */\n  dup10\n    /* \"#utility.yul\":4891:4908   */\n  and\n    /* \"#utility.yul\":4880:4889   */\n  dup3\n    /* \"#utility.yul\":4861:4909   */\n  tag_28\n  jump\t// in\ntag_91:\n    /* \"#utility.yul\":4853:4859   */\n  dup4\n    /* \"#utility.yul\":4846:4910   */\n  sstore\n    /* \"#utility.yul\":4768:4924   */\n  pop\n    /* \"#utility.yul\":4745:4924   */\ntag_90:\n    /* \"#utility.yul\":4970:4971   */\n  0x01\n    /* \"#utility.yul\":4966:4967   */\n  0x02\n    /* \"#utility.yul\":4958:4964   */\n  dup9\n    /* \"#utility.yul\":4954:4968   */\n  mul\n    /* \"#utility.yul\":4950:4972   */\n  add\n    /* \"#utility.yul\":4944:4948   */\n  dup9\n    /* \"#utility.yul\":4937:4973   */\n  sstore\n    /* \"#utility.yul\":4372:4983   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":4335:5222   */\ntag_82:\n  pop\n    /* \"#utility.yul\":3925:5228   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":3833:5228   */\n  pop\n  pop\n  jump\t// out\n    /* \"contracts/RewardToken.sol\":118:283  contract RewardToken is ERC20{... */\ntag_9:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/RewardToken.sol\":118:283  contract RewardToken is ERC20{... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x70a08231\n      gt\n      tag_13\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_9\n      jumpi\n      dup1\n      0xa0712d68\n      eq\n      tag_10\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_11\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_12\n      jumpi\n      jump(tag_2)\n    tag_13:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1779:1868  function name() public view virtual returns (string memory) {... */\n    tag_3:\n      tag_14\n      tag_15\n      jump\t// in\n    tag_14:\n      mload(0x40)\n      tag_16\n      swap2\n      swap1\n      tag_17\n      jump\t// in\n    tag_16:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3998:4184  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_4:\n      tag_18\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_19\n      swap2\n      swap1\n      tag_20\n      jump\t// in\n    tag_19:\n      tag_21\n      jump\t// in\n    tag_18:\n      mload(0x40)\n      tag_22\n      swap2\n      swap1\n      tag_23\n      jump\t// in\n    tag_22:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2849:2946  function totalSupply() public view virtual returns (uint256) {... */\n    tag_5:\n      tag_24\n      tag_25\n      jump\t// in\n    tag_24:\n      mload(0x40)\n      tag_26\n      swap2\n      swap1\n      tag_27\n      jump\t// in\n    tag_26:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4776:5020  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_6:\n      tag_28\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_29\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_29:\n      tag_31\n      jump\t// in\n    tag_28:\n      mload(0x40)\n      tag_32\n      swap2\n      swap1\n      tag_23\n      jump\t// in\n    tag_32:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2707:2789  function decimals() public view virtual returns (uint8) {... */\n    tag_7:\n      tag_33\n      tag_34\n      jump\t// in\n    tag_33:\n      mload(0x40)\n      tag_35\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_35:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3004:3120  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_8:\n      tag_37\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_38\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_38:\n      tag_40\n      jump\t// in\n    tag_37:\n      mload(0x40)\n      tag_41\n      swap2\n      swap1\n      tag_27\n      jump\t// in\n    tag_41:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1981:2074  function symbol() public view virtual returns (string memory) {... */\n    tag_9:\n      tag_42\n      tag_43\n      jump\t// in\n    tag_42:\n      mload(0x40)\n      tag_44\n      swap2\n      swap1\n      tag_17\n      jump\t// in\n    tag_44:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/RewardToken.sol\":204:280  function mint(uint amount) public{... */\n    tag_10:\n      tag_45\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_46\n      swap2\n      swap1\n      tag_47\n      jump\t// in\n    tag_46:\n      tag_48\n      jump\t// in\n    tag_45:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3315:3493  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_11:\n      tag_49\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_50\n      swap2\n      swap1\n      tag_20\n      jump\t// in\n    tag_50:\n      tag_51\n      jump\t// in\n    tag_49:\n      mload(0x40)\n      tag_52\n      swap2\n      swap1\n      tag_23\n      jump\t// in\n    tag_52:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3551:3691  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_12:\n      tag_53\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_54\n      swap2\n      swap1\n      tag_55\n      jump\t// in\n    tag_54:\n      tag_56\n      jump\t// in\n    tag_53:\n      mload(0x40)\n      tag_57\n      swap2\n      swap1\n      tag_27\n      jump\t// in\n    tag_57:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1779:1868  function name() public view virtual returns (string memory) {... */\n    tag_15:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1824:1837  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1856:1861  _name */\n      0x03\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1849:1861  return _name */\n      dup1\n      sload\n      tag_59\n      swap1\n      tag_60\n      jump\t// in\n    tag_59:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_61\n      swap1\n      tag_60\n      jump\t// in\n    tag_61:\n      dup1\n      iszero\n      tag_62\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_63\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_62)\n    tag_63:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_64:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_64\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_62:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1779:1868  function name() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3998:4184  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_21:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4071:4075  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4087:4100  address owner */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4103:4115  _msgSender() */\n      tag_66\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4103:4113  _msgSender */\n      tag_67\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4103:4115  _msgSender() */\n      jump\t// in\n    tag_66:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4087:4115  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4125:4156  _approve(owner, spender, value) */\n      tag_68\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4134:4139  owner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4141:4148  spender */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4150:4155  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4125:4133  _approve */\n      tag_69\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4125:4156  _approve(owner, spender, value) */\n      jump\t// in\n    tag_68:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4173:4177  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4166:4177  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3998:4184  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2849:2946  function totalSupply() public view virtual returns (uint256) {... */\n    tag_25:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2901:2908  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2927:2939  _totalSupply */\n      sload(0x02)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2920:2939  return _totalSupply */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2849:2946  function totalSupply() public view virtual returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4776:5020  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_31:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4863:4867  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4879:4894  address spender */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4897:4909  _msgSender() */\n      tag_72\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4897:4907  _msgSender */\n      tag_67\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4897:4909  _msgSender() */\n      jump\t// in\n    tag_72:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4879:4909  address spender = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4919:4956  _spendAllowance(from, spender, value) */\n      tag_73\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4935:4939  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4941:4948  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4950:4955  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4919:4934  _spendAllowance */\n      tag_74\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4919:4956  _spendAllowance(from, spender, value) */\n      jump\t// in\n    tag_73:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4966:4992  _transfer(from, to, value) */\n      tag_75\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4976:4980  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4982:4984  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4986:4991  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4966:4975  _transfer */\n      tag_76\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4966:4992  _transfer(from, to, value) */\n      jump\t// in\n    tag_75:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5009:5013  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5002:5013  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4776:5020  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2707:2789  function decimals() public view virtual returns (uint8) {... */\n    tag_34:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2756:2761  uint8 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2780:2782  18 */\n      0x12\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2773:2782  return 18 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2707:2789  function decimals() public view virtual returns (uint8) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3004:3120  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_40:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3069:3076  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3095:3104  _balances */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3095:3113  _balances[account] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3105:3112  account */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3095:3113  _balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3088:3113  return _balances[account] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3004:3120  function balanceOf(address account) public view virtual returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1981:2074  function symbol() public view virtual returns (string memory) {... */\n    tag_43:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2028:2041  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2060:2067  _symbol */\n      0x04\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2053:2067  return _symbol */\n      dup1\n      sload\n      tag_80\n      swap1\n      tag_60\n      jump\t// in\n    tag_80:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_81\n      swap1\n      tag_60\n      jump\t// in\n    tag_81:\n      dup1\n      iszero\n      tag_82\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_83\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_82)\n    tag_83:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_84:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_84\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_82:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1981:2074  function symbol() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/RewardToken.sol\":204:280  function mint(uint amount) public{... */\n    tag_48:\n        /* \"contracts/RewardToken.sol\":248:272  _mint(msg.sender,amount) */\n      tag_86\n        /* \"contracts/RewardToken.sol\":254:264  msg.sender */\n      caller\n        /* \"contracts/RewardToken.sol\":265:271  amount */\n      dup3\n        /* \"contracts/RewardToken.sol\":248:253  _mint */\n      tag_87\n        /* \"contracts/RewardToken.sol\":248:272  _mint(msg.sender,amount) */\n      jump\t// in\n    tag_86:\n        /* \"contracts/RewardToken.sol\":204:280  function mint(uint amount) public{... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3315:3493  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_51:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3384:3388  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3400:3413  address owner */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3416:3428  _msgSender() */\n      tag_89\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3416:3426  _msgSender */\n      tag_67\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3416:3428  _msgSender() */\n      jump\t// in\n    tag_89:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3400:3428  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3438:3465  _transfer(owner, to, value) */\n      tag_90\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3448:3453  owner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3455:3457  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3459:3464  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3438:3447  _transfer */\n      tag_76\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3438:3465  _transfer(owner, to, value) */\n      jump\t// in\n    tag_90:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3482:3486  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3475:3486  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3315:3493  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3551:3691  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_56:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3631:3638  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3657:3668  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3657:3675  _allowances[owner] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3669:3674  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3657:3675  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3657:3684  _allowances[owner][spender] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3676:3683  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3657:3684  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3650:3684  return _allowances[owner][spender] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3551:3691  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n    tag_67:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":709:716  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":728:745  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8726:8854  function _approve(address owner, address spender, uint256 value) internal {... */\n    tag_69:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8810:8847  _approve(owner, spender, value, true) */\n      tag_94\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8819:8824  owner */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8826:8833  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8835:8840  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8842:8846  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8810:8818  _approve */\n      tag_95\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8810:8847  _approve(owner, spender, value, true) */\n      jump\t// in\n    tag_94:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8726:8854  function _approve(address owner, address spender, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10415:10892  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n    tag_74:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10514:10538  uint256 currentAllowance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10541:10566  allowance(owner, spender) */\n      tag_97\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10551:10556  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10558:10565  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10541:10550  allowance */\n      tag_56\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10541:10566  allowance(owner, spender) */\n      jump\t// in\n    tag_97:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10514:10566  uint256 currentAllowance = allowance(owner, spender) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10600:10617  type(uint256).max */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10580:10596  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10580:10617  currentAllowance != type(uint256).max */\n      eq\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10576:10886  if (currentAllowance != type(uint256).max) {... */\n      tag_98\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10656:10661  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10637:10653  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10637:10661  currentAllowance < value */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10633:10763  if (currentAllowance < value) {... */\n      iszero\n      tag_99\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10715:10722  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10724:10740  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10742:10747  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10688:10748  ERC20InsufficientAllowance(spender, currentAllowance, value) */\n      mload(0x40)\n      0xfb8f41b200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_100\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_101\n      jump\t// in\n    tag_100:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10633:10763  if (currentAllowance < value) {... */\n    tag_99:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10804:10861  _approve(owner, spender, currentAllowance - value, false) */\n      tag_102\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10813:10818  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10820:10827  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10848:10853  value */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10829:10845  currentAllowance */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10829:10853  currentAllowance - value */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10855:10860  false */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10804:10812  _approve */\n      tag_95\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10804:10861  _approve(owner, spender, currentAllowance - value, false) */\n      jump\t// in\n    tag_102:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10576:10886  if (currentAllowance != type(uint256).max) {... */\n    tag_98:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10504:10892  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10415:10892  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5393:5693  function _transfer(address from, address to, uint256 value) internal {... */\n    tag_76:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5492:5493  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5476:5494  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5476:5480  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5476:5494  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5472:5558  if (from == address(0)) {... */\n      tag_104\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5544:5545  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5517:5547  ERC20InvalidSender(address(0)) */\n      mload(0x40)\n      0x96c6fd1e00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_105\n      swap2\n      swap1\n      tag_106\n      jump\t// in\n    tag_105:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5472:5558  if (from == address(0)) {... */\n    tag_104:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5585:5586  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5571:5587  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5571:5573  to */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5571:5587  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5567:5653  if (to == address(0)) {... */\n      tag_107\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5639:5640  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5610:5642  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      0xec442f0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_108\n      swap2\n      swap1\n      tag_106\n      jump\t// in\n    tag_108:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5567:5653  if (to == address(0)) {... */\n    tag_107:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5662:5686  _update(from, to, value) */\n      tag_109\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5670:5674  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5676:5678  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5680:5685  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5662:5669  _update */\n      tag_110\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5662:5686  _update(from, to, value) */\n      jump\t// in\n    tag_109:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5393:5693  function _transfer(address from, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7458:7666  function _mint(address account, uint256 value) internal {... */\n    tag_87:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7547:7548  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7528:7549  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7528:7535  account */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7528:7549  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7524:7615  if (account == address(0)) {... */\n      tag_112\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7601:7602  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7572:7604  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      0xec442f0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_113\n      swap2\n      swap1\n      tag_106\n      jump\t// in\n    tag_113:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7524:7615  if (account == address(0)) {... */\n    tag_112:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7624:7659  _update(address(0), account, value) */\n      tag_114\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7640:7641  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7644:7651  account */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7653:7658  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7624:7631  _update */\n      tag_110\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7624:7659  _update(address(0), account, value) */\n      jump\t// in\n    tag_114:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7458:7666  function _mint(address account, uint256 value) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9701:10133  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n    tag_95:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9830:9831  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9813:9832  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9813:9818  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9813:9832  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9809:9898  if (owner == address(0)) {... */\n      tag_116\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9884:9885  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9855:9887  ERC20InvalidApprover(address(0)) */\n      mload(0x40)\n      0xe602df0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_117\n      swap2\n      swap1\n      tag_106\n      jump\t// in\n    tag_117:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9809:9898  if (owner == address(0)) {... */\n    tag_116:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9930:9931  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9911:9932  spender == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9911:9918  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9911:9932  spender == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9907:9997  if (spender == address(0)) {... */\n      tag_118\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9983:9984  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9955:9986  ERC20InvalidSpender(address(0)) */\n      mload(0x40)\n      0x94280d6200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_119\n      swap2\n      swap1\n      tag_106\n      jump\t// in\n    tag_119:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9907:9997  if (spender == address(0)) {... */\n    tag_118:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10036:10041  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10006:10017  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10006:10024  _allowances[owner] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10018:10023  owner */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10006:10024  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10006:10033  _allowances[owner][spender] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10025:10032  spender */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10006:10033  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10006:10041  _allowances[owner][spender] = value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10055:10064  emitEvent */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10051:10127  if (emitEvent) {... */\n      iszero\n      tag_120\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10101:10108  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10085:10116  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10094:10099  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10085:10116  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10110:10115  value */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10085:10116  Approval(owner, spender, value) */\n      mload(0x40)\n      tag_121\n      swap2\n      swap1\n      tag_27\n      jump\t// in\n    tag_121:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10051:10127  if (emitEvent) {... */\n    tag_120:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9701:10133  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6008:7115  function _update(address from, address to, uint256 value) internal virtual {... */\n    tag_110:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6113:6114  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6097:6115  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6097:6101  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6097:6115  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6093:6633  if (from == address(0)) {... */\n      tag_123\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6249:6254  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6233:6245  _totalSupply */\n      0x02\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6233:6254  _totalSupply += value */\n      dup3\n      dup3\n      sload\n      tag_124\n      swap2\n      swap1\n      tag_125\n      jump\t// in\n    tag_124:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6093:6633  if (from == address(0)) {... */\n      jump(tag_126)\n    tag_123:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6285:6304  uint256 fromBalance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6307:6316  _balances */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6307:6322  _balances[from] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6317:6321  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6307:6322  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6285:6322  uint256 fromBalance = _balances[from] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6354:6359  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6340:6351  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6340:6359  fromBalance < value */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6336:6451  if (fromBalance < value) {... */\n      iszero\n      tag_127\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6411:6415  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6417:6428  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6430:6435  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6386:6436  ERC20InsufficientBalance(from, fromBalance, value) */\n      mload(0x40)\n      0xe450d38c00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_128\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_101\n      jump\t// in\n    tag_128:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6336:6451  if (fromBalance < value) {... */\n    tag_127:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6603:6608  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6589:6600  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6589:6608  fromBalance - value */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6571:6580  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6571:6586  _balances[from] */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6581:6585  from */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6571:6586  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6571:6608  _balances[from] = fromBalance - value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6271:6633  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6093:6633  if (from == address(0)) {... */\n    tag_126:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6661:6662  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6647:6663  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6647:6649  to */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6647:6663  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6643:7068  if (to == address(0)) {... */\n      tag_129\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6826:6831  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6810:6822  _totalSupply */\n      0x02\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6810:6831  _totalSupply -= value */\n      dup3\n      dup3\n      sload\n      sub\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6643:7068  if (to == address(0)) {... */\n      jump(tag_130)\n    tag_129:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7038:7043  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7021:7030  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7021:7034  _balances[to] */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7031:7033  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7021:7034  _balances[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7021:7043  _balances[to] += value */\n      dup3\n      dup3\n      sload\n      add\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6643:7068  if (to == address(0)) {... */\n    tag_130:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7098:7100  to */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7083:7108  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7092:7096  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7083:7108  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7102:7107  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7083:7108  Transfer(from, to, value) */\n      mload(0x40)\n      tag_131\n      swap2\n      swap1\n      tag_27\n      jump\t// in\n    tag_131:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6008:7115  function _update(address from, address to, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:106   */\n    tag_132:\n        /* \"#utility.yul\":59:65   */\n      0x00\n        /* \"#utility.yul\":93:98   */\n      dup2\n        /* \"#utility.yul\":87:99   */\n      mload\n        /* \"#utility.yul\":77:99   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:106   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":112:281   */\n    tag_133:\n        /* \"#utility.yul\":196:207   */\n      0x00\n        /* \"#utility.yul\":230:236   */\n      dup3\n        /* \"#utility.yul\":225:228   */\n      dup3\n        /* \"#utility.yul\":218:237   */\n      mstore\n        /* \"#utility.yul\":270:274   */\n      0x20\n        /* \"#utility.yul\":265:268   */\n      dup3\n        /* \"#utility.yul\":261:275   */\n      add\n        /* \"#utility.yul\":246:275   */\n      swap1\n      pop\n        /* \"#utility.yul\":112:281   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":287:426   */\n    tag_134:\n        /* \"#utility.yul\":376:382   */\n      dup3\n        /* \"#utility.yul\":371:374   */\n      dup2\n        /* \"#utility.yul\":366:369   */\n      dup4\n        /* \"#utility.yul\":360:383   */\n      mcopy\n        /* \"#utility.yul\":417:418   */\n      0x00\n        /* \"#utility.yul\":408:414   */\n      dup4\n        /* \"#utility.yul\":403:406   */\n      dup4\n        /* \"#utility.yul\":399:415   */\n      add\n        /* \"#utility.yul\":392:419   */\n      mstore\n        /* \"#utility.yul\":287:426   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":432:534   */\n    tag_135:\n        /* \"#utility.yul\":473:479   */\n      0x00\n        /* \"#utility.yul\":524:526   */\n      0x1f\n        /* \"#utility.yul\":520:527   */\n      not\n        /* \"#utility.yul\":515:517   */\n      0x1f\n        /* \"#utility.yul\":508:513   */\n      dup4\n        /* \"#utility.yul\":504:518   */\n      add\n        /* \"#utility.yul\":500:528   */\n      and\n        /* \"#utility.yul\":490:528   */\n      swap1\n      pop\n        /* \"#utility.yul\":432:534   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":540:917   */\n    tag_136:\n        /* \"#utility.yul\":628:631   */\n      0x00\n        /* \"#utility.yul\":656:695   */\n      tag_161\n        /* \"#utility.yul\":689:694   */\n      dup3\n        /* \"#utility.yul\":656:695   */\n      tag_132\n      jump\t// in\n    tag_161:\n        /* \"#utility.yul\":711:782   */\n      tag_162\n        /* \"#utility.yul\":775:781   */\n      dup2\n        /* \"#utility.yul\":770:773   */\n      dup6\n        /* \"#utility.yul\":711:782   */\n      tag_133\n      jump\t// in\n    tag_162:\n        /* \"#utility.yul\":704:782   */\n      swap4\n      pop\n        /* \"#utility.yul\":791:856   */\n      tag_163\n        /* \"#utility.yul\":849:855   */\n      dup2\n        /* \"#utility.yul\":844:847   */\n      dup6\n        /* \"#utility.yul\":837:841   */\n      0x20\n        /* \"#utility.yul\":830:835   */\n      dup7\n        /* \"#utility.yul\":826:842   */\n      add\n        /* \"#utility.yul\":791:856   */\n      tag_134\n      jump\t// in\n    tag_163:\n        /* \"#utility.yul\":881:910   */\n      tag_164\n        /* \"#utility.yul\":903:909   */\n      dup2\n        /* \"#utility.yul\":881:910   */\n      tag_135\n      jump\t// in\n    tag_164:\n        /* \"#utility.yul\":876:879   */\n      dup5\n        /* \"#utility.yul\":872:911   */\n      add\n        /* \"#utility.yul\":865:911   */\n      swap2\n      pop\n        /* \"#utility.yul\":632:917   */\n      pop\n        /* \"#utility.yul\":540:917   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":923:1236   */\n    tag_17:\n        /* \"#utility.yul\":1036:1040   */\n      0x00\n        /* \"#utility.yul\":1074:1076   */\n      0x20\n        /* \"#utility.yul\":1063:1072   */\n      dup3\n        /* \"#utility.yul\":1059:1077   */\n      add\n        /* \"#utility.yul\":1051:1077   */\n      swap1\n      pop\n        /* \"#utility.yul\":1123:1132   */\n      dup2\n        /* \"#utility.yul\":1117:1121   */\n      dup2\n        /* \"#utility.yul\":1113:1133   */\n      sub\n        /* \"#utility.yul\":1109:1110   */\n      0x00\n        /* \"#utility.yul\":1098:1107   */\n      dup4\n        /* \"#utility.yul\":1094:1111   */\n      add\n        /* \"#utility.yul\":1087:1134   */\n      mstore\n        /* \"#utility.yul\":1151:1229   */\n      tag_166\n        /* \"#utility.yul\":1224:1228   */\n      dup2\n        /* \"#utility.yul\":1215:1221   */\n      dup5\n        /* \"#utility.yul\":1151:1229   */\n      tag_136\n      jump\t// in\n    tag_166:\n        /* \"#utility.yul\":1143:1229   */\n      swap1\n      pop\n        /* \"#utility.yul\":923:1236   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1323:1440   */\n    tag_138:\n        /* \"#utility.yul\":1432:1433   */\n      0x00\n        /* \"#utility.yul\":1429:1430   */\n      dup1\n        /* \"#utility.yul\":1422:1434   */\n      revert\n        /* \"#utility.yul\":1569:1695   */\n    tag_140:\n        /* \"#utility.yul\":1606:1613   */\n      0x00\n        /* \"#utility.yul\":1646:1688   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":1639:1644   */\n      dup3\n        /* \"#utility.yul\":1635:1689   */\n      and\n        /* \"#utility.yul\":1624:1689   */\n      swap1\n      pop\n        /* \"#utility.yul\":1569:1695   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1701:1797   */\n    tag_141:\n        /* \"#utility.yul\":1738:1745   */\n      0x00\n        /* \"#utility.yul\":1767:1791   */\n      tag_172\n        /* \"#utility.yul\":1785:1790   */\n      dup3\n        /* \"#utility.yul\":1767:1791   */\n      tag_140\n      jump\t// in\n    tag_172:\n        /* \"#utility.yul\":1756:1791   */\n      swap1\n      pop\n        /* \"#utility.yul\":1701:1797   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1803:1925   */\n    tag_142:\n        /* \"#utility.yul\":1876:1900   */\n      tag_174\n        /* \"#utility.yul\":1894:1899   */\n      dup2\n        /* \"#utility.yul\":1876:1900   */\n      tag_141\n      jump\t// in\n    tag_174:\n        /* \"#utility.yul\":1869:1874   */\n      dup2\n        /* \"#utility.yul\":1866:1901   */\n      eq\n        /* \"#utility.yul\":1856:1919   */\n      tag_175\n      jumpi\n        /* \"#utility.yul\":1915:1916   */\n      0x00\n        /* \"#utility.yul\":1912:1913   */\n      dup1\n        /* \"#utility.yul\":1905:1917   */\n      revert\n        /* \"#utility.yul\":1856:1919   */\n    tag_175:\n        /* \"#utility.yul\":1803:1925   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1931:2070   */\n    tag_143:\n        /* \"#utility.yul\":1977:1982   */\n      0x00\n        /* \"#utility.yul\":2015:2021   */\n      dup2\n        /* \"#utility.yul\":2002:2022   */\n      calldataload\n        /* \"#utility.yul\":1993:2022   */\n      swap1\n      pop\n        /* \"#utility.yul\":2031:2064   */\n      tag_177\n        /* \"#utility.yul\":2058:2063   */\n      dup2\n        /* \"#utility.yul\":2031:2064   */\n      tag_142\n      jump\t// in\n    tag_177:\n        /* \"#utility.yul\":1931:2070   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2076:2153   */\n    tag_144:\n        /* \"#utility.yul\":2113:2120   */\n      0x00\n        /* \"#utility.yul\":2142:2147   */\n      dup2\n        /* \"#utility.yul\":2131:2147   */\n      swap1\n      pop\n        /* \"#utility.yul\":2076:2153   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2159:2281   */\n    tag_145:\n        /* \"#utility.yul\":2232:2256   */\n      tag_180\n        /* \"#utility.yul\":2250:2255   */\n      dup2\n        /* \"#utility.yul\":2232:2256   */\n      tag_144\n      jump\t// in\n    tag_180:\n        /* \"#utility.yul\":2225:2230   */\n      dup2\n        /* \"#utility.yul\":2222:2257   */\n      eq\n        /* \"#utility.yul\":2212:2275   */\n      tag_181\n      jumpi\n        /* \"#utility.yul\":2271:2272   */\n      0x00\n        /* \"#utility.yul\":2268:2269   */\n      dup1\n        /* \"#utility.yul\":2261:2273   */\n      revert\n        /* \"#utility.yul\":2212:2275   */\n    tag_181:\n        /* \"#utility.yul\":2159:2281   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2287:2426   */\n    tag_146:\n        /* \"#utility.yul\":2333:2338   */\n      0x00\n        /* \"#utility.yul\":2371:2377   */\n      dup2\n        /* \"#utility.yul\":2358:2378   */\n      calldataload\n        /* \"#utility.yul\":2349:2378   */\n      swap1\n      pop\n        /* \"#utility.yul\":2387:2420   */\n      tag_183\n        /* \"#utility.yul\":2414:2419   */\n      dup2\n        /* \"#utility.yul\":2387:2420   */\n      tag_145\n      jump\t// in\n    tag_183:\n        /* \"#utility.yul\":2287:2426   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2432:2906   */\n    tag_20:\n        /* \"#utility.yul\":2500:2506   */\n      0x00\n        /* \"#utility.yul\":2508:2514   */\n      dup1\n        /* \"#utility.yul\":2557:2559   */\n      0x40\n        /* \"#utility.yul\":2545:2554   */\n      dup4\n        /* \"#utility.yul\":2536:2543   */\n      dup6\n        /* \"#utility.yul\":2532:2555   */\n      sub\n        /* \"#utility.yul\":2528:2560   */\n      slt\n        /* \"#utility.yul\":2525:2644   */\n      iszero\n      tag_185\n      jumpi\n        /* \"#utility.yul\":2563:2642   */\n      tag_186\n      tag_138\n      jump\t// in\n    tag_186:\n        /* \"#utility.yul\":2525:2644   */\n    tag_185:\n        /* \"#utility.yul\":2683:2684   */\n      0x00\n        /* \"#utility.yul\":2708:2761   */\n      tag_187\n        /* \"#utility.yul\":2753:2760   */\n      dup6\n        /* \"#utility.yul\":2744:2750   */\n      dup3\n        /* \"#utility.yul\":2733:2742   */\n      dup7\n        /* \"#utility.yul\":2729:2751   */\n      add\n        /* \"#utility.yul\":2708:2761   */\n      tag_143\n      jump\t// in\n    tag_187:\n        /* \"#utility.yul\":2698:2761   */\n      swap3\n      pop\n        /* \"#utility.yul\":2654:2771   */\n      pop\n        /* \"#utility.yul\":2810:2812   */\n      0x20\n        /* \"#utility.yul\":2836:2889   */\n      tag_188\n        /* \"#utility.yul\":2881:2888   */\n      dup6\n        /* \"#utility.yul\":2872:2878   */\n      dup3\n        /* \"#utility.yul\":2861:2870   */\n      dup7\n        /* \"#utility.yul\":2857:2879   */\n      add\n        /* \"#utility.yul\":2836:2889   */\n      tag_146\n      jump\t// in\n    tag_188:\n        /* \"#utility.yul\":2826:2889   */\n      swap2\n      pop\n        /* \"#utility.yul\":2781:2899   */\n      pop\n        /* \"#utility.yul\":2432:2906   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2912:3002   */\n    tag_147:\n        /* \"#utility.yul\":2946:2953   */\n      0x00\n        /* \"#utility.yul\":2989:2994   */\n      dup2\n        /* \"#utility.yul\":2982:2995   */\n      iszero\n        /* \"#utility.yul\":2975:2996   */\n      iszero\n        /* \"#utility.yul\":2964:2996   */\n      swap1\n      pop\n        /* \"#utility.yul\":2912:3002   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3008:3117   */\n    tag_148:\n        /* \"#utility.yul\":3089:3110   */\n      tag_191\n        /* \"#utility.yul\":3104:3109   */\n      dup2\n        /* \"#utility.yul\":3089:3110   */\n      tag_147\n      jump\t// in\n    tag_191:\n        /* \"#utility.yul\":3084:3087   */\n      dup3\n        /* \"#utility.yul\":3077:3111   */\n      mstore\n        /* \"#utility.yul\":3008:3117   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3123:3333   */\n    tag_23:\n        /* \"#utility.yul\":3210:3214   */\n      0x00\n        /* \"#utility.yul\":3248:3250   */\n      0x20\n        /* \"#utility.yul\":3237:3246   */\n      dup3\n        /* \"#utility.yul\":3233:3251   */\n      add\n        /* \"#utility.yul\":3225:3251   */\n      swap1\n      pop\n        /* \"#utility.yul\":3261:3326   */\n      tag_193\n        /* \"#utility.yul\":3323:3324   */\n      0x00\n        /* \"#utility.yul\":3312:3321   */\n      dup4\n        /* \"#utility.yul\":3308:3325   */\n      add\n        /* \"#utility.yul\":3299:3305   */\n      dup5\n        /* \"#utility.yul\":3261:3326   */\n      tag_148\n      jump\t// in\n    tag_193:\n        /* \"#utility.yul\":3123:3333   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3339:3457   */\n    tag_149:\n        /* \"#utility.yul\":3426:3450   */\n      tag_195\n        /* \"#utility.yul\":3444:3449   */\n      dup2\n        /* \"#utility.yul\":3426:3450   */\n      tag_144\n      jump\t// in\n    tag_195:\n        /* \"#utility.yul\":3421:3424   */\n      dup3\n        /* \"#utility.yul\":3414:3451   */\n      mstore\n        /* \"#utility.yul\":3339:3457   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3463:3685   */\n    tag_27:\n        /* \"#utility.yul\":3556:3560   */\n      0x00\n        /* \"#utility.yul\":3594:3596   */\n      0x20\n        /* \"#utility.yul\":3583:3592   */\n      dup3\n        /* \"#utility.yul\":3579:3597   */\n      add\n        /* \"#utility.yul\":3571:3597   */\n      swap1\n      pop\n        /* \"#utility.yul\":3607:3678   */\n      tag_197\n        /* \"#utility.yul\":3675:3676   */\n      0x00\n        /* \"#utility.yul\":3664:3673   */\n      dup4\n        /* \"#utility.yul\":3660:3677   */\n      add\n        /* \"#utility.yul\":3651:3657   */\n      dup5\n        /* \"#utility.yul\":3607:3678   */\n      tag_149\n      jump\t// in\n    tag_197:\n        /* \"#utility.yul\":3463:3685   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3691:4310   */\n    tag_30:\n        /* \"#utility.yul\":3768:3774   */\n      0x00\n        /* \"#utility.yul\":3776:3782   */\n      dup1\n        /* \"#utility.yul\":3784:3790   */\n      0x00\n        /* \"#utility.yul\":3833:3835   */\n      0x60\n        /* \"#utility.yul\":3821:3830   */\n      dup5\n        /* \"#utility.yul\":3812:3819   */\n      dup7\n        /* \"#utility.yul\":3808:3831   */\n      sub\n        /* \"#utility.yul\":3804:3836   */\n      slt\n        /* \"#utility.yul\":3801:3920   */\n      iszero\n      tag_199\n      jumpi\n        /* \"#utility.yul\":3839:3918   */\n      tag_200\n      tag_138\n      jump\t// in\n    tag_200:\n        /* \"#utility.yul\":3801:3920   */\n    tag_199:\n        /* \"#utility.yul\":3959:3960   */\n      0x00\n        /* \"#utility.yul\":3984:4037   */\n      tag_201\n        /* \"#utility.yul\":4029:4036   */\n      dup7\n        /* \"#utility.yul\":4020:4026   */\n      dup3\n        /* \"#utility.yul\":4009:4018   */\n      dup8\n        /* \"#utility.yul\":4005:4027   */\n      add\n        /* \"#utility.yul\":3984:4037   */\n      tag_143\n      jump\t// in\n    tag_201:\n        /* \"#utility.yul\":3974:4037   */\n      swap4\n      pop\n        /* \"#utility.yul\":3930:4047   */\n      pop\n        /* \"#utility.yul\":4086:4088   */\n      0x20\n        /* \"#utility.yul\":4112:4165   */\n      tag_202\n        /* \"#utility.yul\":4157:4164   */\n      dup7\n        /* \"#utility.yul\":4148:4154   */\n      dup3\n        /* \"#utility.yul\":4137:4146   */\n      dup8\n        /* \"#utility.yul\":4133:4155   */\n      add\n        /* \"#utility.yul\":4112:4165   */\n      tag_143\n      jump\t// in\n    tag_202:\n        /* \"#utility.yul\":4102:4165   */\n      swap3\n      pop\n        /* \"#utility.yul\":4057:4175   */\n      pop\n        /* \"#utility.yul\":4214:4216   */\n      0x40\n        /* \"#utility.yul\":4240:4293   */\n      tag_203\n        /* \"#utility.yul\":4285:4292   */\n      dup7\n        /* \"#utility.yul\":4276:4282   */\n      dup3\n        /* \"#utility.yul\":4265:4274   */\n      dup8\n        /* \"#utility.yul\":4261:4283   */\n      add\n        /* \"#utility.yul\":4240:4293   */\n      tag_146\n      jump\t// in\n    tag_203:\n        /* \"#utility.yul\":4230:4293   */\n      swap2\n      pop\n        /* \"#utility.yul\":4185:4303   */\n      pop\n        /* \"#utility.yul\":3691:4310   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":4316:4402   */\n    tag_150:\n        /* \"#utility.yul\":4351:4358   */\n      0x00\n        /* \"#utility.yul\":4391:4395   */\n      0xff\n        /* \"#utility.yul\":4384:4389   */\n      dup3\n        /* \"#utility.yul\":4380:4396   */\n      and\n        /* \"#utility.yul\":4369:4396   */\n      swap1\n      pop\n        /* \"#utility.yul\":4316:4402   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4408:4520   */\n    tag_151:\n        /* \"#utility.yul\":4491:4513   */\n      tag_206\n        /* \"#utility.yul\":4507:4512   */\n      dup2\n        /* \"#utility.yul\":4491:4513   */\n      tag_150\n      jump\t// in\n    tag_206:\n        /* \"#utility.yul\":4486:4489   */\n      dup3\n        /* \"#utility.yul\":4479:4514   */\n      mstore\n        /* \"#utility.yul\":4408:4520   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4526:4740   */\n    tag_36:\n        /* \"#utility.yul\":4615:4619   */\n      0x00\n        /* \"#utility.yul\":4653:4655   */\n      0x20\n        /* \"#utility.yul\":4642:4651   */\n      dup3\n        /* \"#utility.yul\":4638:4656   */\n      add\n        /* \"#utility.yul\":4630:4656   */\n      swap1\n      pop\n        /* \"#utility.yul\":4666:4733   */\n      tag_208\n        /* \"#utility.yul\":4730:4731   */\n      0x00\n        /* \"#utility.yul\":4719:4728   */\n      dup4\n        /* \"#utility.yul\":4715:4732   */\n      add\n        /* \"#utility.yul\":4706:4712   */\n      dup5\n        /* \"#utility.yul\":4666:4733   */\n      tag_151\n      jump\t// in\n    tag_208:\n        /* \"#utility.yul\":4526:4740   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4746:5075   */\n    tag_39:\n        /* \"#utility.yul\":4805:4811   */\n      0x00\n        /* \"#utility.yul\":4854:4856   */\n      0x20\n        /* \"#utility.yul\":4842:4851   */\n      dup3\n        /* \"#utility.yul\":4833:4840   */\n      dup5\n        /* \"#utility.yul\":4829:4852   */\n      sub\n        /* \"#utility.yul\":4825:4857   */\n      slt\n        /* \"#utility.yul\":4822:4941   */\n      iszero\n      tag_210\n      jumpi\n        /* \"#utility.yul\":4860:4939   */\n      tag_211\n      tag_138\n      jump\t// in\n    tag_211:\n        /* \"#utility.yul\":4822:4941   */\n    tag_210:\n        /* \"#utility.yul\":4980:4981   */\n      0x00\n        /* \"#utility.yul\":5005:5058   */\n      tag_212\n        /* \"#utility.yul\":5050:5057   */\n      dup5\n        /* \"#utility.yul\":5041:5047   */\n      dup3\n        /* \"#utility.yul\":5030:5039   */\n      dup6\n        /* \"#utility.yul\":5026:5048   */\n      add\n        /* \"#utility.yul\":5005:5058   */\n      tag_143\n      jump\t// in\n    tag_212:\n        /* \"#utility.yul\":4995:5058   */\n      swap2\n      pop\n        /* \"#utility.yul\":4951:5068   */\n      pop\n        /* \"#utility.yul\":4746:5075   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5081:5410   */\n    tag_47:\n        /* \"#utility.yul\":5140:5146   */\n      0x00\n        /* \"#utility.yul\":5189:5191   */\n      0x20\n        /* \"#utility.yul\":5177:5186   */\n      dup3\n        /* \"#utility.yul\":5168:5175   */\n      dup5\n        /* \"#utility.yul\":5164:5187   */\n      sub\n        /* \"#utility.yul\":5160:5192   */\n      slt\n        /* \"#utility.yul\":5157:5276   */\n      iszero\n      tag_214\n      jumpi\n        /* \"#utility.yul\":5195:5274   */\n      tag_215\n      tag_138\n      jump\t// in\n    tag_215:\n        /* \"#utility.yul\":5157:5276   */\n    tag_214:\n        /* \"#utility.yul\":5315:5316   */\n      0x00\n        /* \"#utility.yul\":5340:5393   */\n      tag_216\n        /* \"#utility.yul\":5385:5392   */\n      dup5\n        /* \"#utility.yul\":5376:5382   */\n      dup3\n        /* \"#utility.yul\":5365:5374   */\n      dup6\n        /* \"#utility.yul\":5361:5383   */\n      add\n        /* \"#utility.yul\":5340:5393   */\n      tag_146\n      jump\t// in\n    tag_216:\n        /* \"#utility.yul\":5330:5393   */\n      swap2\n      pop\n        /* \"#utility.yul\":5286:5403   */\n      pop\n        /* \"#utility.yul\":5081:5410   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5416:5890   */\n    tag_55:\n        /* \"#utility.yul\":5484:5490   */\n      0x00\n        /* \"#utility.yul\":5492:5498   */\n      dup1\n        /* \"#utility.yul\":5541:5543   */\n      0x40\n        /* \"#utility.yul\":5529:5538   */\n      dup4\n        /* \"#utility.yul\":5520:5527   */\n      dup6\n        /* \"#utility.yul\":5516:5539   */\n      sub\n        /* \"#utility.yul\":5512:5544   */\n      slt\n        /* \"#utility.yul\":5509:5628   */\n      iszero\n      tag_218\n      jumpi\n        /* \"#utility.yul\":5547:5626   */\n      tag_219\n      tag_138\n      jump\t// in\n    tag_219:\n        /* \"#utility.yul\":5509:5628   */\n    tag_218:\n        /* \"#utility.yul\":5667:5668   */\n      0x00\n        /* \"#utility.yul\":5692:5745   */\n      tag_220\n        /* \"#utility.yul\":5737:5744   */\n      dup6\n        /* \"#utility.yul\":5728:5734   */\n      dup3\n        /* \"#utility.yul\":5717:5726   */\n      dup7\n        /* \"#utility.yul\":5713:5735   */\n      add\n        /* \"#utility.yul\":5692:5745   */\n      tag_143\n      jump\t// in\n    tag_220:\n        /* \"#utility.yul\":5682:5745   */\n      swap3\n      pop\n        /* \"#utility.yul\":5638:5755   */\n      pop\n        /* \"#utility.yul\":5794:5796   */\n      0x20\n        /* \"#utility.yul\":5820:5873   */\n      tag_221\n        /* \"#utility.yul\":5865:5872   */\n      dup6\n        /* \"#utility.yul\":5856:5862   */\n      dup3\n        /* \"#utility.yul\":5845:5854   */\n      dup7\n        /* \"#utility.yul\":5841:5863   */\n      add\n        /* \"#utility.yul\":5820:5873   */\n      tag_143\n      jump\t// in\n    tag_221:\n        /* \"#utility.yul\":5810:5873   */\n      swap2\n      pop\n        /* \"#utility.yul\":5765:5883   */\n      pop\n        /* \"#utility.yul\":5416:5890   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5896:6076   */\n    tag_152:\n        /* \"#utility.yul\":5944:6021   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":5941:5942   */\n      0x00\n        /* \"#utility.yul\":5934:6022   */\n      mstore\n        /* \"#utility.yul\":6041:6045   */\n      0x22\n        /* \"#utility.yul\":6038:6039   */\n      0x04\n        /* \"#utility.yul\":6031:6046   */\n      mstore\n        /* \"#utility.yul\":6065:6069   */\n      0x24\n        /* \"#utility.yul\":6062:6063   */\n      0x00\n        /* \"#utility.yul\":6055:6070   */\n      revert\n        /* \"#utility.yul\":6082:6402   */\n    tag_60:\n        /* \"#utility.yul\":6126:6132   */\n      0x00\n        /* \"#utility.yul\":6163:6164   */\n      0x02\n        /* \"#utility.yul\":6157:6161   */\n      dup3\n        /* \"#utility.yul\":6153:6165   */\n      div\n        /* \"#utility.yul\":6143:6165   */\n      swap1\n      pop\n        /* \"#utility.yul\":6210:6211   */\n      0x01\n        /* \"#utility.yul\":6204:6208   */\n      dup3\n        /* \"#utility.yul\":6200:6212   */\n      and\n        /* \"#utility.yul\":6231:6249   */\n      dup1\n        /* \"#utility.yul\":6221:6302   */\n      tag_224\n      jumpi\n        /* \"#utility.yul\":6287:6291   */\n      0x7f\n        /* \"#utility.yul\":6279:6285   */\n      dup3\n        /* \"#utility.yul\":6275:6292   */\n      and\n        /* \"#utility.yul\":6265:6292   */\n      swap2\n      pop\n        /* \"#utility.yul\":6221:6302   */\n    tag_224:\n        /* \"#utility.yul\":6349:6351   */\n      0x20\n        /* \"#utility.yul\":6341:6347   */\n      dup3\n        /* \"#utility.yul\":6338:6352   */\n      lt\n        /* \"#utility.yul\":6318:6336   */\n      dup2\n        /* \"#utility.yul\":6315:6353   */\n      sub\n        /* \"#utility.yul\":6312:6396   */\n      tag_225\n      jumpi\n        /* \"#utility.yul\":6368:6386   */\n      tag_226\n      tag_152\n      jump\t// in\n    tag_226:\n        /* \"#utility.yul\":6312:6396   */\n    tag_225:\n        /* \"#utility.yul\":6133:6402   */\n      pop\n        /* \"#utility.yul\":6082:6402   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6408:6526   */\n    tag_153:\n        /* \"#utility.yul\":6495:6519   */\n      tag_228\n        /* \"#utility.yul\":6513:6518   */\n      dup2\n        /* \"#utility.yul\":6495:6519   */\n      tag_141\n      jump\t// in\n    tag_228:\n        /* \"#utility.yul\":6490:6493   */\n      dup3\n        /* \"#utility.yul\":6483:6520   */\n      mstore\n        /* \"#utility.yul\":6408:6526   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6532:6974   */\n    tag_101:\n        /* \"#utility.yul\":6681:6685   */\n      0x00\n        /* \"#utility.yul\":6719:6721   */\n      0x60\n        /* \"#utility.yul\":6708:6717   */\n      dup3\n        /* \"#utility.yul\":6704:6722   */\n      add\n        /* \"#utility.yul\":6696:6722   */\n      swap1\n      pop\n        /* \"#utility.yul\":6732:6803   */\n      tag_230\n        /* \"#utility.yul\":6800:6801   */\n      0x00\n        /* \"#utility.yul\":6789:6798   */\n      dup4\n        /* \"#utility.yul\":6785:6802   */\n      add\n        /* \"#utility.yul\":6776:6782   */\n      dup7\n        /* \"#utility.yul\":6732:6803   */\n      tag_153\n      jump\t// in\n    tag_230:\n        /* \"#utility.yul\":6813:6885   */\n      tag_231\n        /* \"#utility.yul\":6881:6883   */\n      0x20\n        /* \"#utility.yul\":6870:6879   */\n      dup4\n        /* \"#utility.yul\":6866:6884   */\n      add\n        /* \"#utility.yul\":6857:6863   */\n      dup6\n        /* \"#utility.yul\":6813:6885   */\n      tag_149\n      jump\t// in\n    tag_231:\n        /* \"#utility.yul\":6895:6967   */\n      tag_232\n        /* \"#utility.yul\":6963:6965   */\n      0x40\n        /* \"#utility.yul\":6952:6961   */\n      dup4\n        /* \"#utility.yul\":6948:6966   */\n      add\n        /* \"#utility.yul\":6939:6945   */\n      dup5\n        /* \"#utility.yul\":6895:6967   */\n      tag_149\n      jump\t// in\n    tag_232:\n        /* \"#utility.yul\":6532:6974   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6980:7202   */\n    tag_106:\n        /* \"#utility.yul\":7073:7077   */\n      0x00\n        /* \"#utility.yul\":7111:7113   */\n      0x20\n        /* \"#utility.yul\":7100:7109   */\n      dup3\n        /* \"#utility.yul\":7096:7114   */\n      add\n        /* \"#utility.yul\":7088:7114   */\n      swap1\n      pop\n        /* \"#utility.yul\":7124:7195   */\n      tag_234\n        /* \"#utility.yul\":7192:7193   */\n      0x00\n        /* \"#utility.yul\":7181:7190   */\n      dup4\n        /* \"#utility.yul\":7177:7194   */\n      add\n        /* \"#utility.yul\":7168:7174   */\n      dup5\n        /* \"#utility.yul\":7124:7195   */\n      tag_153\n      jump\t// in\n    tag_234:\n        /* \"#utility.yul\":6980:7202   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7208:7388   */\n    tag_154:\n        /* \"#utility.yul\":7256:7333   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":7253:7254   */\n      0x00\n        /* \"#utility.yul\":7246:7334   */\n      mstore\n        /* \"#utility.yul\":7353:7357   */\n      0x11\n        /* \"#utility.yul\":7350:7351   */\n      0x04\n        /* \"#utility.yul\":7343:7358   */\n      mstore\n        /* \"#utility.yul\":7377:7381   */\n      0x24\n        /* \"#utility.yul\":7374:7375   */\n      0x00\n        /* \"#utility.yul\":7367:7382   */\n      revert\n        /* \"#utility.yul\":7394:7585   */\n    tag_125:\n        /* \"#utility.yul\":7434:7437   */\n      0x00\n        /* \"#utility.yul\":7453:7473   */\n      tag_237\n        /* \"#utility.yul\":7471:7472   */\n      dup3\n        /* \"#utility.yul\":7453:7473   */\n      tag_144\n      jump\t// in\n    tag_237:\n        /* \"#utility.yul\":7448:7473   */\n      swap2\n      pop\n        /* \"#utility.yul\":7487:7507   */\n      tag_238\n        /* \"#utility.yul\":7505:7506   */\n      dup4\n        /* \"#utility.yul\":7487:7507   */\n      tag_144\n      jump\t// in\n    tag_238:\n        /* \"#utility.yul\":7482:7507   */\n      swap3\n      pop\n        /* \"#utility.yul\":7530:7531   */\n      dup3\n        /* \"#utility.yul\":7527:7528   */\n      dup3\n        /* \"#utility.yul\":7523:7532   */\n      add\n        /* \"#utility.yul\":7516:7532   */\n      swap1\n      pop\n        /* \"#utility.yul\":7551:7554   */\n      dup1\n        /* \"#utility.yul\":7548:7549   */\n      dup3\n        /* \"#utility.yul\":7545:7555   */\n      gt\n        /* \"#utility.yul\":7542:7578   */\n      iszero\n      tag_239\n      jumpi\n        /* \"#utility.yul\":7558:7576   */\n      tag_240\n      tag_154\n      jump\t// in\n    tag_240:\n        /* \"#utility.yul\":7542:7578   */\n    tag_239:\n        /* \"#utility.yul\":7394:7585   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212202e841070bcf6e134e197909d0be916dc2c79804eccb9bb2228d245e657b0483264736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_1293": {
									"entryPoint": null,
									"id": 1293,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_683": {
									"entryPoint": null,
									"id": 683,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"array_dataslot_t_string_storage": {
									"entryPoint": 311,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 163,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_t_string_storage": {
									"entryPoint": 596,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"cleanup_t_uint256": {
									"entryPoint": 437,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clear_storage_range_t_bytes1": {
									"entryPoint": 562,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"convert_t_uint256_to_t_uint256": {
									"entryPoint": 455,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 733,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"divide_by_32_ceil": {
									"entryPoint": 329,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 263,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": 706,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"identity": {
									"entryPoint": 446,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mask_bytes_dynamic": {
									"entryPoint": 678,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x22": {
									"entryPoint": 218,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 173,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"prepare_store_t_uint256": {
									"entryPoint": 488,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"shift_left_dynamic": {
									"entryPoint": 344,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"shift_right_unsigned_dynamic": {
									"entryPoint": 666,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"storage_set_to_zero_t_uint256": {
									"entryPoint": 538,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"update_byte_slice_dynamic32": {
									"entryPoint": 356,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"update_storage_value_t_uint256_to_t_uint256": {
									"entryPoint": 497,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"zero_value_for_split_t_uint256": {
									"entryPoint": 534,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:5231:11",
										"nodeType": "YulBlock",
										"src": "0:5231:11",
										"statements": [
											{
												"body": {
													"nativeSrc": "66:40:11",
													"nodeType": "YulBlock",
													"src": "66:40:11",
													"statements": [
														{
															"nativeSrc": "77:22:11",
															"nodeType": "YulAssignment",
															"src": "77:22:11",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "93:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "93:5:11"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "87:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "87:5:11"
																},
																"nativeSrc": "87:12:11",
																"nodeType": "YulFunctionCall",
																"src": "87:12:11"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "77:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "77:6:11"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "7:99:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "49:5:11",
														"nodeType": "YulTypedName",
														"src": "49:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "59:6:11",
														"nodeType": "YulTypedName",
														"src": "59:6:11",
														"type": ""
													}
												],
												"src": "7:99:11"
											},
											{
												"body": {
													"nativeSrc": "140:152:11",
													"nodeType": "YulBlock",
													"src": "140:152:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "157:1:11",
																		"nodeType": "YulLiteral",
																		"src": "157:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "160:77:11",
																		"nodeType": "YulLiteral",
																		"src": "160:77:11",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "150:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "150:6:11"
																},
																"nativeSrc": "150:88:11",
																"nodeType": "YulFunctionCall",
																"src": "150:88:11"
															},
															"nativeSrc": "150:88:11",
															"nodeType": "YulExpressionStatement",
															"src": "150:88:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "254:1:11",
																		"nodeType": "YulLiteral",
																		"src": "254:1:11",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "257:4:11",
																		"nodeType": "YulLiteral",
																		"src": "257:4:11",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "247:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "247:6:11"
																},
																"nativeSrc": "247:15:11",
																"nodeType": "YulFunctionCall",
																"src": "247:15:11"
															},
															"nativeSrc": "247:15:11",
															"nodeType": "YulExpressionStatement",
															"src": "247:15:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "278:1:11",
																		"nodeType": "YulLiteral",
																		"src": "278:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "281:4:11",
																		"nodeType": "YulLiteral",
																		"src": "281:4:11",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "271:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "271:6:11"
																},
																"nativeSrc": "271:15:11",
																"nodeType": "YulFunctionCall",
																"src": "271:15:11"
															},
															"nativeSrc": "271:15:11",
															"nodeType": "YulExpressionStatement",
															"src": "271:15:11"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "112:180:11",
												"nodeType": "YulFunctionDefinition",
												"src": "112:180:11"
											},
											{
												"body": {
													"nativeSrc": "326:152:11",
													"nodeType": "YulBlock",
													"src": "326:152:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "343:1:11",
																		"nodeType": "YulLiteral",
																		"src": "343:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "346:77:11",
																		"nodeType": "YulLiteral",
																		"src": "346:77:11",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "336:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "336:6:11"
																},
																"nativeSrc": "336:88:11",
																"nodeType": "YulFunctionCall",
																"src": "336:88:11"
															},
															"nativeSrc": "336:88:11",
															"nodeType": "YulExpressionStatement",
															"src": "336:88:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "440:1:11",
																		"nodeType": "YulLiteral",
																		"src": "440:1:11",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "443:4:11",
																		"nodeType": "YulLiteral",
																		"src": "443:4:11",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "433:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "433:6:11"
																},
																"nativeSrc": "433:15:11",
																"nodeType": "YulFunctionCall",
																"src": "433:15:11"
															},
															"nativeSrc": "433:15:11",
															"nodeType": "YulExpressionStatement",
															"src": "433:15:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "464:1:11",
																		"nodeType": "YulLiteral",
																		"src": "464:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "467:4:11",
																		"nodeType": "YulLiteral",
																		"src": "467:4:11",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "457:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "457:6:11"
																},
																"nativeSrc": "457:15:11",
																"nodeType": "YulFunctionCall",
																"src": "457:15:11"
															},
															"nativeSrc": "457:15:11",
															"nodeType": "YulExpressionStatement",
															"src": "457:15:11"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "298:180:11",
												"nodeType": "YulFunctionDefinition",
												"src": "298:180:11"
											},
											{
												"body": {
													"nativeSrc": "535:269:11",
													"nodeType": "YulBlock",
													"src": "535:269:11",
													"statements": [
														{
															"nativeSrc": "545:22:11",
															"nodeType": "YulAssignment",
															"src": "545:22:11",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "559:4:11",
																		"nodeType": "YulIdentifier",
																		"src": "559:4:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "565:1:11",
																		"nodeType": "YulLiteral",
																		"src": "565:1:11",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "555:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "555:3:11"
																},
																"nativeSrc": "555:12:11",
																"nodeType": "YulFunctionCall",
																"src": "555:12:11"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "545:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "545:6:11"
																}
															]
														},
														{
															"nativeSrc": "576:38:11",
															"nodeType": "YulVariableDeclaration",
															"src": "576:38:11",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "606:4:11",
																		"nodeType": "YulIdentifier",
																		"src": "606:4:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "612:1:11",
																		"nodeType": "YulLiteral",
																		"src": "612:1:11",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "602:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "602:3:11"
																},
																"nativeSrc": "602:12:11",
																"nodeType": "YulFunctionCall",
																"src": "602:12:11"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "580:18:11",
																	"nodeType": "YulTypedName",
																	"src": "580:18:11",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "653:51:11",
																"nodeType": "YulBlock",
																"src": "653:51:11",
																"statements": [
																	{
																		"nativeSrc": "667:27:11",
																		"nodeType": "YulAssignment",
																		"src": "667:27:11",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "681:6:11",
																					"nodeType": "YulIdentifier",
																					"src": "681:6:11"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "689:4:11",
																					"nodeType": "YulLiteral",
																					"src": "689:4:11",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "677:3:11",
																				"nodeType": "YulIdentifier",
																				"src": "677:3:11"
																			},
																			"nativeSrc": "677:17:11",
																			"nodeType": "YulFunctionCall",
																			"src": "677:17:11"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "667:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "667:6:11"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "633:18:11",
																		"nodeType": "YulIdentifier",
																		"src": "633:18:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "626:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "626:6:11"
																},
																"nativeSrc": "626:26:11",
																"nodeType": "YulFunctionCall",
																"src": "626:26:11"
															},
															"nativeSrc": "623:81:11",
															"nodeType": "YulIf",
															"src": "623:81:11"
														},
														{
															"body": {
																"nativeSrc": "756:42:11",
																"nodeType": "YulBlock",
																"src": "756:42:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "770:16:11",
																				"nodeType": "YulIdentifier",
																				"src": "770:16:11"
																			},
																			"nativeSrc": "770:18:11",
																			"nodeType": "YulFunctionCall",
																			"src": "770:18:11"
																		},
																		"nativeSrc": "770:18:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "770:18:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "720:18:11",
																		"nodeType": "YulIdentifier",
																		"src": "720:18:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "743:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "743:6:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "751:2:11",
																				"nodeType": "YulLiteral",
																				"src": "751:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "740:2:11",
																			"nodeType": "YulIdentifier",
																			"src": "740:2:11"
																		},
																		"nativeSrc": "740:14:11",
																		"nodeType": "YulFunctionCall",
																		"src": "740:14:11"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "717:2:11",
																	"nodeType": "YulIdentifier",
																	"src": "717:2:11"
																},
																"nativeSrc": "717:38:11",
																"nodeType": "YulFunctionCall",
																"src": "717:38:11"
															},
															"nativeSrc": "714:84:11",
															"nodeType": "YulIf",
															"src": "714:84:11"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "484:320:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "519:4:11",
														"nodeType": "YulTypedName",
														"src": "519:4:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "528:6:11",
														"nodeType": "YulTypedName",
														"src": "528:6:11",
														"type": ""
													}
												],
												"src": "484:320:11"
											},
											{
												"body": {
													"nativeSrc": "864:87:11",
													"nodeType": "YulBlock",
													"src": "864:87:11",
													"statements": [
														{
															"nativeSrc": "874:11:11",
															"nodeType": "YulAssignment",
															"src": "874:11:11",
															"value": {
																"name": "ptr",
																"nativeSrc": "882:3:11",
																"nodeType": "YulIdentifier",
																"src": "882:3:11"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "874:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "874:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "902:1:11",
																		"nodeType": "YulLiteral",
																		"src": "902:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "905:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "905:3:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "895:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "895:6:11"
																},
																"nativeSrc": "895:14:11",
																"nodeType": "YulFunctionCall",
																"src": "895:14:11"
															},
															"nativeSrc": "895:14:11",
															"nodeType": "YulExpressionStatement",
															"src": "895:14:11"
														},
														{
															"nativeSrc": "918:26:11",
															"nodeType": "YulAssignment",
															"src": "918:26:11",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "936:1:11",
																		"nodeType": "YulLiteral",
																		"src": "936:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "939:4:11",
																		"nodeType": "YulLiteral",
																		"src": "939:4:11",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "926:9:11",
																	"nodeType": "YulIdentifier",
																	"src": "926:9:11"
																},
																"nativeSrc": "926:18:11",
																"nodeType": "YulFunctionCall",
																"src": "926:18:11"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "918:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "918:4:11"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_string_storage",
												"nativeSrc": "810:141:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "851:3:11",
														"nodeType": "YulTypedName",
														"src": "851:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "859:4:11",
														"nodeType": "YulTypedName",
														"src": "859:4:11",
														"type": ""
													}
												],
												"src": "810:141:11"
											},
											{
												"body": {
													"nativeSrc": "1001:49:11",
													"nodeType": "YulBlock",
													"src": "1001:49:11",
													"statements": [
														{
															"nativeSrc": "1011:33:11",
															"nodeType": "YulAssignment",
															"src": "1011:33:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1029:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "1029:5:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1036:2:11",
																				"nodeType": "YulLiteral",
																				"src": "1036:2:11",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1025:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "1025:3:11"
																		},
																		"nativeSrc": "1025:14:11",
																		"nodeType": "YulFunctionCall",
																		"src": "1025:14:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1041:2:11",
																		"nodeType": "YulLiteral",
																		"src": "1041:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "1021:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "1021:3:11"
																},
																"nativeSrc": "1021:23:11",
																"nodeType": "YulFunctionCall",
																"src": "1021:23:11"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "1011:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "1011:6:11"
																}
															]
														}
													]
												},
												"name": "divide_by_32_ceil",
												"nativeSrc": "957:93:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "984:5:11",
														"nodeType": "YulTypedName",
														"src": "984:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "994:6:11",
														"nodeType": "YulTypedName",
														"src": "994:6:11",
														"type": ""
													}
												],
												"src": "957:93:11"
											},
											{
												"body": {
													"nativeSrc": "1109:54:11",
													"nodeType": "YulBlock",
													"src": "1109:54:11",
													"statements": [
														{
															"nativeSrc": "1119:37:11",
															"nodeType": "YulAssignment",
															"src": "1119:37:11",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "1144:4:11",
																		"nodeType": "YulIdentifier",
																		"src": "1144:4:11"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "1150:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "1150:5:11"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nativeSrc": "1140:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "1140:3:11"
																},
																"nativeSrc": "1140:16:11",
																"nodeType": "YulFunctionCall",
																"src": "1140:16:11"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "1119:8:11",
																	"nodeType": "YulIdentifier",
																	"src": "1119:8:11"
																}
															]
														}
													]
												},
												"name": "shift_left_dynamic",
												"nativeSrc": "1056:107:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "1084:4:11",
														"nodeType": "YulTypedName",
														"src": "1084:4:11",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "1090:5:11",
														"nodeType": "YulTypedName",
														"src": "1090:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "1100:8:11",
														"nodeType": "YulTypedName",
														"src": "1100:8:11",
														"type": ""
													}
												],
												"src": "1056:107:11"
											},
											{
												"body": {
													"nativeSrc": "1245:317:11",
													"nodeType": "YulBlock",
													"src": "1245:317:11",
													"statements": [
														{
															"nativeSrc": "1255:35:11",
															"nodeType": "YulVariableDeclaration",
															"src": "1255:35:11",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBytes",
																		"nativeSrc": "1276:10:11",
																		"nodeType": "YulIdentifier",
																		"src": "1276:10:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1288:1:11",
																		"nodeType": "YulLiteral",
																		"src": "1288:1:11",
																		"type": "",
																		"value": "8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "1272:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "1272:3:11"
																},
																"nativeSrc": "1272:18:11",
																"nodeType": "YulFunctionCall",
																"src": "1272:18:11"
															},
															"variables": [
																{
																	"name": "shiftBits",
																	"nativeSrc": "1259:9:11",
																	"nodeType": "YulTypedName",
																	"src": "1259:9:11",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1299:109:11",
															"nodeType": "YulVariableDeclaration",
															"src": "1299:109:11",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "1330:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "1330:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1341:66:11",
																		"nodeType": "YulLiteral",
																		"src": "1341:66:11",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "1311:18:11",
																	"nodeType": "YulIdentifier",
																	"src": "1311:18:11"
																},
																"nativeSrc": "1311:97:11",
																"nodeType": "YulFunctionCall",
																"src": "1311:97:11"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "1303:4:11",
																	"nodeType": "YulTypedName",
																	"src": "1303:4:11",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1417:51:11",
															"nodeType": "YulAssignment",
															"src": "1417:51:11",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "1448:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "1448:9:11"
																	},
																	{
																		"name": "toInsert",
																		"nativeSrc": "1459:8:11",
																		"nodeType": "YulIdentifier",
																		"src": "1459:8:11"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "1429:18:11",
																	"nodeType": "YulIdentifier",
																	"src": "1429:18:11"
																},
																"nativeSrc": "1429:39:11",
																"nodeType": "YulFunctionCall",
																"src": "1429:39:11"
															},
															"variableNames": [
																{
																	"name": "toInsert",
																	"nativeSrc": "1417:8:11",
																	"nodeType": "YulIdentifier",
																	"src": "1417:8:11"
																}
															]
														},
														{
															"nativeSrc": "1477:30:11",
															"nodeType": "YulAssignment",
															"src": "1477:30:11",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1490:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "1490:5:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "mask",
																				"nativeSrc": "1501:4:11",
																				"nodeType": "YulIdentifier",
																				"src": "1501:4:11"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "1497:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "1497:3:11"
																		},
																		"nativeSrc": "1497:9:11",
																		"nodeType": "YulFunctionCall",
																		"src": "1497:9:11"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1486:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "1486:3:11"
																},
																"nativeSrc": "1486:21:11",
																"nodeType": "YulFunctionCall",
																"src": "1486:21:11"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1477:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "1477:5:11"
																}
															]
														},
														{
															"nativeSrc": "1516:40:11",
															"nodeType": "YulAssignment",
															"src": "1516:40:11",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1529:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "1529:5:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "toInsert",
																				"nativeSrc": "1540:8:11",
																				"nodeType": "YulIdentifier",
																				"src": "1540:8:11"
																			},
																			{
																				"name": "mask",
																				"nativeSrc": "1550:4:11",
																				"nodeType": "YulIdentifier",
																				"src": "1550:4:11"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "1536:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "1536:3:11"
																		},
																		"nativeSrc": "1536:19:11",
																		"nodeType": "YulFunctionCall",
																		"src": "1536:19:11"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "1526:2:11",
																	"nodeType": "YulIdentifier",
																	"src": "1526:2:11"
																},
																"nativeSrc": "1526:30:11",
																"nodeType": "YulFunctionCall",
																"src": "1526:30:11"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "1516:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "1516:6:11"
																}
															]
														}
													]
												},
												"name": "update_byte_slice_dynamic32",
												"nativeSrc": "1169:393:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1206:5:11",
														"nodeType": "YulTypedName",
														"src": "1206:5:11",
														"type": ""
													},
													{
														"name": "shiftBytes",
														"nativeSrc": "1213:10:11",
														"nodeType": "YulTypedName",
														"src": "1213:10:11",
														"type": ""
													},
													{
														"name": "toInsert",
														"nativeSrc": "1225:8:11",
														"nodeType": "YulTypedName",
														"src": "1225:8:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "1238:6:11",
														"nodeType": "YulTypedName",
														"src": "1238:6:11",
														"type": ""
													}
												],
												"src": "1169:393:11"
											},
											{
												"body": {
													"nativeSrc": "1613:32:11",
													"nodeType": "YulBlock",
													"src": "1613:32:11",
													"statements": [
														{
															"nativeSrc": "1623:16:11",
															"nodeType": "YulAssignment",
															"src": "1623:16:11",
															"value": {
																"name": "value",
																"nativeSrc": "1634:5:11",
																"nodeType": "YulIdentifier",
																"src": "1634:5:11"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1623:7:11",
																	"nodeType": "YulIdentifier",
																	"src": "1623:7:11"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "1568:77:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1595:5:11",
														"nodeType": "YulTypedName",
														"src": "1595:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1605:7:11",
														"nodeType": "YulTypedName",
														"src": "1605:7:11",
														"type": ""
													}
												],
												"src": "1568:77:11"
											},
											{
												"body": {
													"nativeSrc": "1683:28:11",
													"nodeType": "YulBlock",
													"src": "1683:28:11",
													"statements": [
														{
															"nativeSrc": "1693:12:11",
															"nodeType": "YulAssignment",
															"src": "1693:12:11",
															"value": {
																"name": "value",
																"nativeSrc": "1700:5:11",
																"nodeType": "YulIdentifier",
																"src": "1700:5:11"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "1693:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "1693:3:11"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "1651:60:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1669:5:11",
														"nodeType": "YulTypedName",
														"src": "1669:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "1679:3:11",
														"nodeType": "YulTypedName",
														"src": "1679:3:11",
														"type": ""
													}
												],
												"src": "1651:60:11"
											},
											{
												"body": {
													"nativeSrc": "1777:82:11",
													"nodeType": "YulBlock",
													"src": "1777:82:11",
													"statements": [
														{
															"nativeSrc": "1787:66:11",
															"nodeType": "YulAssignment",
															"src": "1787:66:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1845:5:11",
																						"nodeType": "YulIdentifier",
																						"src": "1845:5:11"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "1827:17:11",
																					"nodeType": "YulIdentifier",
																					"src": "1827:17:11"
																				},
																				"nativeSrc": "1827:24:11",
																				"nodeType": "YulFunctionCall",
																				"src": "1827:24:11"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "1818:8:11",
																			"nodeType": "YulIdentifier",
																			"src": "1818:8:11"
																		},
																		"nativeSrc": "1818:34:11",
																		"nodeType": "YulFunctionCall",
																		"src": "1818:34:11"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "1800:17:11",
																	"nodeType": "YulIdentifier",
																	"src": "1800:17:11"
																},
																"nativeSrc": "1800:53:11",
																"nodeType": "YulFunctionCall",
																"src": "1800:53:11"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "1787:9:11",
																	"nodeType": "YulIdentifier",
																	"src": "1787:9:11"
																}
															]
														}
													]
												},
												"name": "convert_t_uint256_to_t_uint256",
												"nativeSrc": "1717:142:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1757:5:11",
														"nodeType": "YulTypedName",
														"src": "1757:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "1767:9:11",
														"nodeType": "YulTypedName",
														"src": "1767:9:11",
														"type": ""
													}
												],
												"src": "1717:142:11"
											},
											{
												"body": {
													"nativeSrc": "1912:28:11",
													"nodeType": "YulBlock",
													"src": "1912:28:11",
													"statements": [
														{
															"nativeSrc": "1922:12:11",
															"nodeType": "YulAssignment",
															"src": "1922:12:11",
															"value": {
																"name": "value",
																"nativeSrc": "1929:5:11",
																"nodeType": "YulIdentifier",
																"src": "1929:5:11"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "1922:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "1922:3:11"
																}
															]
														}
													]
												},
												"name": "prepare_store_t_uint256",
												"nativeSrc": "1865:75:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1898:5:11",
														"nodeType": "YulTypedName",
														"src": "1898:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "1908:3:11",
														"nodeType": "YulTypedName",
														"src": "1908:3:11",
														"type": ""
													}
												],
												"src": "1865:75:11"
											},
											{
												"body": {
													"nativeSrc": "2022:193:11",
													"nodeType": "YulBlock",
													"src": "2022:193:11",
													"statements": [
														{
															"nativeSrc": "2032:63:11",
															"nodeType": "YulVariableDeclaration",
															"src": "2032:63:11",
															"value": {
																"arguments": [
																	{
																		"name": "value_0",
																		"nativeSrc": "2087:7:11",
																		"nodeType": "YulIdentifier",
																		"src": "2087:7:11"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint256_to_t_uint256",
																	"nativeSrc": "2056:30:11",
																	"nodeType": "YulIdentifier",
																	"src": "2056:30:11"
																},
																"nativeSrc": "2056:39:11",
																"nodeType": "YulFunctionCall",
																"src": "2056:39:11"
															},
															"variables": [
																{
																	"name": "convertedValue_0",
																	"nativeSrc": "2036:16:11",
																	"nodeType": "YulTypedName",
																	"src": "2036:16:11",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "2111:4:11",
																		"nodeType": "YulIdentifier",
																		"src": "2111:4:11"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "2151:4:11",
																						"nodeType": "YulIdentifier",
																						"src": "2151:4:11"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "2145:5:11",
																					"nodeType": "YulIdentifier",
																					"src": "2145:5:11"
																				},
																				"nativeSrc": "2145:11:11",
																				"nodeType": "YulFunctionCall",
																				"src": "2145:11:11"
																			},
																			{
																				"name": "offset",
																				"nativeSrc": "2158:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "2158:6:11"
																			},
																			{
																				"arguments": [
																					{
																						"name": "convertedValue_0",
																						"nativeSrc": "2190:16:11",
																						"nodeType": "YulIdentifier",
																						"src": "2190:16:11"
																					}
																				],
																				"functionName": {
																					"name": "prepare_store_t_uint256",
																					"nativeSrc": "2166:23:11",
																					"nodeType": "YulIdentifier",
																					"src": "2166:23:11"
																				},
																				"nativeSrc": "2166:41:11",
																				"nodeType": "YulFunctionCall",
																				"src": "2166:41:11"
																			}
																		],
																		"functionName": {
																			"name": "update_byte_slice_dynamic32",
																			"nativeSrc": "2117:27:11",
																			"nodeType": "YulIdentifier",
																			"src": "2117:27:11"
																		},
																		"nativeSrc": "2117:91:11",
																		"nodeType": "YulFunctionCall",
																		"src": "2117:91:11"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nativeSrc": "2104:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "2104:6:11"
																},
																"nativeSrc": "2104:105:11",
																"nodeType": "YulFunctionCall",
																"src": "2104:105:11"
															},
															"nativeSrc": "2104:105:11",
															"nodeType": "YulExpressionStatement",
															"src": "2104:105:11"
														}
													]
												},
												"name": "update_storage_value_t_uint256_to_t_uint256",
												"nativeSrc": "1946:269:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "1999:4:11",
														"nodeType": "YulTypedName",
														"src": "1999:4:11",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "2005:6:11",
														"nodeType": "YulTypedName",
														"src": "2005:6:11",
														"type": ""
													},
													{
														"name": "value_0",
														"nativeSrc": "2013:7:11",
														"nodeType": "YulTypedName",
														"src": "2013:7:11",
														"type": ""
													}
												],
												"src": "1946:269:11"
											},
											{
												"body": {
													"nativeSrc": "2270:24:11",
													"nodeType": "YulBlock",
													"src": "2270:24:11",
													"statements": [
														{
															"nativeSrc": "2280:8:11",
															"nodeType": "YulAssignment",
															"src": "2280:8:11",
															"value": {
																"kind": "number",
																"nativeSrc": "2287:1:11",
																"nodeType": "YulLiteral",
																"src": "2287:1:11",
																"type": "",
																"value": "0"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "2280:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "2280:3:11"
																}
															]
														}
													]
												},
												"name": "zero_value_for_split_t_uint256",
												"nativeSrc": "2221:73:11",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "2266:3:11",
														"nodeType": "YulTypedName",
														"src": "2266:3:11",
														"type": ""
													}
												],
												"src": "2221:73:11"
											},
											{
												"body": {
													"nativeSrc": "2353:136:11",
													"nodeType": "YulBlock",
													"src": "2353:136:11",
													"statements": [
														{
															"nativeSrc": "2363:46:11",
															"nodeType": "YulVariableDeclaration",
															"src": "2363:46:11",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "zero_value_for_split_t_uint256",
																	"nativeSrc": "2377:30:11",
																	"nodeType": "YulIdentifier",
																	"src": "2377:30:11"
																},
																"nativeSrc": "2377:32:11",
																"nodeType": "YulFunctionCall",
																"src": "2377:32:11"
															},
															"variables": [
																{
																	"name": "zero_0",
																	"nativeSrc": "2367:6:11",
																	"nodeType": "YulTypedName",
																	"src": "2367:6:11",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "2462:4:11",
																		"nodeType": "YulIdentifier",
																		"src": "2462:4:11"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "2468:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "2468:6:11"
																	},
																	{
																		"name": "zero_0",
																		"nativeSrc": "2476:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "2476:6:11"
																	}
																],
																"functionName": {
																	"name": "update_storage_value_t_uint256_to_t_uint256",
																	"nativeSrc": "2418:43:11",
																	"nodeType": "YulIdentifier",
																	"src": "2418:43:11"
																},
																"nativeSrc": "2418:65:11",
																"nodeType": "YulFunctionCall",
																"src": "2418:65:11"
															},
															"nativeSrc": "2418:65:11",
															"nodeType": "YulExpressionStatement",
															"src": "2418:65:11"
														}
													]
												},
												"name": "storage_set_to_zero_t_uint256",
												"nativeSrc": "2300:189:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "2339:4:11",
														"nodeType": "YulTypedName",
														"src": "2339:4:11",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "2345:6:11",
														"nodeType": "YulTypedName",
														"src": "2345:6:11",
														"type": ""
													}
												],
												"src": "2300:189:11"
											},
											{
												"body": {
													"nativeSrc": "2545:136:11",
													"nodeType": "YulBlock",
													"src": "2545:136:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "2612:63:11",
																"nodeType": "YulBlock",
																"src": "2612:63:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "2656:5:11",
																					"nodeType": "YulIdentifier",
																					"src": "2656:5:11"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2663:1:11",
																					"nodeType": "YulLiteral",
																					"src": "2663:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "storage_set_to_zero_t_uint256",
																				"nativeSrc": "2626:29:11",
																				"nodeType": "YulIdentifier",
																				"src": "2626:29:11"
																			},
																			"nativeSrc": "2626:39:11",
																			"nodeType": "YulFunctionCall",
																			"src": "2626:39:11"
																		},
																		"nativeSrc": "2626:39:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "2626:39:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "start",
																		"nativeSrc": "2565:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "2565:5:11"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "2572:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "2572:3:11"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "2562:2:11",
																	"nodeType": "YulIdentifier",
																	"src": "2562:2:11"
																},
																"nativeSrc": "2562:14:11",
																"nodeType": "YulFunctionCall",
																"src": "2562:14:11"
															},
															"nativeSrc": "2555:120:11",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "2577:26:11",
																"nodeType": "YulBlock",
																"src": "2577:26:11",
																"statements": [
																	{
																		"nativeSrc": "2579:22:11",
																		"nodeType": "YulAssignment",
																		"src": "2579:22:11",
																		"value": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "2592:5:11",
																					"nodeType": "YulIdentifier",
																					"src": "2592:5:11"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2599:1:11",
																					"nodeType": "YulLiteral",
																					"src": "2599:1:11",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "2588:3:11",
																				"nodeType": "YulIdentifier",
																				"src": "2588:3:11"
																			},
																			"nativeSrc": "2588:13:11",
																			"nodeType": "YulFunctionCall",
																			"src": "2588:13:11"
																		},
																		"variableNames": [
																			{
																				"name": "start",
																				"nativeSrc": "2579:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "2579:5:11"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "2559:2:11",
																"nodeType": "YulBlock",
																"src": "2559:2:11",
																"statements": []
															},
															"src": "2555:120:11"
														}
													]
												},
												"name": "clear_storage_range_t_bytes1",
												"nativeSrc": "2495:186:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nativeSrc": "2533:5:11",
														"nodeType": "YulTypedName",
														"src": "2533:5:11",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2540:3:11",
														"nodeType": "YulTypedName",
														"src": "2540:3:11",
														"type": ""
													}
												],
												"src": "2495:186:11"
											},
											{
												"body": {
													"nativeSrc": "2766:464:11",
													"nodeType": "YulBlock",
													"src": "2766:464:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "2792:431:11",
																"nodeType": "YulBlock",
																"src": "2792:431:11",
																"statements": [
																	{
																		"nativeSrc": "2806:54:11",
																		"nodeType": "YulVariableDeclaration",
																		"src": "2806:54:11",
																		"value": {
																			"arguments": [
																				{
																					"name": "array",
																					"nativeSrc": "2854:5:11",
																					"nodeType": "YulIdentifier",
																					"src": "2854:5:11"
																				}
																			],
																			"functionName": {
																				"name": "array_dataslot_t_string_storage",
																				"nativeSrc": "2822:31:11",
																				"nodeType": "YulIdentifier",
																				"src": "2822:31:11"
																			},
																			"nativeSrc": "2822:38:11",
																			"nodeType": "YulFunctionCall",
																			"src": "2822:38:11"
																		},
																		"variables": [
																			{
																				"name": "dataArea",
																				"nativeSrc": "2810:8:11",
																				"nodeType": "YulTypedName",
																				"src": "2810:8:11",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "2873:63:11",
																		"nodeType": "YulVariableDeclaration",
																		"src": "2873:63:11",
																		"value": {
																			"arguments": [
																				{
																					"name": "dataArea",
																					"nativeSrc": "2896:8:11",
																					"nodeType": "YulIdentifier",
																					"src": "2896:8:11"
																				},
																				{
																					"arguments": [
																						{
																							"name": "startIndex",
																							"nativeSrc": "2924:10:11",
																							"nodeType": "YulIdentifier",
																							"src": "2924:10:11"
																						}
																					],
																					"functionName": {
																						"name": "divide_by_32_ceil",
																						"nativeSrc": "2906:17:11",
																						"nodeType": "YulIdentifier",
																						"src": "2906:17:11"
																					},
																					"nativeSrc": "2906:29:11",
																					"nodeType": "YulFunctionCall",
																					"src": "2906:29:11"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "2892:3:11",
																				"nodeType": "YulIdentifier",
																				"src": "2892:3:11"
																			},
																			"nativeSrc": "2892:44:11",
																			"nodeType": "YulFunctionCall",
																			"src": "2892:44:11"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "2877:11:11",
																				"nodeType": "YulTypedName",
																				"src": "2877:11:11",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "3093:27:11",
																			"nodeType": "YulBlock",
																			"src": "3093:27:11",
																			"statements": [
																				{
																					"nativeSrc": "3095:23:11",
																					"nodeType": "YulAssignment",
																					"src": "3095:23:11",
																					"value": {
																						"name": "dataArea",
																						"nativeSrc": "3110:8:11",
																						"nodeType": "YulIdentifier",
																						"src": "3110:8:11"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "3095:11:11",
																							"nodeType": "YulIdentifier",
																							"src": "3095:11:11"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "3077:10:11",
																					"nodeType": "YulIdentifier",
																					"src": "3077:10:11"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3089:2:11",
																					"nodeType": "YulLiteral",
																					"src": "3089:2:11",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "3074:2:11",
																				"nodeType": "YulIdentifier",
																				"src": "3074:2:11"
																			},
																			"nativeSrc": "3074:18:11",
																			"nodeType": "YulFunctionCall",
																			"src": "3074:18:11"
																		},
																		"nativeSrc": "3071:49:11",
																		"nodeType": "YulIf",
																		"src": "3071:49:11"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "deleteStart",
																					"nativeSrc": "3162:11:11",
																					"nodeType": "YulIdentifier",
																					"src": "3162:11:11"
																				},
																				{
																					"arguments": [
																						{
																							"name": "dataArea",
																							"nativeSrc": "3179:8:11",
																							"nodeType": "YulIdentifier",
																							"src": "3179:8:11"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "3207:3:11",
																									"nodeType": "YulIdentifier",
																									"src": "3207:3:11"
																								}
																							],
																							"functionName": {
																								"name": "divide_by_32_ceil",
																								"nativeSrc": "3189:17:11",
																								"nodeType": "YulIdentifier",
																								"src": "3189:17:11"
																							},
																							"nativeSrc": "3189:22:11",
																							"nodeType": "YulFunctionCall",
																							"src": "3189:22:11"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "3175:3:11",
																						"nodeType": "YulIdentifier",
																						"src": "3175:3:11"
																					},
																					"nativeSrc": "3175:37:11",
																					"nodeType": "YulFunctionCall",
																					"src": "3175:37:11"
																				}
																			],
																			"functionName": {
																				"name": "clear_storage_range_t_bytes1",
																				"nativeSrc": "3133:28:11",
																				"nodeType": "YulIdentifier",
																				"src": "3133:28:11"
																			},
																			"nativeSrc": "3133:80:11",
																			"nodeType": "YulFunctionCall",
																			"src": "3133:80:11"
																		},
																		"nativeSrc": "3133:80:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "3133:80:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "2783:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "2783:3:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2788:2:11",
																		"nodeType": "YulLiteral",
																		"src": "2788:2:11",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2780:2:11",
																	"nodeType": "YulIdentifier",
																	"src": "2780:2:11"
																},
																"nativeSrc": "2780:11:11",
																"nodeType": "YulFunctionCall",
																"src": "2780:11:11"
															},
															"nativeSrc": "2777:446:11",
															"nodeType": "YulIf",
															"src": "2777:446:11"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_t_string_storage",
												"nativeSrc": "2687:543:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "2742:5:11",
														"nodeType": "YulTypedName",
														"src": "2742:5:11",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "2749:3:11",
														"nodeType": "YulTypedName",
														"src": "2749:3:11",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "2754:10:11",
														"nodeType": "YulTypedName",
														"src": "2754:10:11",
														"type": ""
													}
												],
												"src": "2687:543:11"
											},
											{
												"body": {
													"nativeSrc": "3299:54:11",
													"nodeType": "YulBlock",
													"src": "3299:54:11",
													"statements": [
														{
															"nativeSrc": "3309:37:11",
															"nodeType": "YulAssignment",
															"src": "3309:37:11",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "3334:4:11",
																		"nodeType": "YulIdentifier",
																		"src": "3334:4:11"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "3340:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "3340:5:11"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "3330:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "3330:3:11"
																},
																"nativeSrc": "3330:16:11",
																"nodeType": "YulFunctionCall",
																"src": "3330:16:11"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "3309:8:11",
																	"nodeType": "YulIdentifier",
																	"src": "3309:8:11"
																}
															]
														}
													]
												},
												"name": "shift_right_unsigned_dynamic",
												"nativeSrc": "3236:117:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "3274:4:11",
														"nodeType": "YulTypedName",
														"src": "3274:4:11",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "3280:5:11",
														"nodeType": "YulTypedName",
														"src": "3280:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "3290:8:11",
														"nodeType": "YulTypedName",
														"src": "3290:8:11",
														"type": ""
													}
												],
												"src": "3236:117:11"
											},
											{
												"body": {
													"nativeSrc": "3410:118:11",
													"nodeType": "YulBlock",
													"src": "3410:118:11",
													"statements": [
														{
															"nativeSrc": "3420:68:11",
															"nodeType": "YulVariableDeclaration",
															"src": "3420:68:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "3469:1:11",
																						"nodeType": "YulLiteral",
																						"src": "3469:1:11",
																						"type": "",
																						"value": "8"
																					},
																					{
																						"name": "bytes",
																						"nativeSrc": "3472:5:11",
																						"nodeType": "YulIdentifier",
																						"src": "3472:5:11"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "3465:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "3465:3:11"
																				},
																				"nativeSrc": "3465:13:11",
																				"nodeType": "YulFunctionCall",
																				"src": "3465:13:11"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "3484:1:11",
																						"nodeType": "YulLiteral",
																						"src": "3484:1:11",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "3480:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "3480:3:11"
																				},
																				"nativeSrc": "3480:6:11",
																				"nodeType": "YulFunctionCall",
																				"src": "3480:6:11"
																			}
																		],
																		"functionName": {
																			"name": "shift_right_unsigned_dynamic",
																			"nativeSrc": "3436:28:11",
																			"nodeType": "YulIdentifier",
																			"src": "3436:28:11"
																		},
																		"nativeSrc": "3436:51:11",
																		"nodeType": "YulFunctionCall",
																		"src": "3436:51:11"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nativeSrc": "3432:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "3432:3:11"
																},
																"nativeSrc": "3432:56:11",
																"nodeType": "YulFunctionCall",
																"src": "3432:56:11"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "3424:4:11",
																	"nodeType": "YulTypedName",
																	"src": "3424:4:11",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "3497:25:11",
															"nodeType": "YulAssignment",
															"src": "3497:25:11",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "3511:4:11",
																		"nodeType": "YulIdentifier",
																		"src": "3511:4:11"
																	},
																	{
																		"name": "mask",
																		"nativeSrc": "3517:4:11",
																		"nodeType": "YulIdentifier",
																		"src": "3517:4:11"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "3507:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "3507:3:11"
																},
																"nativeSrc": "3507:15:11",
																"nodeType": "YulFunctionCall",
																"src": "3507:15:11"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "3497:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "3497:6:11"
																}
															]
														}
													]
												},
												"name": "mask_bytes_dynamic",
												"nativeSrc": "3359:169:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "3387:4:11",
														"nodeType": "YulTypedName",
														"src": "3387:4:11",
														"type": ""
													},
													{
														"name": "bytes",
														"nativeSrc": "3393:5:11",
														"nodeType": "YulTypedName",
														"src": "3393:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "3403:6:11",
														"nodeType": "YulTypedName",
														"src": "3403:6:11",
														"type": ""
													}
												],
												"src": "3359:169:11"
											},
											{
												"body": {
													"nativeSrc": "3614:214:11",
													"nodeType": "YulBlock",
													"src": "3614:214:11",
													"statements": [
														{
															"nativeSrc": "3747:37:11",
															"nodeType": "YulAssignment",
															"src": "3747:37:11",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "3774:4:11",
																		"nodeType": "YulIdentifier",
																		"src": "3774:4:11"
																	},
																	{
																		"name": "len",
																		"nativeSrc": "3780:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "3780:3:11"
																	}
																],
																"functionName": {
																	"name": "mask_bytes_dynamic",
																	"nativeSrc": "3755:18:11",
																	"nodeType": "YulIdentifier",
																	"src": "3755:18:11"
																},
																"nativeSrc": "3755:29:11",
																"nodeType": "YulFunctionCall",
																"src": "3755:29:11"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "3747:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "3747:4:11"
																}
															]
														},
														{
															"nativeSrc": "3793:29:11",
															"nodeType": "YulAssignment",
															"src": "3793:29:11",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "3804:4:11",
																		"nodeType": "YulIdentifier",
																		"src": "3804:4:11"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "3814:1:11",
																				"nodeType": "YulLiteral",
																				"src": "3814:1:11",
																				"type": "",
																				"value": "2"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "3817:3:11",
																				"nodeType": "YulIdentifier",
																				"src": "3817:3:11"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "3810:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "3810:3:11"
																		},
																		"nativeSrc": "3810:11:11",
																		"nodeType": "YulFunctionCall",
																		"src": "3810:11:11"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "3801:2:11",
																	"nodeType": "YulIdentifier",
																	"src": "3801:2:11"
																},
																"nativeSrc": "3801:21:11",
																"nodeType": "YulFunctionCall",
																"src": "3801:21:11"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "3793:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "3793:4:11"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "3533:295:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "3595:4:11",
														"nodeType": "YulTypedName",
														"src": "3595:4:11",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "3601:3:11",
														"nodeType": "YulTypedName",
														"src": "3601:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "3609:4:11",
														"nodeType": "YulTypedName",
														"src": "3609:4:11",
														"type": ""
													}
												],
												"src": "3533:295:11"
											},
											{
												"body": {
													"nativeSrc": "3925:1303:11",
													"nodeType": "YulBlock",
													"src": "3925:1303:11",
													"statements": [
														{
															"nativeSrc": "3936:51:11",
															"nodeType": "YulVariableDeclaration",
															"src": "3936:51:11",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "3983:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "3983:3:11"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "3950:32:11",
																	"nodeType": "YulIdentifier",
																	"src": "3950:32:11"
																},
																"nativeSrc": "3950:37:11",
																"nodeType": "YulFunctionCall",
																"src": "3950:37:11"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "3940:6:11",
																	"nodeType": "YulTypedName",
																	"src": "3940:6:11",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4072:22:11",
																"nodeType": "YulBlock",
																"src": "4072:22:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "4074:16:11",
																				"nodeType": "YulIdentifier",
																				"src": "4074:16:11"
																			},
																			"nativeSrc": "4074:18:11",
																			"nodeType": "YulFunctionCall",
																			"src": "4074:18:11"
																		},
																		"nativeSrc": "4074:18:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "4074:18:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "4044:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "4044:6:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4052:18:11",
																		"nodeType": "YulLiteral",
																		"src": "4052:18:11",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "4041:2:11",
																	"nodeType": "YulIdentifier",
																	"src": "4041:2:11"
																},
																"nativeSrc": "4041:30:11",
																"nodeType": "YulFunctionCall",
																"src": "4041:30:11"
															},
															"nativeSrc": "4038:56:11",
															"nodeType": "YulIf",
															"src": "4038:56:11"
														},
														{
															"nativeSrc": "4104:52:11",
															"nodeType": "YulVariableDeclaration",
															"src": "4104:52:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "slot",
																				"nativeSrc": "4150:4:11",
																				"nodeType": "YulIdentifier",
																				"src": "4150:4:11"
																			}
																		],
																		"functionName": {
																			"name": "sload",
																			"nativeSrc": "4144:5:11",
																			"nodeType": "YulIdentifier",
																			"src": "4144:5:11"
																		},
																		"nativeSrc": "4144:11:11",
																		"nodeType": "YulFunctionCall",
																		"src": "4144:11:11"
																	}
																],
																"functionName": {
																	"name": "extract_byte_array_length",
																	"nativeSrc": "4118:25:11",
																	"nodeType": "YulIdentifier",
																	"src": "4118:25:11"
																},
																"nativeSrc": "4118:38:11",
																"nodeType": "YulFunctionCall",
																"src": "4118:38:11"
															},
															"variables": [
																{
																	"name": "oldLen",
																	"nativeSrc": "4108:6:11",
																	"nodeType": "YulTypedName",
																	"src": "4108:6:11",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "4249:4:11",
																		"nodeType": "YulIdentifier",
																		"src": "4249:4:11"
																	},
																	{
																		"name": "oldLen",
																		"nativeSrc": "4255:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "4255:6:11"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "4263:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "4263:6:11"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_t_string_storage",
																	"nativeSrc": "4203:45:11",
																	"nodeType": "YulIdentifier",
																	"src": "4203:45:11"
																},
																"nativeSrc": "4203:67:11",
																"nodeType": "YulFunctionCall",
																"src": "4203:67:11"
															},
															"nativeSrc": "4203:67:11",
															"nodeType": "YulExpressionStatement",
															"src": "4203:67:11"
														},
														{
															"nativeSrc": "4280:18:11",
															"nodeType": "YulVariableDeclaration",
															"src": "4280:18:11",
															"value": {
																"kind": "number",
																"nativeSrc": "4297:1:11",
																"nodeType": "YulLiteral",
																"src": "4297:1:11",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "4284:9:11",
																	"nodeType": "YulTypedName",
																	"src": "4284:9:11",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "4308:17:11",
															"nodeType": "YulAssignment",
															"src": "4308:17:11",
															"value": {
																"kind": "number",
																"nativeSrc": "4321:4:11",
																"nodeType": "YulLiteral",
																"src": "4321:4:11",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "4308:9:11",
																	"nodeType": "YulIdentifier",
																	"src": "4308:9:11"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "4372:611:11",
																		"nodeType": "YulBlock",
																		"src": "4372:611:11",
																		"statements": [
																			{
																				"nativeSrc": "4386:37:11",
																				"nodeType": "YulVariableDeclaration",
																				"src": "4386:37:11",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "4405:6:11",
																							"nodeType": "YulIdentifier",
																							"src": "4405:6:11"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "4417:4:11",
																									"nodeType": "YulLiteral",
																									"src": "4417:4:11",
																									"type": "",
																									"value": "0x1f"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "4413:3:11",
																								"nodeType": "YulIdentifier",
																								"src": "4413:3:11"
																							},
																							"nativeSrc": "4413:9:11",
																							"nodeType": "YulFunctionCall",
																							"src": "4413:9:11"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "4401:3:11",
																						"nodeType": "YulIdentifier",
																						"src": "4401:3:11"
																					},
																					"nativeSrc": "4401:22:11",
																					"nodeType": "YulFunctionCall",
																					"src": "4401:22:11"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "4390:7:11",
																						"nodeType": "YulTypedName",
																						"src": "4390:7:11",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "4437:51:11",
																				"nodeType": "YulVariableDeclaration",
																				"src": "4437:51:11",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "4483:4:11",
																							"nodeType": "YulIdentifier",
																							"src": "4483:4:11"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_t_string_storage",
																						"nativeSrc": "4451:31:11",
																						"nodeType": "YulIdentifier",
																						"src": "4451:31:11"
																					},
																					"nativeSrc": "4451:37:11",
																					"nodeType": "YulFunctionCall",
																					"src": "4451:37:11"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "4441:6:11",
																						"nodeType": "YulTypedName",
																						"src": "4441:6:11",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "4501:10:11",
																				"nodeType": "YulVariableDeclaration",
																				"src": "4501:10:11",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "4510:1:11",
																					"nodeType": "YulLiteral",
																					"src": "4510:1:11",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "4505:1:11",
																						"nodeType": "YulTypedName",
																						"src": "4505:1:11",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "4569:163:11",
																					"nodeType": "YulBlock",
																					"src": "4569:163:11",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "4594:6:11",
																										"nodeType": "YulIdentifier",
																										"src": "4594:6:11"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "4612:3:11",
																														"nodeType": "YulIdentifier",
																														"src": "4612:3:11"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "4617:9:11",
																														"nodeType": "YulIdentifier",
																														"src": "4617:9:11"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "4608:3:11",
																													"nodeType": "YulIdentifier",
																													"src": "4608:3:11"
																												},
																												"nativeSrc": "4608:19:11",
																												"nodeType": "YulFunctionCall",
																												"src": "4608:19:11"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "4602:5:11",
																											"nodeType": "YulIdentifier",
																											"src": "4602:5:11"
																										},
																										"nativeSrc": "4602:26:11",
																										"nodeType": "YulFunctionCall",
																										"src": "4602:26:11"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "4587:6:11",
																									"nodeType": "YulIdentifier",
																									"src": "4587:6:11"
																								},
																								"nativeSrc": "4587:42:11",
																								"nodeType": "YulFunctionCall",
																								"src": "4587:42:11"
																							},
																							"nativeSrc": "4587:42:11",
																							"nodeType": "YulExpressionStatement",
																							"src": "4587:42:11"
																						},
																						{
																							"nativeSrc": "4646:24:11",
																							"nodeType": "YulAssignment",
																							"src": "4646:24:11",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "4660:6:11",
																										"nodeType": "YulIdentifier",
																										"src": "4660:6:11"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "4668:1:11",
																										"nodeType": "YulLiteral",
																										"src": "4668:1:11",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "4656:3:11",
																									"nodeType": "YulIdentifier",
																									"src": "4656:3:11"
																								},
																								"nativeSrc": "4656:14:11",
																								"nodeType": "YulFunctionCall",
																								"src": "4656:14:11"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "4646:6:11",
																									"nodeType": "YulIdentifier",
																									"src": "4646:6:11"
																								}
																							]
																						},
																						{
																							"nativeSrc": "4687:31:11",
																							"nodeType": "YulAssignment",
																							"src": "4687:31:11",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "4704:9:11",
																										"nodeType": "YulIdentifier",
																										"src": "4704:9:11"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "4715:2:11",
																										"nodeType": "YulLiteral",
																										"src": "4715:2:11",
																										"type": "",
																										"value": "32"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "4700:3:11",
																									"nodeType": "YulIdentifier",
																									"src": "4700:3:11"
																								},
																								"nativeSrc": "4700:18:11",
																								"nodeType": "YulFunctionCall",
																								"src": "4700:18:11"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "4687:9:11",
																									"nodeType": "YulIdentifier",
																									"src": "4687:9:11"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "4535:1:11",
																							"nodeType": "YulIdentifier",
																							"src": "4535:1:11"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "4538:7:11",
																							"nodeType": "YulIdentifier",
																							"src": "4538:7:11"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "4532:2:11",
																						"nodeType": "YulIdentifier",
																						"src": "4532:2:11"
																					},
																					"nativeSrc": "4532:14:11",
																					"nodeType": "YulFunctionCall",
																					"src": "4532:14:11"
																				},
																				"nativeSrc": "4524:208:11",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "4547:21:11",
																					"nodeType": "YulBlock",
																					"src": "4547:21:11",
																					"statements": [
																						{
																							"nativeSrc": "4549:17:11",
																							"nodeType": "YulAssignment",
																							"src": "4549:17:11",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "4558:1:11",
																										"nodeType": "YulIdentifier",
																										"src": "4558:1:11"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "4561:4:11",
																										"nodeType": "YulLiteral",
																										"src": "4561:4:11",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "4554:3:11",
																									"nodeType": "YulIdentifier",
																									"src": "4554:3:11"
																								},
																								"nativeSrc": "4554:12:11",
																								"nodeType": "YulFunctionCall",
																								"src": "4554:12:11"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "4549:1:11",
																									"nodeType": "YulIdentifier",
																									"src": "4549:1:11"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "4528:3:11",
																					"nodeType": "YulBlock",
																					"src": "4528:3:11",
																					"statements": []
																				},
																				"src": "4524:208:11"
																			},
																			{
																				"body": {
																					"nativeSrc": "4768:156:11",
																					"nodeType": "YulBlock",
																					"src": "4768:156:11",
																					"statements": [
																						{
																							"nativeSrc": "4786:43:11",
																							"nodeType": "YulVariableDeclaration",
																							"src": "4786:43:11",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "4813:3:11",
																												"nodeType": "YulIdentifier",
																												"src": "4813:3:11"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "4818:9:11",
																												"nodeType": "YulIdentifier",
																												"src": "4818:9:11"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "4809:3:11",
																											"nodeType": "YulIdentifier",
																											"src": "4809:3:11"
																										},
																										"nativeSrc": "4809:19:11",
																										"nodeType": "YulFunctionCall",
																										"src": "4809:19:11"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "4803:5:11",
																									"nodeType": "YulIdentifier",
																									"src": "4803:5:11"
																								},
																								"nativeSrc": "4803:26:11",
																								"nodeType": "YulFunctionCall",
																								"src": "4803:26:11"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "4790:9:11",
																									"nodeType": "YulTypedName",
																									"src": "4790:9:11",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "4853:6:11",
																										"nodeType": "YulIdentifier",
																										"src": "4853:6:11"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "4880:9:11",
																												"nodeType": "YulIdentifier",
																												"src": "4880:9:11"
																											},
																											{
																												"arguments": [
																													{
																														"name": "newLen",
																														"nativeSrc": "4895:6:11",
																														"nodeType": "YulIdentifier",
																														"src": "4895:6:11"
																													},
																													{
																														"kind": "number",
																														"nativeSrc": "4903:4:11",
																														"nodeType": "YulLiteral",
																														"src": "4903:4:11",
																														"type": "",
																														"value": "0x1f"
																													}
																												],
																												"functionName": {
																													"name": "and",
																													"nativeSrc": "4891:3:11",
																													"nodeType": "YulIdentifier",
																													"src": "4891:3:11"
																												},
																												"nativeSrc": "4891:17:11",
																												"nodeType": "YulFunctionCall",
																												"src": "4891:17:11"
																											}
																										],
																										"functionName": {
																											"name": "mask_bytes_dynamic",
																											"nativeSrc": "4861:18:11",
																											"nodeType": "YulIdentifier",
																											"src": "4861:18:11"
																										},
																										"nativeSrc": "4861:48:11",
																										"nodeType": "YulFunctionCall",
																										"src": "4861:48:11"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "4846:6:11",
																									"nodeType": "YulIdentifier",
																									"src": "4846:6:11"
																								},
																								"nativeSrc": "4846:64:11",
																								"nodeType": "YulFunctionCall",
																								"src": "4846:64:11"
																							},
																							"nativeSrc": "4846:64:11",
																							"nodeType": "YulExpressionStatement",
																							"src": "4846:64:11"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "4751:7:11",
																							"nodeType": "YulIdentifier",
																							"src": "4751:7:11"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "4760:6:11",
																							"nodeType": "YulIdentifier",
																							"src": "4760:6:11"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "4748:2:11",
																						"nodeType": "YulIdentifier",
																						"src": "4748:2:11"
																					},
																					"nativeSrc": "4748:19:11",
																					"nodeType": "YulFunctionCall",
																					"src": "4748:19:11"
																				},
																				"nativeSrc": "4745:179:11",
																				"nodeType": "YulIf",
																				"src": "4745:179:11"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "4944:4:11",
																							"nodeType": "YulIdentifier",
																							"src": "4944:4:11"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "newLen",
																											"nativeSrc": "4958:6:11",
																											"nodeType": "YulIdentifier",
																											"src": "4958:6:11"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "4966:1:11",
																											"nodeType": "YulLiteral",
																											"src": "4966:1:11",
																											"type": "",
																											"value": "2"
																										}
																									],
																									"functionName": {
																										"name": "mul",
																										"nativeSrc": "4954:3:11",
																										"nodeType": "YulIdentifier",
																										"src": "4954:3:11"
																									},
																									"nativeSrc": "4954:14:11",
																									"nodeType": "YulFunctionCall",
																									"src": "4954:14:11"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "4970:1:11",
																									"nodeType": "YulLiteral",
																									"src": "4970:1:11",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "4950:3:11",
																								"nodeType": "YulIdentifier",
																								"src": "4950:3:11"
																							},
																							"nativeSrc": "4950:22:11",
																							"nodeType": "YulFunctionCall",
																							"src": "4950:22:11"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "4937:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "4937:6:11"
																					},
																					"nativeSrc": "4937:36:11",
																					"nodeType": "YulFunctionCall",
																					"src": "4937:36:11"
																				},
																				"nativeSrc": "4937:36:11",
																				"nodeType": "YulExpressionStatement",
																				"src": "4937:36:11"
																			}
																		]
																	},
																	"nativeSrc": "4365:618:11",
																	"nodeType": "YulCase",
																	"src": "4365:618:11",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4370:1:11",
																		"nodeType": "YulLiteral",
																		"src": "4370:1:11",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "5000:222:11",
																		"nodeType": "YulBlock",
																		"src": "5000:222:11",
																		"statements": [
																			{
																				"nativeSrc": "5014:14:11",
																				"nodeType": "YulVariableDeclaration",
																				"src": "5014:14:11",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "5027:1:11",
																					"nodeType": "YulLiteral",
																					"src": "5027:1:11",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "5018:5:11",
																						"nodeType": "YulTypedName",
																						"src": "5018:5:11",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "5051:67:11",
																					"nodeType": "YulBlock",
																					"src": "5051:67:11",
																					"statements": [
																						{
																							"nativeSrc": "5069:35:11",
																							"nodeType": "YulAssignment",
																							"src": "5069:35:11",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "5088:3:11",
																												"nodeType": "YulIdentifier",
																												"src": "5088:3:11"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "5093:9:11",
																												"nodeType": "YulIdentifier",
																												"src": "5093:9:11"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "5084:3:11",
																											"nodeType": "YulIdentifier",
																											"src": "5084:3:11"
																										},
																										"nativeSrc": "5084:19:11",
																										"nodeType": "YulFunctionCall",
																										"src": "5084:19:11"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "5078:5:11",
																									"nodeType": "YulIdentifier",
																									"src": "5078:5:11"
																								},
																								"nativeSrc": "5078:26:11",
																								"nodeType": "YulFunctionCall",
																								"src": "5078:26:11"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "5069:5:11",
																									"nodeType": "YulIdentifier",
																									"src": "5069:5:11"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "5044:6:11",
																					"nodeType": "YulIdentifier",
																					"src": "5044:6:11"
																				},
																				"nativeSrc": "5041:77:11",
																				"nodeType": "YulIf",
																				"src": "5041:77:11"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "5138:4:11",
																							"nodeType": "YulIdentifier",
																							"src": "5138:4:11"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "5197:5:11",
																									"nodeType": "YulIdentifier",
																									"src": "5197:5:11"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "5204:6:11",
																									"nodeType": "YulIdentifier",
																									"src": "5204:6:11"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "5144:52:11",
																								"nodeType": "YulIdentifier",
																								"src": "5144:52:11"
																							},
																							"nativeSrc": "5144:67:11",
																							"nodeType": "YulFunctionCall",
																							"src": "5144:67:11"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "5131:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "5131:6:11"
																					},
																					"nativeSrc": "5131:81:11",
																					"nodeType": "YulFunctionCall",
																					"src": "5131:81:11"
																				},
																				"nativeSrc": "5131:81:11",
																				"nodeType": "YulExpressionStatement",
																				"src": "5131:81:11"
																			}
																		]
																	},
																	"nativeSrc": "4992:230:11",
																	"nodeType": "YulCase",
																	"src": "4992:230:11",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "4345:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "4345:6:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4353:2:11",
																		"nodeType": "YulLiteral",
																		"src": "4353:2:11",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "4342:2:11",
																	"nodeType": "YulIdentifier",
																	"src": "4342:2:11"
																},
																"nativeSrc": "4342:14:11",
																"nodeType": "YulFunctionCall",
																"src": "4342:14:11"
															},
															"nativeSrc": "4335:887:11",
															"nodeType": "YulSwitch",
															"src": "4335:887:11"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "3833:1395:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "3914:4:11",
														"nodeType": "YulTypedName",
														"src": "3914:4:11",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "3920:3:11",
														"nodeType": "YulTypedName",
														"src": "3920:3:11",
														"type": ""
													}
												],
												"src": "3833:1395:11"
											}
										]
									},
									"contents": "{\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n}\n",
									"id": 11,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b506040518060400160405280600b81526020017f526577617264546f6b656e0000000000000000000000000000000000000000008152506040518060400160405280600381526020017f5257440000000000000000000000000000000000000000000000000000000000815250816003908161008b91906102dd565b50806004908161009b91906102dd565b5050506103ac565b5f81519050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f600282049050600182168061011e57607f821691505b602082108103610131576101306100da565b5b50919050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f600883026101937fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82610158565b61019d8683610158565b95508019841693508086168417925050509392505050565b5f819050919050565b5f819050919050565b5f6101e16101dc6101d7846101b5565b6101be565b6101b5565b9050919050565b5f819050919050565b6101fa836101c7565b61020e610206826101e8565b848454610164565b825550505050565b5f90565b610222610216565b61022d8184846101f1565b505050565b5b81811015610250576102455f8261021a565b600181019050610233565b5050565b601f8211156102955761026681610137565b61026f84610149565b8101602085101561027e578190505b61029261028a85610149565b830182610232565b50505b505050565b5f82821c905092915050565b5f6102b55f198460080261029a565b1980831691505092915050565b5f6102cd83836102a6565b9150826002028217905092915050565b6102e6826100a3565b67ffffffffffffffff8111156102ff576102fe6100ad565b5b6103098254610107565b610314828285610254565b5f60209050601f831160018114610345575f8415610333578287015190505b61033d85826102c2565b8655506103a4565b601f19841661035386610137565b5f5b8281101561037a57848901518255600182019150602085019450602081019050610355565b868310156103975784890151610393601f8916826102a6565b8355505b6001600288020188555050505b505050505050565b610ebf806103b95f395ff3fe608060405234801561000f575f80fd5b506004361061009c575f3560e01c806370a082311161006457806370a082311461015a57806395d89b411461018a578063a0712d68146101a8578063a9059cbb146101c4578063dd62ed3e146101f45761009c565b806306fdde03146100a0578063095ea7b3146100be57806318160ddd146100ee57806323b872dd1461010c578063313ce5671461013c575b5f80fd5b6100a8610224565b6040516100b59190610b0d565b60405180910390f35b6100d860048036038101906100d39190610bbe565b6102b4565b6040516100e59190610c16565b60405180910390f35b6100f66102d6565b6040516101039190610c3e565b60405180910390f35b61012660048036038101906101219190610c57565b6102df565b6040516101339190610c16565b60405180910390f35b61014461030d565b6040516101519190610cc2565b60405180910390f35b610174600480360381019061016f9190610cdb565b610315565b6040516101819190610c3e565b60405180910390f35b61019261035a565b60405161019f9190610b0d565b60405180910390f35b6101c260048036038101906101bd9190610d06565b6103ea565b005b6101de60048036038101906101d99190610bbe565b6103f7565b6040516101eb9190610c16565b60405180910390f35b61020e60048036038101906102099190610d31565b610419565b60405161021b9190610c3e565b60405180910390f35b60606003805461023390610d9c565b80601f016020809104026020016040519081016040528092919081815260200182805461025f90610d9c565b80156102aa5780601f10610281576101008083540402835291602001916102aa565b820191905f5260205f20905b81548152906001019060200180831161028d57829003601f168201915b5050505050905090565b5f806102be61049b565b90506102cb8185856104a2565b600191505092915050565b5f600254905090565b5f806102e961049b565b90506102f68582856104b4565b610301858585610546565b60019150509392505050565b5f6012905090565b5f805f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b60606004805461036990610d9c565b80601f016020809104026020016040519081016040528092919081815260200182805461039590610d9c565b80156103e05780601f106103b7576101008083540402835291602001916103e0565b820191905f5260205f20905b8154815290600101906020018083116103c357829003601f168201915b5050505050905090565b6103f43382610636565b50565b5f8061040161049b565b905061040e818585610546565b600191505092915050565b5f60015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905092915050565b5f33905090565b6104af83838360016106b5565b505050565b5f6104bf8484610419565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146105405781811015610531578281836040517ffb8f41b200000000000000000000000000000000000000000000000000000000815260040161052893929190610ddb565b60405180910390fd5b61053f84848484035f6106b5565b5b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036105b6575f6040517f96c6fd1e0000000000000000000000000000000000000000000000000000000081526004016105ad9190610e10565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610626575f6040517fec442f0500000000000000000000000000000000000000000000000000000000815260040161061d9190610e10565b60405180910390fd5b610631838383610884565b505050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036106a6575f6040517fec442f0500000000000000000000000000000000000000000000000000000000815260040161069d9190610e10565b60405180910390fd5b6106b15f8383610884565b5050565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603610725575f6040517fe602df0500000000000000000000000000000000000000000000000000000000815260040161071c9190610e10565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610795575f6040517f94280d6200000000000000000000000000000000000000000000000000000000815260040161078c9190610e10565b60405180910390fd5b8160015f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550801561087e578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040516108759190610c3e565b60405180910390a35b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036108d4578060025f8282546108c89190610e56565b925050819055506109a2565b5f805f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205490508181101561095d578381836040517fe450d38c00000000000000000000000000000000000000000000000000000000815260040161095493929190610ddb565b60405180910390fd5b8181035f808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036109e9578060025f8282540392505081905550610a33565b805f808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051610a909190610c3e565b60405180910390a3505050565b5f81519050919050565b5f82825260208201905092915050565b8281835e5f83830152505050565b5f601f19601f8301169050919050565b5f610adf82610a9d565b610ae98185610aa7565b9350610af9818560208601610ab7565b610b0281610ac5565b840191505092915050565b5f6020820190508181035f830152610b258184610ad5565b905092915050565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f610b5a82610b31565b9050919050565b610b6a81610b50565b8114610b74575f80fd5b50565b5f81359050610b8581610b61565b92915050565b5f819050919050565b610b9d81610b8b565b8114610ba7575f80fd5b50565b5f81359050610bb881610b94565b92915050565b5f8060408385031215610bd457610bd3610b2d565b5b5f610be185828601610b77565b9250506020610bf285828601610baa565b9150509250929050565b5f8115159050919050565b610c1081610bfc565b82525050565b5f602082019050610c295f830184610c07565b92915050565b610c3881610b8b565b82525050565b5f602082019050610c515f830184610c2f565b92915050565b5f805f60608486031215610c6e57610c6d610b2d565b5b5f610c7b86828701610b77565b9350506020610c8c86828701610b77565b9250506040610c9d86828701610baa565b9150509250925092565b5f60ff82169050919050565b610cbc81610ca7565b82525050565b5f602082019050610cd55f830184610cb3565b92915050565b5f60208284031215610cf057610cef610b2d565b5b5f610cfd84828501610b77565b91505092915050565b5f60208284031215610d1b57610d1a610b2d565b5b5f610d2884828501610baa565b91505092915050565b5f8060408385031215610d4757610d46610b2d565b5b5f610d5485828601610b77565b9250506020610d6585828601610b77565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f6002820490506001821680610db357607f821691505b602082108103610dc657610dc5610d6f565b5b50919050565b610dd581610b50565b82525050565b5f606082019050610dee5f830186610dcc565b610dfb6020830185610c2f565b610e086040830184610c2f565b949350505050565b5f602082019050610e235f830184610dcc565b92915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f610e6082610b8b565b9150610e6b83610b8b565b9250828201905080821115610e8357610e82610e29565b5b9291505056fea26469706673582212202e841070bcf6e134e197909d0be916dc2c79804eccb9bb2228d245e657b0483264736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xB DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x526577617264546F6B656E000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5257440000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 PUSH1 0x3 SWAP1 DUP2 PUSH2 0x8B SWAP2 SWAP1 PUSH2 0x2DD JUMP JUMPDEST POP DUP1 PUSH1 0x4 SWAP1 DUP2 PUSH2 0x9B SWAP2 SWAP1 PUSH2 0x2DD JUMP JUMPDEST POP POP POP PUSH2 0x3AC JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x11E JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x131 JUMPI PUSH2 0x130 PUSH2 0xDA JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP DUP2 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP4 MUL PUSH2 0x193 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x158 JUMP JUMPDEST PUSH2 0x19D DUP7 DUP4 PUSH2 0x158 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1E1 PUSH2 0x1DC PUSH2 0x1D7 DUP5 PUSH2 0x1B5 JUMP JUMPDEST PUSH2 0x1BE JUMP JUMPDEST PUSH2 0x1B5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1FA DUP4 PUSH2 0x1C7 JUMP JUMPDEST PUSH2 0x20E PUSH2 0x206 DUP3 PUSH2 0x1E8 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x164 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 SWAP1 JUMP JUMPDEST PUSH2 0x222 PUSH2 0x216 JUMP JUMPDEST PUSH2 0x22D DUP2 DUP5 DUP5 PUSH2 0x1F1 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x250 JUMPI PUSH2 0x245 PUSH0 DUP3 PUSH2 0x21A JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x233 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x295 JUMPI PUSH2 0x266 DUP2 PUSH2 0x137 JUMP JUMPDEST PUSH2 0x26F DUP5 PUSH2 0x149 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x27E JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x292 PUSH2 0x28A DUP6 PUSH2 0x149 JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x232 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2B5 PUSH0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x29A JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2CD DUP4 DUP4 PUSH2 0x2A6 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2E6 DUP3 PUSH2 0xA3 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2FF JUMPI PUSH2 0x2FE PUSH2 0xAD JUMP JUMPDEST JUMPDEST PUSH2 0x309 DUP3 SLOAD PUSH2 0x107 JUMP JUMPDEST PUSH2 0x314 DUP3 DUP3 DUP6 PUSH2 0x254 JUMP JUMPDEST PUSH0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x345 JUMPI PUSH0 DUP5 ISZERO PUSH2 0x333 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x33D DUP6 DUP3 PUSH2 0x2C2 JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x3A4 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x353 DUP7 PUSH2 0x137 JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x37A JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x355 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x397 JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x393 PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x2A6 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0xEBF DUP1 PUSH2 0x3B9 PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x9C JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0x64 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x15A JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x18A JUMPI DUP1 PUSH4 0xA0712D68 EQ PUSH2 0x1A8 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x1C4 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x1F4 JUMPI PUSH2 0x9C JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xA0 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xBE JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xEE JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x10C JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x13C JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xA8 PUSH2 0x224 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xB5 SWAP2 SWAP1 PUSH2 0xB0D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xD8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xD3 SWAP2 SWAP1 PUSH2 0xBBE JUMP JUMPDEST PUSH2 0x2B4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE5 SWAP2 SWAP1 PUSH2 0xC16 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xF6 PUSH2 0x2D6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x103 SWAP2 SWAP1 PUSH2 0xC3E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x126 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x121 SWAP2 SWAP1 PUSH2 0xC57 JUMP JUMPDEST PUSH2 0x2DF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x133 SWAP2 SWAP1 PUSH2 0xC16 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x144 PUSH2 0x30D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x151 SWAP2 SWAP1 PUSH2 0xCC2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x174 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x16F SWAP2 SWAP1 PUSH2 0xCDB JUMP JUMPDEST PUSH2 0x315 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x181 SWAP2 SWAP1 PUSH2 0xC3E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x192 PUSH2 0x35A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x19F SWAP2 SWAP1 PUSH2 0xB0D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1C2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1BD SWAP2 SWAP1 PUSH2 0xD06 JUMP JUMPDEST PUSH2 0x3EA JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1DE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1D9 SWAP2 SWAP1 PUSH2 0xBBE JUMP JUMPDEST PUSH2 0x3F7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1EB SWAP2 SWAP1 PUSH2 0xC16 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x20E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x209 SWAP2 SWAP1 PUSH2 0xD31 JUMP JUMPDEST PUSH2 0x419 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x21B SWAP2 SWAP1 PUSH2 0xC3E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x233 SWAP1 PUSH2 0xD9C JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x25F SWAP1 PUSH2 0xD9C JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2AA JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x281 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2AA JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x28D JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x2BE PUSH2 0x49B JUMP JUMPDEST SWAP1 POP PUSH2 0x2CB DUP2 DUP6 DUP6 PUSH2 0x4A2 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x2E9 PUSH2 0x49B JUMP JUMPDEST SWAP1 POP PUSH2 0x2F6 DUP6 DUP3 DUP6 PUSH2 0x4B4 JUMP JUMPDEST PUSH2 0x301 DUP6 DUP6 DUP6 PUSH2 0x546 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x369 SWAP1 PUSH2 0xD9C JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x395 SWAP1 PUSH2 0xD9C JUMP JUMPDEST DUP1 ISZERO PUSH2 0x3E0 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x3B7 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x3E0 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x3C3 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x3F4 CALLER DUP3 PUSH2 0x636 JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x401 PUSH2 0x49B JUMP JUMPDEST SWAP1 POP PUSH2 0x40E DUP2 DUP6 DUP6 PUSH2 0x546 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x4AF DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x6B5 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x4BF DUP5 DUP5 PUSH2 0x419 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0x540 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x531 JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x528 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xDDB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x53F DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0x6B5 JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x5B6 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5AD SWAP2 SWAP1 PUSH2 0xE10 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x626 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x61D SWAP2 SWAP1 PUSH2 0xE10 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x631 DUP4 DUP4 DUP4 PUSH2 0x884 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x6A6 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x69D SWAP2 SWAP1 PUSH2 0xE10 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x6B1 PUSH0 DUP4 DUP4 PUSH2 0x884 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x725 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x71C SWAP2 SWAP1 PUSH2 0xE10 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x795 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x78C SWAP2 SWAP1 PUSH2 0xE10 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0x87E JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x875 SWAP2 SWAP1 PUSH2 0xC3E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x8D4 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x8C8 SWAP2 SWAP1 PUSH2 0xE56 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x9A2 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x95D JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x954 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xDDB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x9E9 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0xA33 JUMP JUMPDEST DUP1 PUSH0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0xA90 SWAP2 SWAP1 PUSH2 0xC3E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xADF DUP3 PUSH2 0xA9D JUMP JUMPDEST PUSH2 0xAE9 DUP2 DUP6 PUSH2 0xAA7 JUMP JUMPDEST SWAP4 POP PUSH2 0xAF9 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xAB7 JUMP JUMPDEST PUSH2 0xB02 DUP2 PUSH2 0xAC5 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xB25 DUP2 DUP5 PUSH2 0xAD5 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xB5A DUP3 PUSH2 0xB31 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB6A DUP2 PUSH2 0xB50 JUMP JUMPDEST DUP2 EQ PUSH2 0xB74 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xB85 DUP2 PUSH2 0xB61 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB9D DUP2 PUSH2 0xB8B JUMP JUMPDEST DUP2 EQ PUSH2 0xBA7 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xBB8 DUP2 PUSH2 0xB94 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xBD4 JUMPI PUSH2 0xBD3 PUSH2 0xB2D JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xBE1 DUP6 DUP3 DUP7 ADD PUSH2 0xB77 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xBF2 DUP6 DUP3 DUP7 ADD PUSH2 0xBAA JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xC10 DUP2 PUSH2 0xBFC JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xC29 PUSH0 DUP4 ADD DUP5 PUSH2 0xC07 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xC38 DUP2 PUSH2 0xB8B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xC51 PUSH0 DUP4 ADD DUP5 PUSH2 0xC2F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xC6E JUMPI PUSH2 0xC6D PUSH2 0xB2D JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xC7B DUP7 DUP3 DUP8 ADD PUSH2 0xB77 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0xC8C DUP7 DUP3 DUP8 ADD PUSH2 0xB77 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0xC9D DUP7 DUP3 DUP8 ADD PUSH2 0xBAA JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xCBC DUP2 PUSH2 0xCA7 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xCD5 PUSH0 DUP4 ADD DUP5 PUSH2 0xCB3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xCF0 JUMPI PUSH2 0xCEF PUSH2 0xB2D JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xCFD DUP5 DUP3 DUP6 ADD PUSH2 0xB77 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD1B JUMPI PUSH2 0xD1A PUSH2 0xB2D JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xD28 DUP5 DUP3 DUP6 ADD PUSH2 0xBAA JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xD47 JUMPI PUSH2 0xD46 PUSH2 0xB2D JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xD54 DUP6 DUP3 DUP7 ADD PUSH2 0xB77 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xD65 DUP6 DUP3 DUP7 ADD PUSH2 0xB77 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0xDB3 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0xDC6 JUMPI PUSH2 0xDC5 PUSH2 0xD6F JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xDD5 DUP2 PUSH2 0xB50 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0xDEE PUSH0 DUP4 ADD DUP7 PUSH2 0xDCC JUMP JUMPDEST PUSH2 0xDFB PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0xC2F JUMP JUMPDEST PUSH2 0xE08 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xC2F JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xE23 PUSH0 DUP4 ADD DUP5 PUSH2 0xDCC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0xE60 DUP3 PUSH2 0xB8B JUMP JUMPDEST SWAP2 POP PUSH2 0xE6B DUP4 PUSH2 0xB8B JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0xE83 JUMPI PUSH2 0xE82 PUSH2 0xE29 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2E DUP5 LT PUSH17 0xBCF6E134E197909D0BE916DC2C79804ECC 0xB9 0xBB 0x22 0x28 0xD2 GASLIMIT 0xE6 JUMPI 0xB0 BASEFEE ORIGIN PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "118:165:8:-:0;;;154:42;;;;;;;;;;1601:113:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1675:5;1667;:13;;;;;;:::i;:::-;;1700:7;1690;:17;;;;;;:::i;:::-;;1601:113;;118:165:8;;7:99:11;59:6;93:5;87:12;77:22;;7:99;;;:::o;112:180::-;160:77;157:1;150:88;257:4;254:1;247:15;281:4;278:1;271:15;298:180;346:77;343:1;336:88;443:4;440:1;433:15;467:4;464:1;457:15;484:320;528:6;565:1;559:4;555:12;545:22;;612:1;606:4;602:12;633:18;623:81;;689:4;681:6;677:17;667:27;;623:81;751:2;743:6;740:14;720:18;717:38;714:84;;770:18;;:::i;:::-;714:84;535:269;484:320;;;:::o;810:141::-;859:4;882:3;874:11;;905:3;902:1;895:14;939:4;936:1;926:18;918:26;;810:141;;;:::o;957:93::-;994:6;1041:2;1036;1029:5;1025:14;1021:23;1011:33;;957:93;;;:::o;1056:107::-;1100:8;1150:5;1144:4;1140:16;1119:37;;1056:107;;;;:::o;1169:393::-;1238:6;1288:1;1276:10;1272:18;1311:97;1341:66;1330:9;1311:97;:::i;:::-;1429:39;1459:8;1448:9;1429:39;:::i;:::-;1417:51;;1501:4;1497:9;1490:5;1486:21;1477:30;;1550:4;1540:8;1536:19;1529:5;1526:30;1516:40;;1245:317;;1169:393;;;;;:::o;1568:77::-;1605:7;1634:5;1623:16;;1568:77;;;:::o;1651:60::-;1679:3;1700:5;1693:12;;1651:60;;;:::o;1717:142::-;1767:9;1800:53;1818:34;1827:24;1845:5;1827:24;:::i;:::-;1818:34;:::i;:::-;1800:53;:::i;:::-;1787:66;;1717:142;;;:::o;1865:75::-;1908:3;1929:5;1922:12;;1865:75;;;:::o;1946:269::-;2056:39;2087:7;2056:39;:::i;:::-;2117:91;2166:41;2190:16;2166:41;:::i;:::-;2158:6;2151:4;2145:11;2117:91;:::i;:::-;2111:4;2104:105;2022:193;1946:269;;;:::o;2221:73::-;2266:3;2221:73;:::o;2300:189::-;2377:32;;:::i;:::-;2418:65;2476:6;2468;2462:4;2418:65;:::i;:::-;2353:136;2300:189;;:::o;2495:186::-;2555:120;2572:3;2565:5;2562:14;2555:120;;;2626:39;2663:1;2656:5;2626:39;:::i;:::-;2599:1;2592:5;2588:13;2579:22;;2555:120;;;2495:186;;:::o;2687:543::-;2788:2;2783:3;2780:11;2777:446;;;2822:38;2854:5;2822:38;:::i;:::-;2906:29;2924:10;2906:29;:::i;:::-;2896:8;2892:44;3089:2;3077:10;3074:18;3071:49;;;3110:8;3095:23;;3071:49;3133:80;3189:22;3207:3;3189:22;:::i;:::-;3179:8;3175:37;3162:11;3133:80;:::i;:::-;2792:431;;2777:446;2687:543;;;:::o;3236:117::-;3290:8;3340:5;3334:4;3330:16;3309:37;;3236:117;;;;:::o;3359:169::-;3403:6;3436:51;3484:1;3480:6;3472:5;3469:1;3465:13;3436:51;:::i;:::-;3432:56;3517:4;3511;3507:15;3497:25;;3410:118;3359:169;;;;:::o;3533:295::-;3609:4;3755:29;3780:3;3774:4;3755:29;:::i;:::-;3747:37;;3817:3;3814:1;3810:11;3804:4;3801:21;3793:29;;3533:295;;;;:::o;3833:1395::-;3950:37;3983:3;3950:37;:::i;:::-;4052:18;4044:6;4041:30;4038:56;;;4074:18;;:::i;:::-;4038:56;4118:38;4150:4;4144:11;4118:38;:::i;:::-;4203:67;4263:6;4255;4249:4;4203:67;:::i;:::-;4297:1;4321:4;4308:17;;4353:2;4345:6;4342:14;4370:1;4365:618;;;;5027:1;5044:6;5041:77;;;5093:9;5088:3;5084:19;5078:26;5069:35;;5041:77;5144:67;5204:6;5197:5;5144:67;:::i;:::-;5138:4;5131:81;5000:222;4335:887;;4365:618;4417:4;4413:9;4405:6;4401:22;4451:37;4483:4;4451:37;:::i;:::-;4510:1;4524:208;4538:7;4535:1;4532:14;4524:208;;;4617:9;4612:3;4608:19;4602:26;4594:6;4587:42;4668:1;4660:6;4656:14;4646:24;;4715:2;4704:9;4700:18;4687:31;;4561:4;4558:1;4554:12;4549:17;;4524:208;;;4760:6;4751:7;4748:19;4745:179;;;4818:9;4813:3;4809:19;4803:26;4861:48;4903:4;4895:6;4891:17;4880:9;4861:48;:::i;:::-;4853:6;4846:64;4768:156;4745:179;4970:1;4966;4958:6;4954:14;4950:22;4944:4;4937:36;4372:611;;;4335:887;;3925:1303;;;3833:1395;;:::o;118:165:8:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_approve_1037": {
									"entryPoint": 1186,
									"id": 1037,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_approve_1097": {
									"entryPoint": 1717,
									"id": 1097,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_mint_986": {
									"entryPoint": 1590,
									"id": 986,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_1262": {
									"entryPoint": 1179,
									"id": 1262,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_spendAllowance_1145": {
									"entryPoint": 1204,
									"id": 1145,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transfer_876": {
									"entryPoint": 1350,
									"id": 876,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_update_953": {
									"entryPoint": 2180,
									"id": 953,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@allowance_773": {
									"entryPoint": 1049,
									"id": 773,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_797": {
									"entryPoint": 692,
									"id": 797,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_732": {
									"entryPoint": 789,
									"id": 732,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@decimals_710": {
									"entryPoint": 781,
									"id": 710,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@mint_1305": {
									"entryPoint": 1002,
									"id": 1305,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@name_692": {
									"entryPoint": 548,
									"id": 692,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@symbol_701": {
									"entryPoint": 858,
									"id": 701,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@totalSupply_719": {
									"entryPoint": 726,
									"id": 719,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_829": {
									"entryPoint": 735,
									"id": 829,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transfer_756": {
									"entryPoint": 1015,
									"id": 756,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 2935,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 2986,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 3291,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 3377,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 3159,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 3006,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 3334,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 3532,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 3079,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 2773,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 3119,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint8_to_t_uint8_fromStack": {
									"entryPoint": 3251,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 3600,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 3547,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 3094,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 2829,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 3134,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": 3266,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 2717,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 2727,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 3670,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 2896,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 3068,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 2865,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 2955,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint8": {
									"entryPoint": 3239,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 2743,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 3484,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 3625,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 3439,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 2861,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 2757,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"validator_revert_t_address": {
									"entryPoint": 2913,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 2964,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:7588:11",
										"nodeType": "YulBlock",
										"src": "0:7588:11",
										"statements": [
											{
												"body": {
													"nativeSrc": "66:40:11",
													"nodeType": "YulBlock",
													"src": "66:40:11",
													"statements": [
														{
															"nativeSrc": "77:22:11",
															"nodeType": "YulAssignment",
															"src": "77:22:11",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "93:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "93:5:11"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "87:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "87:5:11"
																},
																"nativeSrc": "87:12:11",
																"nodeType": "YulFunctionCall",
																"src": "87:12:11"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "77:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "77:6:11"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "7:99:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "49:5:11",
														"nodeType": "YulTypedName",
														"src": "49:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "59:6:11",
														"nodeType": "YulTypedName",
														"src": "59:6:11",
														"type": ""
													}
												],
												"src": "7:99:11"
											},
											{
												"body": {
													"nativeSrc": "208:73:11",
													"nodeType": "YulBlock",
													"src": "208:73:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "225:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "225:3:11"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "230:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "230:6:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "218:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "218:6:11"
																},
																"nativeSrc": "218:19:11",
																"nodeType": "YulFunctionCall",
																"src": "218:19:11"
															},
															"nativeSrc": "218:19:11",
															"nodeType": "YulExpressionStatement",
															"src": "218:19:11"
														},
														{
															"nativeSrc": "246:29:11",
															"nodeType": "YulAssignment",
															"src": "246:29:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "265:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "265:3:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "270:4:11",
																		"nodeType": "YulLiteral",
																		"src": "270:4:11",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "261:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "261:3:11"
																},
																"nativeSrc": "261:14:11",
																"nodeType": "YulFunctionCall",
																"src": "261:14:11"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "246:11:11",
																	"nodeType": "YulIdentifier",
																	"src": "246:11:11"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "112:169:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "180:3:11",
														"nodeType": "YulTypedName",
														"src": "180:3:11",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "185:6:11",
														"nodeType": "YulTypedName",
														"src": "185:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "196:11:11",
														"nodeType": "YulTypedName",
														"src": "196:11:11",
														"type": ""
													}
												],
												"src": "112:169:11"
											},
											{
												"body": {
													"nativeSrc": "349:77:11",
													"nodeType": "YulBlock",
													"src": "349:77:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "366:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "366:3:11"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "371:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "371:3:11"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "376:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "376:6:11"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "360:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "360:5:11"
																},
																"nativeSrc": "360:23:11",
																"nodeType": "YulFunctionCall",
																"src": "360:23:11"
															},
															"nativeSrc": "360:23:11",
															"nodeType": "YulExpressionStatement",
															"src": "360:23:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "403:3:11",
																				"nodeType": "YulIdentifier",
																				"src": "403:3:11"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "408:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "408:6:11"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "399:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "399:3:11"
																		},
																		"nativeSrc": "399:16:11",
																		"nodeType": "YulFunctionCall",
																		"src": "399:16:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "417:1:11",
																		"nodeType": "YulLiteral",
																		"src": "417:1:11",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "392:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "392:6:11"
																},
																"nativeSrc": "392:27:11",
																"nodeType": "YulFunctionCall",
																"src": "392:27:11"
															},
															"nativeSrc": "392:27:11",
															"nodeType": "YulExpressionStatement",
															"src": "392:27:11"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "287:139:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "331:3:11",
														"nodeType": "YulTypedName",
														"src": "331:3:11",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "336:3:11",
														"nodeType": "YulTypedName",
														"src": "336:3:11",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "341:6:11",
														"nodeType": "YulTypedName",
														"src": "341:6:11",
														"type": ""
													}
												],
												"src": "287:139:11"
											},
											{
												"body": {
													"nativeSrc": "480:54:11",
													"nodeType": "YulBlock",
													"src": "480:54:11",
													"statements": [
														{
															"nativeSrc": "490:38:11",
															"nodeType": "YulAssignment",
															"src": "490:38:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "508:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "508:5:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "515:2:11",
																				"nodeType": "YulLiteral",
																				"src": "515:2:11",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "504:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "504:3:11"
																		},
																		"nativeSrc": "504:14:11",
																		"nodeType": "YulFunctionCall",
																		"src": "504:14:11"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "524:2:11",
																				"nodeType": "YulLiteral",
																				"src": "524:2:11",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "520:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "520:3:11"
																		},
																		"nativeSrc": "520:7:11",
																		"nodeType": "YulFunctionCall",
																		"src": "520:7:11"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "500:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "500:3:11"
																},
																"nativeSrc": "500:28:11",
																"nodeType": "YulFunctionCall",
																"src": "500:28:11"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "490:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "490:6:11"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "432:102:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "463:5:11",
														"nodeType": "YulTypedName",
														"src": "463:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "473:6:11",
														"nodeType": "YulTypedName",
														"src": "473:6:11",
														"type": ""
													}
												],
												"src": "432:102:11"
											},
											{
												"body": {
													"nativeSrc": "632:285:11",
													"nodeType": "YulBlock",
													"src": "632:285:11",
													"statements": [
														{
															"nativeSrc": "642:53:11",
															"nodeType": "YulVariableDeclaration",
															"src": "642:53:11",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "689:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "689:5:11"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "656:32:11",
																	"nodeType": "YulIdentifier",
																	"src": "656:32:11"
																},
																"nativeSrc": "656:39:11",
																"nodeType": "YulFunctionCall",
																"src": "656:39:11"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "646:6:11",
																	"nodeType": "YulTypedName",
																	"src": "646:6:11",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "704:78:11",
															"nodeType": "YulAssignment",
															"src": "704:78:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "770:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "770:3:11"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "775:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "775:6:11"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "711:58:11",
																	"nodeType": "YulIdentifier",
																	"src": "711:58:11"
																},
																"nativeSrc": "711:71:11",
																"nodeType": "YulFunctionCall",
																"src": "711:71:11"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "704:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "704:3:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "830:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "830:5:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "837:4:11",
																				"nodeType": "YulLiteral",
																				"src": "837:4:11",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "826:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "826:3:11"
																		},
																		"nativeSrc": "826:16:11",
																		"nodeType": "YulFunctionCall",
																		"src": "826:16:11"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "844:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "844:3:11"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "849:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "849:6:11"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "791:34:11",
																	"nodeType": "YulIdentifier",
																	"src": "791:34:11"
																},
																"nativeSrc": "791:65:11",
																"nodeType": "YulFunctionCall",
																"src": "791:65:11"
															},
															"nativeSrc": "791:65:11",
															"nodeType": "YulExpressionStatement",
															"src": "791:65:11"
														},
														{
															"nativeSrc": "865:46:11",
															"nodeType": "YulAssignment",
															"src": "865:46:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "876:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "876:3:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "903:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "903:6:11"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "881:21:11",
																			"nodeType": "YulIdentifier",
																			"src": "881:21:11"
																		},
																		"nativeSrc": "881:29:11",
																		"nodeType": "YulFunctionCall",
																		"src": "881:29:11"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "872:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "872:3:11"
																},
																"nativeSrc": "872:39:11",
																"nodeType": "YulFunctionCall",
																"src": "872:39:11"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "865:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "865:3:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "540:377:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "613:5:11",
														"nodeType": "YulTypedName",
														"src": "613:5:11",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "620:3:11",
														"nodeType": "YulTypedName",
														"src": "620:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "628:3:11",
														"nodeType": "YulTypedName",
														"src": "628:3:11",
														"type": ""
													}
												],
												"src": "540:377:11"
											},
											{
												"body": {
													"nativeSrc": "1041:195:11",
													"nodeType": "YulBlock",
													"src": "1041:195:11",
													"statements": [
														{
															"nativeSrc": "1051:26:11",
															"nodeType": "YulAssignment",
															"src": "1051:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1063:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "1063:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1074:2:11",
																		"nodeType": "YulLiteral",
																		"src": "1074:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1059:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "1059:3:11"
																},
																"nativeSrc": "1059:18:11",
																"nodeType": "YulFunctionCall",
																"src": "1059:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1051:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "1051:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1098:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "1098:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1109:1:11",
																				"nodeType": "YulLiteral",
																				"src": "1109:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1094:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "1094:3:11"
																		},
																		"nativeSrc": "1094:17:11",
																		"nodeType": "YulFunctionCall",
																		"src": "1094:17:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "1117:4:11",
																				"nodeType": "YulIdentifier",
																				"src": "1117:4:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1123:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "1123:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1113:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "1113:3:11"
																		},
																		"nativeSrc": "1113:20:11",
																		"nodeType": "YulFunctionCall",
																		"src": "1113:20:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1087:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "1087:6:11"
																},
																"nativeSrc": "1087:47:11",
																"nodeType": "YulFunctionCall",
																"src": "1087:47:11"
															},
															"nativeSrc": "1087:47:11",
															"nodeType": "YulExpressionStatement",
															"src": "1087:47:11"
														},
														{
															"nativeSrc": "1143:86:11",
															"nodeType": "YulAssignment",
															"src": "1143:86:11",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1215:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "1215:6:11"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "1224:4:11",
																		"nodeType": "YulIdentifier",
																		"src": "1224:4:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "1151:63:11",
																	"nodeType": "YulIdentifier",
																	"src": "1151:63:11"
																},
																"nativeSrc": "1151:78:11",
																"nodeType": "YulFunctionCall",
																"src": "1151:78:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1143:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "1143:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "923:313:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1013:9:11",
														"nodeType": "YulTypedName",
														"src": "1013:9:11",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1025:6:11",
														"nodeType": "YulTypedName",
														"src": "1025:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1036:4:11",
														"nodeType": "YulTypedName",
														"src": "1036:4:11",
														"type": ""
													}
												],
												"src": "923:313:11"
											},
											{
												"body": {
													"nativeSrc": "1282:35:11",
													"nodeType": "YulBlock",
													"src": "1282:35:11",
													"statements": [
														{
															"nativeSrc": "1292:19:11",
															"nodeType": "YulAssignment",
															"src": "1292:19:11",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1308:2:11",
																		"nodeType": "YulLiteral",
																		"src": "1308:2:11",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1302:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "1302:5:11"
																},
																"nativeSrc": "1302:9:11",
																"nodeType": "YulFunctionCall",
																"src": "1302:9:11"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "1292:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "1292:6:11"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "1242:75:11",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "1275:6:11",
														"nodeType": "YulTypedName",
														"src": "1275:6:11",
														"type": ""
													}
												],
												"src": "1242:75:11"
											},
											{
												"body": {
													"nativeSrc": "1412:28:11",
													"nodeType": "YulBlock",
													"src": "1412:28:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1429:1:11",
																		"nodeType": "YulLiteral",
																		"src": "1429:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1432:1:11",
																		"nodeType": "YulLiteral",
																		"src": "1432:1:11",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1422:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "1422:6:11"
																},
																"nativeSrc": "1422:12:11",
																"nodeType": "YulFunctionCall",
																"src": "1422:12:11"
															},
															"nativeSrc": "1422:12:11",
															"nodeType": "YulExpressionStatement",
															"src": "1422:12:11"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "1323:117:11",
												"nodeType": "YulFunctionDefinition",
												"src": "1323:117:11"
											},
											{
												"body": {
													"nativeSrc": "1535:28:11",
													"nodeType": "YulBlock",
													"src": "1535:28:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1552:1:11",
																		"nodeType": "YulLiteral",
																		"src": "1552:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1555:1:11",
																		"nodeType": "YulLiteral",
																		"src": "1555:1:11",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1545:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "1545:6:11"
																},
																"nativeSrc": "1545:12:11",
																"nodeType": "YulFunctionCall",
																"src": "1545:12:11"
															},
															"nativeSrc": "1545:12:11",
															"nodeType": "YulExpressionStatement",
															"src": "1545:12:11"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "1446:117:11",
												"nodeType": "YulFunctionDefinition",
												"src": "1446:117:11"
											},
											{
												"body": {
													"nativeSrc": "1614:81:11",
													"nodeType": "YulBlock",
													"src": "1614:81:11",
													"statements": [
														{
															"nativeSrc": "1624:65:11",
															"nodeType": "YulAssignment",
															"src": "1624:65:11",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1639:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "1639:5:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1646:42:11",
																		"nodeType": "YulLiteral",
																		"src": "1646:42:11",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1635:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "1635:3:11"
																},
																"nativeSrc": "1635:54:11",
																"nodeType": "YulFunctionCall",
																"src": "1635:54:11"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1624:7:11",
																	"nodeType": "YulIdentifier",
																	"src": "1624:7:11"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "1569:126:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1596:5:11",
														"nodeType": "YulTypedName",
														"src": "1596:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1606:7:11",
														"nodeType": "YulTypedName",
														"src": "1606:7:11",
														"type": ""
													}
												],
												"src": "1569:126:11"
											},
											{
												"body": {
													"nativeSrc": "1746:51:11",
													"nodeType": "YulBlock",
													"src": "1746:51:11",
													"statements": [
														{
															"nativeSrc": "1756:35:11",
															"nodeType": "YulAssignment",
															"src": "1756:35:11",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1785:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "1785:5:11"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "1767:17:11",
																	"nodeType": "YulIdentifier",
																	"src": "1767:17:11"
																},
																"nativeSrc": "1767:24:11",
																"nodeType": "YulFunctionCall",
																"src": "1767:24:11"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1756:7:11",
																	"nodeType": "YulIdentifier",
																	"src": "1756:7:11"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "1701:96:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1728:5:11",
														"nodeType": "YulTypedName",
														"src": "1728:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1738:7:11",
														"nodeType": "YulTypedName",
														"src": "1738:7:11",
														"type": ""
													}
												],
												"src": "1701:96:11"
											},
											{
												"body": {
													"nativeSrc": "1846:79:11",
													"nodeType": "YulBlock",
													"src": "1846:79:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "1903:16:11",
																"nodeType": "YulBlock",
																"src": "1903:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1912:1:11",
																					"nodeType": "YulLiteral",
																					"src": "1912:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1915:1:11",
																					"nodeType": "YulLiteral",
																					"src": "1915:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1905:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "1905:6:11"
																			},
																			"nativeSrc": "1905:12:11",
																			"nodeType": "YulFunctionCall",
																			"src": "1905:12:11"
																		},
																		"nativeSrc": "1905:12:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "1905:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1869:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "1869:5:11"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1894:5:11",
																						"nodeType": "YulIdentifier",
																						"src": "1894:5:11"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "1876:17:11",
																					"nodeType": "YulIdentifier",
																					"src": "1876:17:11"
																				},
																				"nativeSrc": "1876:24:11",
																				"nodeType": "YulFunctionCall",
																				"src": "1876:24:11"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1866:2:11",
																			"nodeType": "YulIdentifier",
																			"src": "1866:2:11"
																		},
																		"nativeSrc": "1866:35:11",
																		"nodeType": "YulFunctionCall",
																		"src": "1866:35:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1859:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "1859:6:11"
																},
																"nativeSrc": "1859:43:11",
																"nodeType": "YulFunctionCall",
																"src": "1859:43:11"
															},
															"nativeSrc": "1856:63:11",
															"nodeType": "YulIf",
															"src": "1856:63:11"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "1803:122:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1839:5:11",
														"nodeType": "YulTypedName",
														"src": "1839:5:11",
														"type": ""
													}
												],
												"src": "1803:122:11"
											},
											{
												"body": {
													"nativeSrc": "1983:87:11",
													"nodeType": "YulBlock",
													"src": "1983:87:11",
													"statements": [
														{
															"nativeSrc": "1993:29:11",
															"nodeType": "YulAssignment",
															"src": "1993:29:11",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2015:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "2015:6:11"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2002:12:11",
																	"nodeType": "YulIdentifier",
																	"src": "2002:12:11"
																},
																"nativeSrc": "2002:20:11",
																"nodeType": "YulFunctionCall",
																"src": "2002:20:11"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1993:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "1993:5:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2058:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "2058:5:11"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "2031:26:11",
																	"nodeType": "YulIdentifier",
																	"src": "2031:26:11"
																},
																"nativeSrc": "2031:33:11",
																"nodeType": "YulFunctionCall",
																"src": "2031:33:11"
															},
															"nativeSrc": "2031:33:11",
															"nodeType": "YulExpressionStatement",
															"src": "2031:33:11"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "1931:139:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1961:6:11",
														"nodeType": "YulTypedName",
														"src": "1961:6:11",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1969:3:11",
														"nodeType": "YulTypedName",
														"src": "1969:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1977:5:11",
														"nodeType": "YulTypedName",
														"src": "1977:5:11",
														"type": ""
													}
												],
												"src": "1931:139:11"
											},
											{
												"body": {
													"nativeSrc": "2121:32:11",
													"nodeType": "YulBlock",
													"src": "2121:32:11",
													"statements": [
														{
															"nativeSrc": "2131:16:11",
															"nodeType": "YulAssignment",
															"src": "2131:16:11",
															"value": {
																"name": "value",
																"nativeSrc": "2142:5:11",
																"nodeType": "YulIdentifier",
																"src": "2142:5:11"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2131:7:11",
																	"nodeType": "YulIdentifier",
																	"src": "2131:7:11"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "2076:77:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2103:5:11",
														"nodeType": "YulTypedName",
														"src": "2103:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2113:7:11",
														"nodeType": "YulTypedName",
														"src": "2113:7:11",
														"type": ""
													}
												],
												"src": "2076:77:11"
											},
											{
												"body": {
													"nativeSrc": "2202:79:11",
													"nodeType": "YulBlock",
													"src": "2202:79:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "2259:16:11",
																"nodeType": "YulBlock",
																"src": "2259:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2268:1:11",
																					"nodeType": "YulLiteral",
																					"src": "2268:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2271:1:11",
																					"nodeType": "YulLiteral",
																					"src": "2271:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2261:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "2261:6:11"
																			},
																			"nativeSrc": "2261:12:11",
																			"nodeType": "YulFunctionCall",
																			"src": "2261:12:11"
																		},
																		"nativeSrc": "2261:12:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "2261:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2225:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "2225:5:11"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2250:5:11",
																						"nodeType": "YulIdentifier",
																						"src": "2250:5:11"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "2232:17:11",
																					"nodeType": "YulIdentifier",
																					"src": "2232:17:11"
																				},
																				"nativeSrc": "2232:24:11",
																				"nodeType": "YulFunctionCall",
																				"src": "2232:24:11"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "2222:2:11",
																			"nodeType": "YulIdentifier",
																			"src": "2222:2:11"
																		},
																		"nativeSrc": "2222:35:11",
																		"nodeType": "YulFunctionCall",
																		"src": "2222:35:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2215:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "2215:6:11"
																},
																"nativeSrc": "2215:43:11",
																"nodeType": "YulFunctionCall",
																"src": "2215:43:11"
															},
															"nativeSrc": "2212:63:11",
															"nodeType": "YulIf",
															"src": "2212:63:11"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "2159:122:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2195:5:11",
														"nodeType": "YulTypedName",
														"src": "2195:5:11",
														"type": ""
													}
												],
												"src": "2159:122:11"
											},
											{
												"body": {
													"nativeSrc": "2339:87:11",
													"nodeType": "YulBlock",
													"src": "2339:87:11",
													"statements": [
														{
															"nativeSrc": "2349:29:11",
															"nodeType": "YulAssignment",
															"src": "2349:29:11",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2371:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "2371:6:11"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2358:12:11",
																	"nodeType": "YulIdentifier",
																	"src": "2358:12:11"
																},
																"nativeSrc": "2358:20:11",
																"nodeType": "YulFunctionCall",
																"src": "2358:20:11"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2349:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "2349:5:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2414:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "2414:5:11"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "2387:26:11",
																	"nodeType": "YulIdentifier",
																	"src": "2387:26:11"
																},
																"nativeSrc": "2387:33:11",
																"nodeType": "YulFunctionCall",
																"src": "2387:33:11"
															},
															"nativeSrc": "2387:33:11",
															"nodeType": "YulExpressionStatement",
															"src": "2387:33:11"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "2287:139:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2317:6:11",
														"nodeType": "YulTypedName",
														"src": "2317:6:11",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2325:3:11",
														"nodeType": "YulTypedName",
														"src": "2325:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "2333:5:11",
														"nodeType": "YulTypedName",
														"src": "2333:5:11",
														"type": ""
													}
												],
												"src": "2287:139:11"
											},
											{
												"body": {
													"nativeSrc": "2515:391:11",
													"nodeType": "YulBlock",
													"src": "2515:391:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "2561:83:11",
																"nodeType": "YulBlock",
																"src": "2561:83:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "2563:77:11",
																				"nodeType": "YulIdentifier",
																				"src": "2563:77:11"
																			},
																			"nativeSrc": "2563:79:11",
																			"nodeType": "YulFunctionCall",
																			"src": "2563:79:11"
																		},
																		"nativeSrc": "2563:79:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "2563:79:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2536:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "2536:7:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2545:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "2545:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2532:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "2532:3:11"
																		},
																		"nativeSrc": "2532:23:11",
																		"nodeType": "YulFunctionCall",
																		"src": "2532:23:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2557:2:11",
																		"nodeType": "YulLiteral",
																		"src": "2557:2:11",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2528:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "2528:3:11"
																},
																"nativeSrc": "2528:32:11",
																"nodeType": "YulFunctionCall",
																"src": "2528:32:11"
															},
															"nativeSrc": "2525:119:11",
															"nodeType": "YulIf",
															"src": "2525:119:11"
														},
														{
															"nativeSrc": "2654:117:11",
															"nodeType": "YulBlock",
															"src": "2654:117:11",
															"statements": [
																{
																	"nativeSrc": "2669:15:11",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2669:15:11",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2683:1:11",
																		"nodeType": "YulLiteral",
																		"src": "2683:1:11",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2673:6:11",
																			"nodeType": "YulTypedName",
																			"src": "2673:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2698:63:11",
																	"nodeType": "YulAssignment",
																	"src": "2698:63:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2733:9:11",
																						"nodeType": "YulIdentifier",
																						"src": "2733:9:11"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2744:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "2744:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2729:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "2729:3:11"
																				},
																				"nativeSrc": "2729:22:11",
																				"nodeType": "YulFunctionCall",
																				"src": "2729:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2753:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "2753:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "2708:20:11",
																			"nodeType": "YulIdentifier",
																			"src": "2708:20:11"
																		},
																		"nativeSrc": "2708:53:11",
																		"nodeType": "YulFunctionCall",
																		"src": "2708:53:11"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "2698:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "2698:6:11"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "2781:118:11",
															"nodeType": "YulBlock",
															"src": "2781:118:11",
															"statements": [
																{
																	"nativeSrc": "2796:16:11",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2796:16:11",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2810:2:11",
																		"nodeType": "YulLiteral",
																		"src": "2810:2:11",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2800:6:11",
																			"nodeType": "YulTypedName",
																			"src": "2800:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2826:63:11",
																	"nodeType": "YulAssignment",
																	"src": "2826:63:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2861:9:11",
																						"nodeType": "YulIdentifier",
																						"src": "2861:9:11"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2872:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "2872:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2857:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "2857:3:11"
																				},
																				"nativeSrc": "2857:22:11",
																				"nodeType": "YulFunctionCall",
																				"src": "2857:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2881:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "2881:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "2836:20:11",
																			"nodeType": "YulIdentifier",
																			"src": "2836:20:11"
																		},
																		"nativeSrc": "2836:53:11",
																		"nodeType": "YulFunctionCall",
																		"src": "2836:53:11"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "2826:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "2826:6:11"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "2432:474:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2477:9:11",
														"nodeType": "YulTypedName",
														"src": "2477:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2488:7:11",
														"nodeType": "YulTypedName",
														"src": "2488:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2500:6:11",
														"nodeType": "YulTypedName",
														"src": "2500:6:11",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2508:6:11",
														"nodeType": "YulTypedName",
														"src": "2508:6:11",
														"type": ""
													}
												],
												"src": "2432:474:11"
											},
											{
												"body": {
													"nativeSrc": "2954:48:11",
													"nodeType": "YulBlock",
													"src": "2954:48:11",
													"statements": [
														{
															"nativeSrc": "2964:32:11",
															"nodeType": "YulAssignment",
															"src": "2964:32:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2989:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "2989:5:11"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "2982:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "2982:6:11"
																		},
																		"nativeSrc": "2982:13:11",
																		"nodeType": "YulFunctionCall",
																		"src": "2982:13:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2975:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "2975:6:11"
																},
																"nativeSrc": "2975:21:11",
																"nodeType": "YulFunctionCall",
																"src": "2975:21:11"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2964:7:11",
																	"nodeType": "YulIdentifier",
																	"src": "2964:7:11"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "2912:90:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2936:5:11",
														"nodeType": "YulTypedName",
														"src": "2936:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2946:7:11",
														"nodeType": "YulTypedName",
														"src": "2946:7:11",
														"type": ""
													}
												],
												"src": "2912:90:11"
											},
											{
												"body": {
													"nativeSrc": "3067:50:11",
													"nodeType": "YulBlock",
													"src": "3067:50:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3084:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "3084:3:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3104:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "3104:5:11"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nativeSrc": "3089:14:11",
																			"nodeType": "YulIdentifier",
																			"src": "3089:14:11"
																		},
																		"nativeSrc": "3089:21:11",
																		"nodeType": "YulFunctionCall",
																		"src": "3089:21:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3077:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "3077:6:11"
																},
																"nativeSrc": "3077:34:11",
																"nodeType": "YulFunctionCall",
																"src": "3077:34:11"
															},
															"nativeSrc": "3077:34:11",
															"nodeType": "YulExpressionStatement",
															"src": "3077:34:11"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nativeSrc": "3008:109:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3055:5:11",
														"nodeType": "YulTypedName",
														"src": "3055:5:11",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3062:3:11",
														"nodeType": "YulTypedName",
														"src": "3062:3:11",
														"type": ""
													}
												],
												"src": "3008:109:11"
											},
											{
												"body": {
													"nativeSrc": "3215:118:11",
													"nodeType": "YulBlock",
													"src": "3215:118:11",
													"statements": [
														{
															"nativeSrc": "3225:26:11",
															"nodeType": "YulAssignment",
															"src": "3225:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3237:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "3237:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3248:2:11",
																		"nodeType": "YulLiteral",
																		"src": "3248:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3233:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "3233:3:11"
																},
																"nativeSrc": "3233:18:11",
																"nodeType": "YulFunctionCall",
																"src": "3233:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3225:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "3225:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3299:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "3299:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3312:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "3312:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3323:1:11",
																				"nodeType": "YulLiteral",
																				"src": "3323:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3308:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "3308:3:11"
																		},
																		"nativeSrc": "3308:17:11",
																		"nodeType": "YulFunctionCall",
																		"src": "3308:17:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "3261:37:11",
																	"nodeType": "YulIdentifier",
																	"src": "3261:37:11"
																},
																"nativeSrc": "3261:65:11",
																"nodeType": "YulFunctionCall",
																"src": "3261:65:11"
															},
															"nativeSrc": "3261:65:11",
															"nodeType": "YulExpressionStatement",
															"src": "3261:65:11"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "3123:210:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3187:9:11",
														"nodeType": "YulTypedName",
														"src": "3187:9:11",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3199:6:11",
														"nodeType": "YulTypedName",
														"src": "3199:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3210:4:11",
														"nodeType": "YulTypedName",
														"src": "3210:4:11",
														"type": ""
													}
												],
												"src": "3123:210:11"
											},
											{
												"body": {
													"nativeSrc": "3404:53:11",
													"nodeType": "YulBlock",
													"src": "3404:53:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3421:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "3421:3:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3444:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "3444:5:11"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "3426:17:11",
																			"nodeType": "YulIdentifier",
																			"src": "3426:17:11"
																		},
																		"nativeSrc": "3426:24:11",
																		"nodeType": "YulFunctionCall",
																		"src": "3426:24:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3414:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "3414:6:11"
																},
																"nativeSrc": "3414:37:11",
																"nodeType": "YulFunctionCall",
																"src": "3414:37:11"
															},
															"nativeSrc": "3414:37:11",
															"nodeType": "YulExpressionStatement",
															"src": "3414:37:11"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "3339:118:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3392:5:11",
														"nodeType": "YulTypedName",
														"src": "3392:5:11",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3399:3:11",
														"nodeType": "YulTypedName",
														"src": "3399:3:11",
														"type": ""
													}
												],
												"src": "3339:118:11"
											},
											{
												"body": {
													"nativeSrc": "3561:124:11",
													"nodeType": "YulBlock",
													"src": "3561:124:11",
													"statements": [
														{
															"nativeSrc": "3571:26:11",
															"nodeType": "YulAssignment",
															"src": "3571:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3583:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "3583:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3594:2:11",
																		"nodeType": "YulLiteral",
																		"src": "3594:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3579:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "3579:3:11"
																},
																"nativeSrc": "3579:18:11",
																"nodeType": "YulFunctionCall",
																"src": "3579:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3571:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "3571:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3651:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "3651:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3664:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "3664:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3675:1:11",
																				"nodeType": "YulLiteral",
																				"src": "3675:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3660:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "3660:3:11"
																		},
																		"nativeSrc": "3660:17:11",
																		"nodeType": "YulFunctionCall",
																		"src": "3660:17:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "3607:43:11",
																	"nodeType": "YulIdentifier",
																	"src": "3607:43:11"
																},
																"nativeSrc": "3607:71:11",
																"nodeType": "YulFunctionCall",
																"src": "3607:71:11"
															},
															"nativeSrc": "3607:71:11",
															"nodeType": "YulExpressionStatement",
															"src": "3607:71:11"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "3463:222:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3533:9:11",
														"nodeType": "YulTypedName",
														"src": "3533:9:11",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3545:6:11",
														"nodeType": "YulTypedName",
														"src": "3545:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3556:4:11",
														"nodeType": "YulTypedName",
														"src": "3556:4:11",
														"type": ""
													}
												],
												"src": "3463:222:11"
											},
											{
												"body": {
													"nativeSrc": "3791:519:11",
													"nodeType": "YulBlock",
													"src": "3791:519:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "3837:83:11",
																"nodeType": "YulBlock",
																"src": "3837:83:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3839:77:11",
																				"nodeType": "YulIdentifier",
																				"src": "3839:77:11"
																			},
																			"nativeSrc": "3839:79:11",
																			"nodeType": "YulFunctionCall",
																			"src": "3839:79:11"
																		},
																		"nativeSrc": "3839:79:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "3839:79:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3812:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "3812:7:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3821:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "3821:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3808:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "3808:3:11"
																		},
																		"nativeSrc": "3808:23:11",
																		"nodeType": "YulFunctionCall",
																		"src": "3808:23:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3833:2:11",
																		"nodeType": "YulLiteral",
																		"src": "3833:2:11",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3804:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "3804:3:11"
																},
																"nativeSrc": "3804:32:11",
																"nodeType": "YulFunctionCall",
																"src": "3804:32:11"
															},
															"nativeSrc": "3801:119:11",
															"nodeType": "YulIf",
															"src": "3801:119:11"
														},
														{
															"nativeSrc": "3930:117:11",
															"nodeType": "YulBlock",
															"src": "3930:117:11",
															"statements": [
																{
																	"nativeSrc": "3945:15:11",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3945:15:11",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3959:1:11",
																		"nodeType": "YulLiteral",
																		"src": "3959:1:11",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3949:6:11",
																			"nodeType": "YulTypedName",
																			"src": "3949:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3974:63:11",
																	"nodeType": "YulAssignment",
																	"src": "3974:63:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4009:9:11",
																						"nodeType": "YulIdentifier",
																						"src": "4009:9:11"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4020:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "4020:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4005:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "4005:3:11"
																				},
																				"nativeSrc": "4005:22:11",
																				"nodeType": "YulFunctionCall",
																				"src": "4005:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4029:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "4029:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "3984:20:11",
																			"nodeType": "YulIdentifier",
																			"src": "3984:20:11"
																		},
																		"nativeSrc": "3984:53:11",
																		"nodeType": "YulFunctionCall",
																		"src": "3984:53:11"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "3974:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "3974:6:11"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4057:118:11",
															"nodeType": "YulBlock",
															"src": "4057:118:11",
															"statements": [
																{
																	"nativeSrc": "4072:16:11",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4072:16:11",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4086:2:11",
																		"nodeType": "YulLiteral",
																		"src": "4086:2:11",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4076:6:11",
																			"nodeType": "YulTypedName",
																			"src": "4076:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4102:63:11",
																	"nodeType": "YulAssignment",
																	"src": "4102:63:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4137:9:11",
																						"nodeType": "YulIdentifier",
																						"src": "4137:9:11"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4148:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "4148:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4133:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "4133:3:11"
																				},
																				"nativeSrc": "4133:22:11",
																				"nodeType": "YulFunctionCall",
																				"src": "4133:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4157:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "4157:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "4112:20:11",
																			"nodeType": "YulIdentifier",
																			"src": "4112:20:11"
																		},
																		"nativeSrc": "4112:53:11",
																		"nodeType": "YulFunctionCall",
																		"src": "4112:53:11"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "4102:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "4102:6:11"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4185:118:11",
															"nodeType": "YulBlock",
															"src": "4185:118:11",
															"statements": [
																{
																	"nativeSrc": "4200:16:11",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4200:16:11",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4214:2:11",
																		"nodeType": "YulLiteral",
																		"src": "4214:2:11",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4204:6:11",
																			"nodeType": "YulTypedName",
																			"src": "4204:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4230:63:11",
																	"nodeType": "YulAssignment",
																	"src": "4230:63:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4265:9:11",
																						"nodeType": "YulIdentifier",
																						"src": "4265:9:11"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4276:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "4276:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4261:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "4261:3:11"
																				},
																				"nativeSrc": "4261:22:11",
																				"nodeType": "YulFunctionCall",
																				"src": "4261:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4285:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "4285:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "4240:20:11",
																			"nodeType": "YulIdentifier",
																			"src": "4240:20:11"
																		},
																		"nativeSrc": "4240:53:11",
																		"nodeType": "YulFunctionCall",
																		"src": "4240:53:11"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "4230:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "4230:6:11"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nativeSrc": "3691:619:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3745:9:11",
														"nodeType": "YulTypedName",
														"src": "3745:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3756:7:11",
														"nodeType": "YulTypedName",
														"src": "3756:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3768:6:11",
														"nodeType": "YulTypedName",
														"src": "3768:6:11",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3776:6:11",
														"nodeType": "YulTypedName",
														"src": "3776:6:11",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "3784:6:11",
														"nodeType": "YulTypedName",
														"src": "3784:6:11",
														"type": ""
													}
												],
												"src": "3691:619:11"
											},
											{
												"body": {
													"nativeSrc": "4359:43:11",
													"nodeType": "YulBlock",
													"src": "4359:43:11",
													"statements": [
														{
															"nativeSrc": "4369:27:11",
															"nodeType": "YulAssignment",
															"src": "4369:27:11",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4384:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "4384:5:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4391:4:11",
																		"nodeType": "YulLiteral",
																		"src": "4391:4:11",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "4380:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "4380:3:11"
																},
																"nativeSrc": "4380:16:11",
																"nodeType": "YulFunctionCall",
																"src": "4380:16:11"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "4369:7:11",
																	"nodeType": "YulIdentifier",
																	"src": "4369:7:11"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint8",
												"nativeSrc": "4316:86:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4341:5:11",
														"nodeType": "YulTypedName",
														"src": "4341:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "4351:7:11",
														"nodeType": "YulTypedName",
														"src": "4351:7:11",
														"type": ""
													}
												],
												"src": "4316:86:11"
											},
											{
												"body": {
													"nativeSrc": "4469:51:11",
													"nodeType": "YulBlock",
													"src": "4469:51:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4486:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "4486:3:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4507:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "4507:5:11"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint8",
																			"nativeSrc": "4491:15:11",
																			"nodeType": "YulIdentifier",
																			"src": "4491:15:11"
																		},
																		"nativeSrc": "4491:22:11",
																		"nodeType": "YulFunctionCall",
																		"src": "4491:22:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4479:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "4479:6:11"
																},
																"nativeSrc": "4479:35:11",
																"nodeType": "YulFunctionCall",
																"src": "4479:35:11"
															},
															"nativeSrc": "4479:35:11",
															"nodeType": "YulExpressionStatement",
															"src": "4479:35:11"
														}
													]
												},
												"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
												"nativeSrc": "4408:112:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4457:5:11",
														"nodeType": "YulTypedName",
														"src": "4457:5:11",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "4464:3:11",
														"nodeType": "YulTypedName",
														"src": "4464:3:11",
														"type": ""
													}
												],
												"src": "4408:112:11"
											},
											{
												"body": {
													"nativeSrc": "4620:120:11",
													"nodeType": "YulBlock",
													"src": "4620:120:11",
													"statements": [
														{
															"nativeSrc": "4630:26:11",
															"nodeType": "YulAssignment",
															"src": "4630:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4642:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "4642:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4653:2:11",
																		"nodeType": "YulLiteral",
																		"src": "4653:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4638:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "4638:3:11"
																},
																"nativeSrc": "4638:18:11",
																"nodeType": "YulFunctionCall",
																"src": "4638:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4630:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "4630:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "4706:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "4706:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4719:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "4719:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4730:1:11",
																				"nodeType": "YulLiteral",
																				"src": "4730:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4715:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "4715:3:11"
																		},
																		"nativeSrc": "4715:17:11",
																		"nodeType": "YulFunctionCall",
																		"src": "4715:17:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
																	"nativeSrc": "4666:39:11",
																	"nodeType": "YulIdentifier",
																	"src": "4666:39:11"
																},
																"nativeSrc": "4666:67:11",
																"nodeType": "YulFunctionCall",
																"src": "4666:67:11"
															},
															"nativeSrc": "4666:67:11",
															"nodeType": "YulExpressionStatement",
															"src": "4666:67:11"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nativeSrc": "4526:214:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4592:9:11",
														"nodeType": "YulTypedName",
														"src": "4592:9:11",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4604:6:11",
														"nodeType": "YulTypedName",
														"src": "4604:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4615:4:11",
														"nodeType": "YulTypedName",
														"src": "4615:4:11",
														"type": ""
													}
												],
												"src": "4526:214:11"
											},
											{
												"body": {
													"nativeSrc": "4812:263:11",
													"nodeType": "YulBlock",
													"src": "4812:263:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "4858:83:11",
																"nodeType": "YulBlock",
																"src": "4858:83:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "4860:77:11",
																				"nodeType": "YulIdentifier",
																				"src": "4860:77:11"
																			},
																			"nativeSrc": "4860:79:11",
																			"nodeType": "YulFunctionCall",
																			"src": "4860:79:11"
																		},
																		"nativeSrc": "4860:79:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "4860:79:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4833:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "4833:7:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4842:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "4842:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4829:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "4829:3:11"
																		},
																		"nativeSrc": "4829:23:11",
																		"nodeType": "YulFunctionCall",
																		"src": "4829:23:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4854:2:11",
																		"nodeType": "YulLiteral",
																		"src": "4854:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4825:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "4825:3:11"
																},
																"nativeSrc": "4825:32:11",
																"nodeType": "YulFunctionCall",
																"src": "4825:32:11"
															},
															"nativeSrc": "4822:119:11",
															"nodeType": "YulIf",
															"src": "4822:119:11"
														},
														{
															"nativeSrc": "4951:117:11",
															"nodeType": "YulBlock",
															"src": "4951:117:11",
															"statements": [
																{
																	"nativeSrc": "4966:15:11",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4966:15:11",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4980:1:11",
																		"nodeType": "YulLiteral",
																		"src": "4980:1:11",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4970:6:11",
																			"nodeType": "YulTypedName",
																			"src": "4970:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4995:63:11",
																	"nodeType": "YulAssignment",
																	"src": "4995:63:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5030:9:11",
																						"nodeType": "YulIdentifier",
																						"src": "5030:9:11"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5041:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "5041:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5026:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "5026:3:11"
																				},
																				"nativeSrc": "5026:22:11",
																				"nodeType": "YulFunctionCall",
																				"src": "5026:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5050:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "5050:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "5005:20:11",
																			"nodeType": "YulIdentifier",
																			"src": "5005:20:11"
																		},
																		"nativeSrc": "5005:53:11",
																		"nodeType": "YulFunctionCall",
																		"src": "5005:53:11"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "4995:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "4995:6:11"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "4746:329:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4782:9:11",
														"nodeType": "YulTypedName",
														"src": "4782:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4793:7:11",
														"nodeType": "YulTypedName",
														"src": "4793:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4805:6:11",
														"nodeType": "YulTypedName",
														"src": "4805:6:11",
														"type": ""
													}
												],
												"src": "4746:329:11"
											},
											{
												"body": {
													"nativeSrc": "5147:263:11",
													"nodeType": "YulBlock",
													"src": "5147:263:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "5193:83:11",
																"nodeType": "YulBlock",
																"src": "5193:83:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "5195:77:11",
																				"nodeType": "YulIdentifier",
																				"src": "5195:77:11"
																			},
																			"nativeSrc": "5195:79:11",
																			"nodeType": "YulFunctionCall",
																			"src": "5195:79:11"
																		},
																		"nativeSrc": "5195:79:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "5195:79:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5168:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "5168:7:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5177:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "5177:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5164:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "5164:3:11"
																		},
																		"nativeSrc": "5164:23:11",
																		"nodeType": "YulFunctionCall",
																		"src": "5164:23:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5189:2:11",
																		"nodeType": "YulLiteral",
																		"src": "5189:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "5160:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "5160:3:11"
																},
																"nativeSrc": "5160:32:11",
																"nodeType": "YulFunctionCall",
																"src": "5160:32:11"
															},
															"nativeSrc": "5157:119:11",
															"nodeType": "YulIf",
															"src": "5157:119:11"
														},
														{
															"nativeSrc": "5286:117:11",
															"nodeType": "YulBlock",
															"src": "5286:117:11",
															"statements": [
																{
																	"nativeSrc": "5301:15:11",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5301:15:11",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5315:1:11",
																		"nodeType": "YulLiteral",
																		"src": "5315:1:11",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5305:6:11",
																			"nodeType": "YulTypedName",
																			"src": "5305:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5330:63:11",
																	"nodeType": "YulAssignment",
																	"src": "5330:63:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5365:9:11",
																						"nodeType": "YulIdentifier",
																						"src": "5365:9:11"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5376:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "5376:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5361:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "5361:3:11"
																				},
																				"nativeSrc": "5361:22:11",
																				"nodeType": "YulFunctionCall",
																				"src": "5361:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5385:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "5385:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "5340:20:11",
																			"nodeType": "YulIdentifier",
																			"src": "5340:20:11"
																		},
																		"nativeSrc": "5340:53:11",
																		"nodeType": "YulFunctionCall",
																		"src": "5340:53:11"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "5330:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "5330:6:11"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "5081:329:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5117:9:11",
														"nodeType": "YulTypedName",
														"src": "5117:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "5128:7:11",
														"nodeType": "YulTypedName",
														"src": "5128:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "5140:6:11",
														"nodeType": "YulTypedName",
														"src": "5140:6:11",
														"type": ""
													}
												],
												"src": "5081:329:11"
											},
											{
												"body": {
													"nativeSrc": "5499:391:11",
													"nodeType": "YulBlock",
													"src": "5499:391:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "5545:83:11",
																"nodeType": "YulBlock",
																"src": "5545:83:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "5547:77:11",
																				"nodeType": "YulIdentifier",
																				"src": "5547:77:11"
																			},
																			"nativeSrc": "5547:79:11",
																			"nodeType": "YulFunctionCall",
																			"src": "5547:79:11"
																		},
																		"nativeSrc": "5547:79:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "5547:79:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5520:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "5520:7:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5529:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "5529:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5516:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "5516:3:11"
																		},
																		"nativeSrc": "5516:23:11",
																		"nodeType": "YulFunctionCall",
																		"src": "5516:23:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5541:2:11",
																		"nodeType": "YulLiteral",
																		"src": "5541:2:11",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "5512:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "5512:3:11"
																},
																"nativeSrc": "5512:32:11",
																"nodeType": "YulFunctionCall",
																"src": "5512:32:11"
															},
															"nativeSrc": "5509:119:11",
															"nodeType": "YulIf",
															"src": "5509:119:11"
														},
														{
															"nativeSrc": "5638:117:11",
															"nodeType": "YulBlock",
															"src": "5638:117:11",
															"statements": [
																{
																	"nativeSrc": "5653:15:11",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5653:15:11",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5667:1:11",
																		"nodeType": "YulLiteral",
																		"src": "5667:1:11",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5657:6:11",
																			"nodeType": "YulTypedName",
																			"src": "5657:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5682:63:11",
																	"nodeType": "YulAssignment",
																	"src": "5682:63:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5717:9:11",
																						"nodeType": "YulIdentifier",
																						"src": "5717:9:11"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5728:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "5728:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5713:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "5713:3:11"
																				},
																				"nativeSrc": "5713:22:11",
																				"nodeType": "YulFunctionCall",
																				"src": "5713:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5737:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "5737:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "5692:20:11",
																			"nodeType": "YulIdentifier",
																			"src": "5692:20:11"
																		},
																		"nativeSrc": "5692:53:11",
																		"nodeType": "YulFunctionCall",
																		"src": "5692:53:11"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "5682:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "5682:6:11"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "5765:118:11",
															"nodeType": "YulBlock",
															"src": "5765:118:11",
															"statements": [
																{
																	"nativeSrc": "5780:16:11",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5780:16:11",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5794:2:11",
																		"nodeType": "YulLiteral",
																		"src": "5794:2:11",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5784:6:11",
																			"nodeType": "YulTypedName",
																			"src": "5784:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5810:63:11",
																	"nodeType": "YulAssignment",
																	"src": "5810:63:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5845:9:11",
																						"nodeType": "YulIdentifier",
																						"src": "5845:9:11"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5856:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "5856:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5841:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "5841:3:11"
																				},
																				"nativeSrc": "5841:22:11",
																				"nodeType": "YulFunctionCall",
																				"src": "5841:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5865:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "5865:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "5820:20:11",
																			"nodeType": "YulIdentifier",
																			"src": "5820:20:11"
																		},
																		"nativeSrc": "5820:53:11",
																		"nodeType": "YulFunctionCall",
																		"src": "5820:53:11"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "5810:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "5810:6:11"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nativeSrc": "5416:474:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5461:9:11",
														"nodeType": "YulTypedName",
														"src": "5461:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "5472:7:11",
														"nodeType": "YulTypedName",
														"src": "5472:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "5484:6:11",
														"nodeType": "YulTypedName",
														"src": "5484:6:11",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "5492:6:11",
														"nodeType": "YulTypedName",
														"src": "5492:6:11",
														"type": ""
													}
												],
												"src": "5416:474:11"
											},
											{
												"body": {
													"nativeSrc": "5924:152:11",
													"nodeType": "YulBlock",
													"src": "5924:152:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5941:1:11",
																		"nodeType": "YulLiteral",
																		"src": "5941:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5944:77:11",
																		"nodeType": "YulLiteral",
																		"src": "5944:77:11",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5934:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "5934:6:11"
																},
																"nativeSrc": "5934:88:11",
																"nodeType": "YulFunctionCall",
																"src": "5934:88:11"
															},
															"nativeSrc": "5934:88:11",
															"nodeType": "YulExpressionStatement",
															"src": "5934:88:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6038:1:11",
																		"nodeType": "YulLiteral",
																		"src": "6038:1:11",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6041:4:11",
																		"nodeType": "YulLiteral",
																		"src": "6041:4:11",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6031:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "6031:6:11"
																},
																"nativeSrc": "6031:15:11",
																"nodeType": "YulFunctionCall",
																"src": "6031:15:11"
															},
															"nativeSrc": "6031:15:11",
															"nodeType": "YulExpressionStatement",
															"src": "6031:15:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6062:1:11",
																		"nodeType": "YulLiteral",
																		"src": "6062:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6065:4:11",
																		"nodeType": "YulLiteral",
																		"src": "6065:4:11",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "6055:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "6055:6:11"
																},
																"nativeSrc": "6055:15:11",
																"nodeType": "YulFunctionCall",
																"src": "6055:15:11"
															},
															"nativeSrc": "6055:15:11",
															"nodeType": "YulExpressionStatement",
															"src": "6055:15:11"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "5896:180:11",
												"nodeType": "YulFunctionDefinition",
												"src": "5896:180:11"
											},
											{
												"body": {
													"nativeSrc": "6133:269:11",
													"nodeType": "YulBlock",
													"src": "6133:269:11",
													"statements": [
														{
															"nativeSrc": "6143:22:11",
															"nodeType": "YulAssignment",
															"src": "6143:22:11",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "6157:4:11",
																		"nodeType": "YulIdentifier",
																		"src": "6157:4:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6163:1:11",
																		"nodeType": "YulLiteral",
																		"src": "6163:1:11",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "6153:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "6153:3:11"
																},
																"nativeSrc": "6153:12:11",
																"nodeType": "YulFunctionCall",
																"src": "6153:12:11"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "6143:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "6143:6:11"
																}
															]
														},
														{
															"nativeSrc": "6174:38:11",
															"nodeType": "YulVariableDeclaration",
															"src": "6174:38:11",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "6204:4:11",
																		"nodeType": "YulIdentifier",
																		"src": "6204:4:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6210:1:11",
																		"nodeType": "YulLiteral",
																		"src": "6210:1:11",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "6200:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "6200:3:11"
																},
																"nativeSrc": "6200:12:11",
																"nodeType": "YulFunctionCall",
																"src": "6200:12:11"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "6178:18:11",
																	"nodeType": "YulTypedName",
																	"src": "6178:18:11",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "6251:51:11",
																"nodeType": "YulBlock",
																"src": "6251:51:11",
																"statements": [
																	{
																		"nativeSrc": "6265:27:11",
																		"nodeType": "YulAssignment",
																		"src": "6265:27:11",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "6279:6:11",
																					"nodeType": "YulIdentifier",
																					"src": "6279:6:11"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6287:4:11",
																					"nodeType": "YulLiteral",
																					"src": "6287:4:11",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "6275:3:11",
																				"nodeType": "YulIdentifier",
																				"src": "6275:3:11"
																			},
																			"nativeSrc": "6275:17:11",
																			"nodeType": "YulFunctionCall",
																			"src": "6275:17:11"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "6265:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "6265:6:11"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "6231:18:11",
																		"nodeType": "YulIdentifier",
																		"src": "6231:18:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "6224:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "6224:6:11"
																},
																"nativeSrc": "6224:26:11",
																"nodeType": "YulFunctionCall",
																"src": "6224:26:11"
															},
															"nativeSrc": "6221:81:11",
															"nodeType": "YulIf",
															"src": "6221:81:11"
														},
														{
															"body": {
																"nativeSrc": "6354:42:11",
																"nodeType": "YulBlock",
																"src": "6354:42:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "6368:16:11",
																				"nodeType": "YulIdentifier",
																				"src": "6368:16:11"
																			},
																			"nativeSrc": "6368:18:11",
																			"nodeType": "YulFunctionCall",
																			"src": "6368:18:11"
																		},
																		"nativeSrc": "6368:18:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "6368:18:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "6318:18:11",
																		"nodeType": "YulIdentifier",
																		"src": "6318:18:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "6341:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "6341:6:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6349:2:11",
																				"nodeType": "YulLiteral",
																				"src": "6349:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "6338:2:11",
																			"nodeType": "YulIdentifier",
																			"src": "6338:2:11"
																		},
																		"nativeSrc": "6338:14:11",
																		"nodeType": "YulFunctionCall",
																		"src": "6338:14:11"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "6315:2:11",
																	"nodeType": "YulIdentifier",
																	"src": "6315:2:11"
																},
																"nativeSrc": "6315:38:11",
																"nodeType": "YulFunctionCall",
																"src": "6315:38:11"
															},
															"nativeSrc": "6312:84:11",
															"nodeType": "YulIf",
															"src": "6312:84:11"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "6082:320:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "6117:4:11",
														"nodeType": "YulTypedName",
														"src": "6117:4:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "6126:6:11",
														"nodeType": "YulTypedName",
														"src": "6126:6:11",
														"type": ""
													}
												],
												"src": "6082:320:11"
											},
											{
												"body": {
													"nativeSrc": "6473:53:11",
													"nodeType": "YulBlock",
													"src": "6473:53:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6490:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "6490:3:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "6513:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "6513:5:11"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "6495:17:11",
																			"nodeType": "YulIdentifier",
																			"src": "6495:17:11"
																		},
																		"nativeSrc": "6495:24:11",
																		"nodeType": "YulFunctionCall",
																		"src": "6495:24:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6483:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "6483:6:11"
																},
																"nativeSrc": "6483:37:11",
																"nodeType": "YulFunctionCall",
																"src": "6483:37:11"
															},
															"nativeSrc": "6483:37:11",
															"nodeType": "YulExpressionStatement",
															"src": "6483:37:11"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "6408:118:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6461:5:11",
														"nodeType": "YulTypedName",
														"src": "6461:5:11",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "6468:3:11",
														"nodeType": "YulTypedName",
														"src": "6468:3:11",
														"type": ""
													}
												],
												"src": "6408:118:11"
											},
											{
												"body": {
													"nativeSrc": "6686:288:11",
													"nodeType": "YulBlock",
													"src": "6686:288:11",
													"statements": [
														{
															"nativeSrc": "6696:26:11",
															"nodeType": "YulAssignment",
															"src": "6696:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6708:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "6708:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6719:2:11",
																		"nodeType": "YulLiteral",
																		"src": "6719:2:11",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6704:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "6704:3:11"
																},
																"nativeSrc": "6704:18:11",
																"nodeType": "YulFunctionCall",
																"src": "6704:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6696:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "6696:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "6776:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "6776:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6789:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "6789:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6800:1:11",
																				"nodeType": "YulLiteral",
																				"src": "6800:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6785:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "6785:3:11"
																		},
																		"nativeSrc": "6785:17:11",
																		"nodeType": "YulFunctionCall",
																		"src": "6785:17:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "6732:43:11",
																	"nodeType": "YulIdentifier",
																	"src": "6732:43:11"
																},
																"nativeSrc": "6732:71:11",
																"nodeType": "YulFunctionCall",
																"src": "6732:71:11"
															},
															"nativeSrc": "6732:71:11",
															"nodeType": "YulExpressionStatement",
															"src": "6732:71:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "6857:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "6857:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6870:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "6870:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6881:2:11",
																				"nodeType": "YulLiteral",
																				"src": "6881:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6866:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "6866:3:11"
																		},
																		"nativeSrc": "6866:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "6866:18:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "6813:43:11",
																	"nodeType": "YulIdentifier",
																	"src": "6813:43:11"
																},
																"nativeSrc": "6813:72:11",
																"nodeType": "YulFunctionCall",
																"src": "6813:72:11"
															},
															"nativeSrc": "6813:72:11",
															"nodeType": "YulExpressionStatement",
															"src": "6813:72:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "6939:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "6939:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6952:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "6952:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6963:2:11",
																				"nodeType": "YulLiteral",
																				"src": "6963:2:11",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6948:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "6948:3:11"
																		},
																		"nativeSrc": "6948:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "6948:18:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "6895:43:11",
																	"nodeType": "YulIdentifier",
																	"src": "6895:43:11"
																},
																"nativeSrc": "6895:72:11",
																"nodeType": "YulFunctionCall",
																"src": "6895:72:11"
															},
															"nativeSrc": "6895:72:11",
															"nodeType": "YulExpressionStatement",
															"src": "6895:72:11"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "6532:442:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6642:9:11",
														"nodeType": "YulTypedName",
														"src": "6642:9:11",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "6654:6:11",
														"nodeType": "YulTypedName",
														"src": "6654:6:11",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "6662:6:11",
														"nodeType": "YulTypedName",
														"src": "6662:6:11",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "6670:6:11",
														"nodeType": "YulTypedName",
														"src": "6670:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6681:4:11",
														"nodeType": "YulTypedName",
														"src": "6681:4:11",
														"type": ""
													}
												],
												"src": "6532:442:11"
											},
											{
												"body": {
													"nativeSrc": "7078:124:11",
													"nodeType": "YulBlock",
													"src": "7078:124:11",
													"statements": [
														{
															"nativeSrc": "7088:26:11",
															"nodeType": "YulAssignment",
															"src": "7088:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7100:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "7100:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7111:2:11",
																		"nodeType": "YulLiteral",
																		"src": "7111:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7096:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "7096:3:11"
																},
																"nativeSrc": "7096:18:11",
																"nodeType": "YulFunctionCall",
																"src": "7096:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7088:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "7088:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "7168:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "7168:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7181:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "7181:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7192:1:11",
																				"nodeType": "YulLiteral",
																				"src": "7192:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7177:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "7177:3:11"
																		},
																		"nativeSrc": "7177:17:11",
																		"nodeType": "YulFunctionCall",
																		"src": "7177:17:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "7124:43:11",
																	"nodeType": "YulIdentifier",
																	"src": "7124:43:11"
																},
																"nativeSrc": "7124:71:11",
																"nodeType": "YulFunctionCall",
																"src": "7124:71:11"
															},
															"nativeSrc": "7124:71:11",
															"nodeType": "YulExpressionStatement",
															"src": "7124:71:11"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "6980:222:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7050:9:11",
														"nodeType": "YulTypedName",
														"src": "7050:9:11",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "7062:6:11",
														"nodeType": "YulTypedName",
														"src": "7062:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7073:4:11",
														"nodeType": "YulTypedName",
														"src": "7073:4:11",
														"type": ""
													}
												],
												"src": "6980:222:11"
											},
											{
												"body": {
													"nativeSrc": "7236:152:11",
													"nodeType": "YulBlock",
													"src": "7236:152:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7253:1:11",
																		"nodeType": "YulLiteral",
																		"src": "7253:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7256:77:11",
																		"nodeType": "YulLiteral",
																		"src": "7256:77:11",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7246:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "7246:6:11"
																},
																"nativeSrc": "7246:88:11",
																"nodeType": "YulFunctionCall",
																"src": "7246:88:11"
															},
															"nativeSrc": "7246:88:11",
															"nodeType": "YulExpressionStatement",
															"src": "7246:88:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7350:1:11",
																		"nodeType": "YulLiteral",
																		"src": "7350:1:11",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7353:4:11",
																		"nodeType": "YulLiteral",
																		"src": "7353:4:11",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7343:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "7343:6:11"
																},
																"nativeSrc": "7343:15:11",
																"nodeType": "YulFunctionCall",
																"src": "7343:15:11"
															},
															"nativeSrc": "7343:15:11",
															"nodeType": "YulExpressionStatement",
															"src": "7343:15:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7374:1:11",
																		"nodeType": "YulLiteral",
																		"src": "7374:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7377:4:11",
																		"nodeType": "YulLiteral",
																		"src": "7377:4:11",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "7367:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "7367:6:11"
																},
																"nativeSrc": "7367:15:11",
																"nodeType": "YulFunctionCall",
																"src": "7367:15:11"
															},
															"nativeSrc": "7367:15:11",
															"nodeType": "YulExpressionStatement",
															"src": "7367:15:11"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "7208:180:11",
												"nodeType": "YulFunctionDefinition",
												"src": "7208:180:11"
											},
											{
												"body": {
													"nativeSrc": "7438:147:11",
													"nodeType": "YulBlock",
													"src": "7438:147:11",
													"statements": [
														{
															"nativeSrc": "7448:25:11",
															"nodeType": "YulAssignment",
															"src": "7448:25:11",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "7471:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "7471:1:11"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "7453:17:11",
																	"nodeType": "YulIdentifier",
																	"src": "7453:17:11"
																},
																"nativeSrc": "7453:20:11",
																"nodeType": "YulFunctionCall",
																"src": "7453:20:11"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "7448:1:11",
																	"nodeType": "YulIdentifier",
																	"src": "7448:1:11"
																}
															]
														},
														{
															"nativeSrc": "7482:25:11",
															"nodeType": "YulAssignment",
															"src": "7482:25:11",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "7505:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "7505:1:11"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "7487:17:11",
																	"nodeType": "YulIdentifier",
																	"src": "7487:17:11"
																},
																"nativeSrc": "7487:20:11",
																"nodeType": "YulFunctionCall",
																"src": "7487:20:11"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "7482:1:11",
																	"nodeType": "YulIdentifier",
																	"src": "7482:1:11"
																}
															]
														},
														{
															"nativeSrc": "7516:16:11",
															"nodeType": "YulAssignment",
															"src": "7516:16:11",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "7527:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "7527:1:11"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "7530:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "7530:1:11"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7523:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "7523:3:11"
																},
																"nativeSrc": "7523:9:11",
																"nodeType": "YulFunctionCall",
																"src": "7523:9:11"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "7516:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "7516:3:11"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "7556:22:11",
																"nodeType": "YulBlock",
																"src": "7556:22:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "7558:16:11",
																				"nodeType": "YulIdentifier",
																				"src": "7558:16:11"
																			},
																			"nativeSrc": "7558:18:11",
																			"nodeType": "YulFunctionCall",
																			"src": "7558:18:11"
																		},
																		"nativeSrc": "7558:18:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "7558:18:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "7548:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "7548:1:11"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "7551:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "7551:3:11"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "7545:2:11",
																	"nodeType": "YulIdentifier",
																	"src": "7545:2:11"
																},
																"nativeSrc": "7545:10:11",
																"nodeType": "YulFunctionCall",
																"src": "7545:10:11"
															},
															"nativeSrc": "7542:36:11",
															"nodeType": "YulIf",
															"src": "7542:36:11"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "7394:191:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "7425:1:11",
														"nodeType": "YulTypedName",
														"src": "7425:1:11",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "7428:1:11",
														"nodeType": "YulTypedName",
														"src": "7428:1:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "7434:3:11",
														"nodeType": "YulTypedName",
														"src": "7434:3:11",
														"type": ""
													}
												],
												"src": "7394:191:11"
											}
										]
									},
									"contents": "{\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n\n        mcopy(dst, src, length)\n        mstore(add(dst, length), 0)\n\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n}\n",
									"id": 11,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b506004361061009c575f3560e01c806370a082311161006457806370a082311461015a57806395d89b411461018a578063a0712d68146101a8578063a9059cbb146101c4578063dd62ed3e146101f45761009c565b806306fdde03146100a0578063095ea7b3146100be57806318160ddd146100ee57806323b872dd1461010c578063313ce5671461013c575b5f80fd5b6100a8610224565b6040516100b59190610b0d565b60405180910390f35b6100d860048036038101906100d39190610bbe565b6102b4565b6040516100e59190610c16565b60405180910390f35b6100f66102d6565b6040516101039190610c3e565b60405180910390f35b61012660048036038101906101219190610c57565b6102df565b6040516101339190610c16565b60405180910390f35b61014461030d565b6040516101519190610cc2565b60405180910390f35b610174600480360381019061016f9190610cdb565b610315565b6040516101819190610c3e565b60405180910390f35b61019261035a565b60405161019f9190610b0d565b60405180910390f35b6101c260048036038101906101bd9190610d06565b6103ea565b005b6101de60048036038101906101d99190610bbe565b6103f7565b6040516101eb9190610c16565b60405180910390f35b61020e60048036038101906102099190610d31565b610419565b60405161021b9190610c3e565b60405180910390f35b60606003805461023390610d9c565b80601f016020809104026020016040519081016040528092919081815260200182805461025f90610d9c565b80156102aa5780601f10610281576101008083540402835291602001916102aa565b820191905f5260205f20905b81548152906001019060200180831161028d57829003601f168201915b5050505050905090565b5f806102be61049b565b90506102cb8185856104a2565b600191505092915050565b5f600254905090565b5f806102e961049b565b90506102f68582856104b4565b610301858585610546565b60019150509392505050565b5f6012905090565b5f805f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b60606004805461036990610d9c565b80601f016020809104026020016040519081016040528092919081815260200182805461039590610d9c565b80156103e05780601f106103b7576101008083540402835291602001916103e0565b820191905f5260205f20905b8154815290600101906020018083116103c357829003601f168201915b5050505050905090565b6103f43382610636565b50565b5f8061040161049b565b905061040e818585610546565b600191505092915050565b5f60015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905092915050565b5f33905090565b6104af83838360016106b5565b505050565b5f6104bf8484610419565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146105405781811015610531578281836040517ffb8f41b200000000000000000000000000000000000000000000000000000000815260040161052893929190610ddb565b60405180910390fd5b61053f84848484035f6106b5565b5b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036105b6575f6040517f96c6fd1e0000000000000000000000000000000000000000000000000000000081526004016105ad9190610e10565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610626575f6040517fec442f0500000000000000000000000000000000000000000000000000000000815260040161061d9190610e10565b60405180910390fd5b610631838383610884565b505050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036106a6575f6040517fec442f0500000000000000000000000000000000000000000000000000000000815260040161069d9190610e10565b60405180910390fd5b6106b15f8383610884565b5050565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603610725575f6040517fe602df0500000000000000000000000000000000000000000000000000000000815260040161071c9190610e10565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610795575f6040517f94280d6200000000000000000000000000000000000000000000000000000000815260040161078c9190610e10565b60405180910390fd5b8160015f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550801561087e578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040516108759190610c3e565b60405180910390a35b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036108d4578060025f8282546108c89190610e56565b925050819055506109a2565b5f805f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205490508181101561095d578381836040517fe450d38c00000000000000000000000000000000000000000000000000000000815260040161095493929190610ddb565b60405180910390fd5b8181035f808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036109e9578060025f8282540392505081905550610a33565b805f808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051610a909190610c3e565b60405180910390a3505050565b5f81519050919050565b5f82825260208201905092915050565b8281835e5f83830152505050565b5f601f19601f8301169050919050565b5f610adf82610a9d565b610ae98185610aa7565b9350610af9818560208601610ab7565b610b0281610ac5565b840191505092915050565b5f6020820190508181035f830152610b258184610ad5565b905092915050565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f610b5a82610b31565b9050919050565b610b6a81610b50565b8114610b74575f80fd5b50565b5f81359050610b8581610b61565b92915050565b5f819050919050565b610b9d81610b8b565b8114610ba7575f80fd5b50565b5f81359050610bb881610b94565b92915050565b5f8060408385031215610bd457610bd3610b2d565b5b5f610be185828601610b77565b9250506020610bf285828601610baa565b9150509250929050565b5f8115159050919050565b610c1081610bfc565b82525050565b5f602082019050610c295f830184610c07565b92915050565b610c3881610b8b565b82525050565b5f602082019050610c515f830184610c2f565b92915050565b5f805f60608486031215610c6e57610c6d610b2d565b5b5f610c7b86828701610b77565b9350506020610c8c86828701610b77565b9250506040610c9d86828701610baa565b9150509250925092565b5f60ff82169050919050565b610cbc81610ca7565b82525050565b5f602082019050610cd55f830184610cb3565b92915050565b5f60208284031215610cf057610cef610b2d565b5b5f610cfd84828501610b77565b91505092915050565b5f60208284031215610d1b57610d1a610b2d565b5b5f610d2884828501610baa565b91505092915050565b5f8060408385031215610d4757610d46610b2d565b5b5f610d5485828601610b77565b9250506020610d6585828601610b77565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f6002820490506001821680610db357607f821691505b602082108103610dc657610dc5610d6f565b5b50919050565b610dd581610b50565b82525050565b5f606082019050610dee5f830186610dcc565b610dfb6020830185610c2f565b610e086040830184610c2f565b949350505050565b5f602082019050610e235f830184610dcc565b92915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f610e6082610b8b565b9150610e6b83610b8b565b9250828201905080821115610e8357610e82610e29565b5b9291505056fea26469706673582212202e841070bcf6e134e197909d0be916dc2c79804eccb9bb2228d245e657b0483264736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x9C JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0x64 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x15A JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x18A JUMPI DUP1 PUSH4 0xA0712D68 EQ PUSH2 0x1A8 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x1C4 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x1F4 JUMPI PUSH2 0x9C JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xA0 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xBE JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xEE JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x10C JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x13C JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xA8 PUSH2 0x224 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xB5 SWAP2 SWAP1 PUSH2 0xB0D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xD8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xD3 SWAP2 SWAP1 PUSH2 0xBBE JUMP JUMPDEST PUSH2 0x2B4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE5 SWAP2 SWAP1 PUSH2 0xC16 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xF6 PUSH2 0x2D6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x103 SWAP2 SWAP1 PUSH2 0xC3E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x126 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x121 SWAP2 SWAP1 PUSH2 0xC57 JUMP JUMPDEST PUSH2 0x2DF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x133 SWAP2 SWAP1 PUSH2 0xC16 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x144 PUSH2 0x30D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x151 SWAP2 SWAP1 PUSH2 0xCC2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x174 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x16F SWAP2 SWAP1 PUSH2 0xCDB JUMP JUMPDEST PUSH2 0x315 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x181 SWAP2 SWAP1 PUSH2 0xC3E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x192 PUSH2 0x35A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x19F SWAP2 SWAP1 PUSH2 0xB0D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1C2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1BD SWAP2 SWAP1 PUSH2 0xD06 JUMP JUMPDEST PUSH2 0x3EA JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1DE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1D9 SWAP2 SWAP1 PUSH2 0xBBE JUMP JUMPDEST PUSH2 0x3F7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1EB SWAP2 SWAP1 PUSH2 0xC16 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x20E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x209 SWAP2 SWAP1 PUSH2 0xD31 JUMP JUMPDEST PUSH2 0x419 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x21B SWAP2 SWAP1 PUSH2 0xC3E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x233 SWAP1 PUSH2 0xD9C JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x25F SWAP1 PUSH2 0xD9C JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2AA JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x281 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2AA JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x28D JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x2BE PUSH2 0x49B JUMP JUMPDEST SWAP1 POP PUSH2 0x2CB DUP2 DUP6 DUP6 PUSH2 0x4A2 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x2E9 PUSH2 0x49B JUMP JUMPDEST SWAP1 POP PUSH2 0x2F6 DUP6 DUP3 DUP6 PUSH2 0x4B4 JUMP JUMPDEST PUSH2 0x301 DUP6 DUP6 DUP6 PUSH2 0x546 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x369 SWAP1 PUSH2 0xD9C JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x395 SWAP1 PUSH2 0xD9C JUMP JUMPDEST DUP1 ISZERO PUSH2 0x3E0 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x3B7 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x3E0 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x3C3 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x3F4 CALLER DUP3 PUSH2 0x636 JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x401 PUSH2 0x49B JUMP JUMPDEST SWAP1 POP PUSH2 0x40E DUP2 DUP6 DUP6 PUSH2 0x546 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x4AF DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x6B5 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x4BF DUP5 DUP5 PUSH2 0x419 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0x540 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x531 JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x528 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xDDB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x53F DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0x6B5 JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x5B6 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5AD SWAP2 SWAP1 PUSH2 0xE10 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x626 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x61D SWAP2 SWAP1 PUSH2 0xE10 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x631 DUP4 DUP4 DUP4 PUSH2 0x884 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x6A6 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x69D SWAP2 SWAP1 PUSH2 0xE10 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x6B1 PUSH0 DUP4 DUP4 PUSH2 0x884 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x725 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x71C SWAP2 SWAP1 PUSH2 0xE10 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x795 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x78C SWAP2 SWAP1 PUSH2 0xE10 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0x87E JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x875 SWAP2 SWAP1 PUSH2 0xC3E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x8D4 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x8C8 SWAP2 SWAP1 PUSH2 0xE56 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x9A2 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x95D JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x954 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xDDB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x9E9 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0xA33 JUMP JUMPDEST DUP1 PUSH0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0xA90 SWAP2 SWAP1 PUSH2 0xC3E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xADF DUP3 PUSH2 0xA9D JUMP JUMPDEST PUSH2 0xAE9 DUP2 DUP6 PUSH2 0xAA7 JUMP JUMPDEST SWAP4 POP PUSH2 0xAF9 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xAB7 JUMP JUMPDEST PUSH2 0xB02 DUP2 PUSH2 0xAC5 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xB25 DUP2 DUP5 PUSH2 0xAD5 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xB5A DUP3 PUSH2 0xB31 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB6A DUP2 PUSH2 0xB50 JUMP JUMPDEST DUP2 EQ PUSH2 0xB74 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xB85 DUP2 PUSH2 0xB61 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB9D DUP2 PUSH2 0xB8B JUMP JUMPDEST DUP2 EQ PUSH2 0xBA7 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xBB8 DUP2 PUSH2 0xB94 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xBD4 JUMPI PUSH2 0xBD3 PUSH2 0xB2D JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xBE1 DUP6 DUP3 DUP7 ADD PUSH2 0xB77 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xBF2 DUP6 DUP3 DUP7 ADD PUSH2 0xBAA JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xC10 DUP2 PUSH2 0xBFC JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xC29 PUSH0 DUP4 ADD DUP5 PUSH2 0xC07 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xC38 DUP2 PUSH2 0xB8B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xC51 PUSH0 DUP4 ADD DUP5 PUSH2 0xC2F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xC6E JUMPI PUSH2 0xC6D PUSH2 0xB2D JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xC7B DUP7 DUP3 DUP8 ADD PUSH2 0xB77 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0xC8C DUP7 DUP3 DUP8 ADD PUSH2 0xB77 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0xC9D DUP7 DUP3 DUP8 ADD PUSH2 0xBAA JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xCBC DUP2 PUSH2 0xCA7 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xCD5 PUSH0 DUP4 ADD DUP5 PUSH2 0xCB3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xCF0 JUMPI PUSH2 0xCEF PUSH2 0xB2D JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xCFD DUP5 DUP3 DUP6 ADD PUSH2 0xB77 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD1B JUMPI PUSH2 0xD1A PUSH2 0xB2D JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xD28 DUP5 DUP3 DUP6 ADD PUSH2 0xBAA JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xD47 JUMPI PUSH2 0xD46 PUSH2 0xB2D JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xD54 DUP6 DUP3 DUP7 ADD PUSH2 0xB77 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xD65 DUP6 DUP3 DUP7 ADD PUSH2 0xB77 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0xDB3 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0xDC6 JUMPI PUSH2 0xDC5 PUSH2 0xD6F JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xDD5 DUP2 PUSH2 0xB50 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0xDEE PUSH0 DUP4 ADD DUP7 PUSH2 0xDCC JUMP JUMPDEST PUSH2 0xDFB PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0xC2F JUMP JUMPDEST PUSH2 0xE08 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xC2F JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xE23 PUSH0 DUP4 ADD DUP5 PUSH2 0xDCC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0xE60 DUP3 PUSH2 0xB8B JUMP JUMPDEST SWAP2 POP PUSH2 0xE6B DUP4 PUSH2 0xB8B JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0xE83 JUMPI PUSH2 0xE82 PUSH2 0xE29 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2E DUP5 LT PUSH17 0xBCF6E134E197909D0BE916DC2C79804ECC 0xB9 0xBB 0x22 0x28 0xD2 GASLIMIT 0xE6 JUMPI 0xB0 BASEFEE ORIGIN PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "118:165:8:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1779:89:4;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3998:186;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2849:97;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4776:244;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2707:82;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3004:116;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1981:93;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;204:76:8;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3315:178:4;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3551:140;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1779:89;1824:13;1856:5;1849:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1779:89;:::o;3998:186::-;4071:4;4087:13;4103:12;:10;:12::i;:::-;4087:28;;4125:31;4134:5;4141:7;4150:5;4125:8;:31::i;:::-;4173:4;4166:11;;;3998:186;;;;:::o;2849:97::-;2901:7;2927:12;;2920:19;;2849:97;:::o;4776:244::-;4863:4;4879:15;4897:12;:10;:12::i;:::-;4879:30;;4919:37;4935:4;4941:7;4950:5;4919:15;:37::i;:::-;4966:26;4976:4;4982:2;4986:5;4966:9;:26::i;:::-;5009:4;5002:11;;;4776:244;;;;;:::o;2707:82::-;2756:5;2780:2;2773:9;;2707:82;:::o;3004:116::-;3069:7;3095:9;:18;3105:7;3095:18;;;;;;;;;;;;;;;;3088:25;;3004:116;;;:::o;1981:93::-;2028:13;2060:7;2053:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1981:93;:::o;204:76:8:-;248:24;254:10;265:6;248:5;:24::i;:::-;204:76;:::o;3315:178:4:-;3384:4;3400:13;3416:12;:10;:12::i;:::-;3400:28;;3438:27;3448:5;3455:2;3459:5;3438:9;:27::i;:::-;3482:4;3475:11;;;3315:178;;;;:::o;3551:140::-;3631:7;3657:11;:18;3669:5;3657:18;;;;;;;;;;;;;;;:27;3676:7;3657:27;;;;;;;;;;;;;;;;3650:34;;3551:140;;;;:::o;656:96:7:-;709:7;735:10;728:17;;656:96;:::o;8726:128:4:-;8810:37;8819:5;8826:7;8835:5;8842:4;8810:8;:37::i;:::-;8726:128;;;:::o;10415:477::-;10514:24;10541:25;10551:5;10558:7;10541:9;:25::i;:::-;10514:52;;10600:17;10580:16;:37;10576:310;;10656:5;10637:16;:24;10633:130;;;10715:7;10724:16;10742:5;10688:60;;;;;;;;;;;;;:::i;:::-;;;;;;;;10633:130;10804:57;10813:5;10820:7;10848:5;10829:16;:24;10855:5;10804:8;:57::i;:::-;10576:310;10504:388;10415:477;;;:::o;5393:300::-;5492:1;5476:18;;:4;:18;;;5472:86;;5544:1;5517:30;;;;;;;;;;;:::i;:::-;;;;;;;;5472:86;5585:1;5571:16;;:2;:16;;;5567:86;;5639:1;5610:32;;;;;;;;;;;:::i;:::-;;;;;;;;5567:86;5662:24;5670:4;5676:2;5680:5;5662:7;:24::i;:::-;5393:300;;;:::o;7458:208::-;7547:1;7528:21;;:7;:21;;;7524:91;;7601:1;7572:32;;;;;;;;;;;:::i;:::-;;;;;;;;7524:91;7624:35;7640:1;7644:7;7653:5;7624:7;:35::i;:::-;7458:208;;:::o;9701:432::-;9830:1;9813:19;;:5;:19;;;9809:89;;9884:1;9855:32;;;;;;;;;;;:::i;:::-;;;;;;;;9809:89;9930:1;9911:21;;:7;:21;;;9907:90;;9983:1;9955:31;;;;;;;;;;;:::i;:::-;;;;;;;;9907:90;10036:5;10006:11;:18;10018:5;10006:18;;;;;;;;;;;;;;;:27;10025:7;10006:27;;;;;;;;;;;;;;;:35;;;;10055:9;10051:76;;;10101:7;10085:31;;10094:5;10085:31;;;10110:5;10085:31;;;;;;:::i;:::-;;;;;;;;10051:76;9701:432;;;;:::o;6008:1107::-;6113:1;6097:18;;:4;:18;;;6093:540;;6249:5;6233:12;;:21;;;;;;;:::i;:::-;;;;;;;;6093:540;;;6285:19;6307:9;:15;6317:4;6307:15;;;;;;;;;;;;;;;;6285:37;;6354:5;6340:11;:19;6336:115;;;6411:4;6417:11;6430:5;6386:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;6336:115;6603:5;6589:11;:19;6571:9;:15;6581:4;6571:15;;;;;;;;;;;;;;;:37;;;;6271:362;6093:540;6661:1;6647:16;;:2;:16;;;6643:425;;6826:5;6810:12;;:21;;;;;;;;;;;6643:425;;;7038:5;7021:9;:13;7031:2;7021:13;;;;;;;;;;;;;;;;:22;;;;;;;;;;;6643:425;7098:2;7083:25;;7092:4;7083:25;;;7102:5;7083:25;;;;;;:::i;:::-;;;;;;;;6008:1107;;;:::o;7:99:11:-;59:6;93:5;87:12;77:22;;7:99;;;:::o;112:169::-;196:11;230:6;225:3;218:19;270:4;265:3;261:14;246:29;;112:169;;;;:::o;287:139::-;376:6;371:3;366;360:23;417:1;408:6;403:3;399:16;392:27;287:139;;;:::o;432:102::-;473:6;524:2;520:7;515:2;508:5;504:14;500:28;490:38;;432:102;;;:::o;540:377::-;628:3;656:39;689:5;656:39;:::i;:::-;711:71;775:6;770:3;711:71;:::i;:::-;704:78;;791:65;849:6;844:3;837:4;830:5;826:16;791:65;:::i;:::-;881:29;903:6;881:29;:::i;:::-;876:3;872:39;865:46;;632:285;540:377;;;;:::o;923:313::-;1036:4;1074:2;1063:9;1059:18;1051:26;;1123:9;1117:4;1113:20;1109:1;1098:9;1094:17;1087:47;1151:78;1224:4;1215:6;1151:78;:::i;:::-;1143:86;;923:313;;;;:::o;1323:117::-;1432:1;1429;1422:12;1569:126;1606:7;1646:42;1639:5;1635:54;1624:65;;1569:126;;;:::o;1701:96::-;1738:7;1767:24;1785:5;1767:24;:::i;:::-;1756:35;;1701:96;;;:::o;1803:122::-;1876:24;1894:5;1876:24;:::i;:::-;1869:5;1866:35;1856:63;;1915:1;1912;1905:12;1856:63;1803:122;:::o;1931:139::-;1977:5;2015:6;2002:20;1993:29;;2031:33;2058:5;2031:33;:::i;:::-;1931:139;;;;:::o;2076:77::-;2113:7;2142:5;2131:16;;2076:77;;;:::o;2159:122::-;2232:24;2250:5;2232:24;:::i;:::-;2225:5;2222:35;2212:63;;2271:1;2268;2261:12;2212:63;2159:122;:::o;2287:139::-;2333:5;2371:6;2358:20;2349:29;;2387:33;2414:5;2387:33;:::i;:::-;2287:139;;;;:::o;2432:474::-;2500:6;2508;2557:2;2545:9;2536:7;2532:23;2528:32;2525:119;;;2563:79;;:::i;:::-;2525:119;2683:1;2708:53;2753:7;2744:6;2733:9;2729:22;2708:53;:::i;:::-;2698:63;;2654:117;2810:2;2836:53;2881:7;2872:6;2861:9;2857:22;2836:53;:::i;:::-;2826:63;;2781:118;2432:474;;;;;:::o;2912:90::-;2946:7;2989:5;2982:13;2975:21;2964:32;;2912:90;;;:::o;3008:109::-;3089:21;3104:5;3089:21;:::i;:::-;3084:3;3077:34;3008:109;;:::o;3123:210::-;3210:4;3248:2;3237:9;3233:18;3225:26;;3261:65;3323:1;3312:9;3308:17;3299:6;3261:65;:::i;:::-;3123:210;;;;:::o;3339:118::-;3426:24;3444:5;3426:24;:::i;:::-;3421:3;3414:37;3339:118;;:::o;3463:222::-;3556:4;3594:2;3583:9;3579:18;3571:26;;3607:71;3675:1;3664:9;3660:17;3651:6;3607:71;:::i;:::-;3463:222;;;;:::o;3691:619::-;3768:6;3776;3784;3833:2;3821:9;3812:7;3808:23;3804:32;3801:119;;;3839:79;;:::i;:::-;3801:119;3959:1;3984:53;4029:7;4020:6;4009:9;4005:22;3984:53;:::i;:::-;3974:63;;3930:117;4086:2;4112:53;4157:7;4148:6;4137:9;4133:22;4112:53;:::i;:::-;4102:63;;4057:118;4214:2;4240:53;4285:7;4276:6;4265:9;4261:22;4240:53;:::i;:::-;4230:63;;4185:118;3691:619;;;;;:::o;4316:86::-;4351:7;4391:4;4384:5;4380:16;4369:27;;4316:86;;;:::o;4408:112::-;4491:22;4507:5;4491:22;:::i;:::-;4486:3;4479:35;4408:112;;:::o;4526:214::-;4615:4;4653:2;4642:9;4638:18;4630:26;;4666:67;4730:1;4719:9;4715:17;4706:6;4666:67;:::i;:::-;4526:214;;;;:::o;4746:329::-;4805:6;4854:2;4842:9;4833:7;4829:23;4825:32;4822:119;;;4860:79;;:::i;:::-;4822:119;4980:1;5005:53;5050:7;5041:6;5030:9;5026:22;5005:53;:::i;:::-;4995:63;;4951:117;4746:329;;;;:::o;5081:::-;5140:6;5189:2;5177:9;5168:7;5164:23;5160:32;5157:119;;;5195:79;;:::i;:::-;5157:119;5315:1;5340:53;5385:7;5376:6;5365:9;5361:22;5340:53;:::i;:::-;5330:63;;5286:117;5081:329;;;;:::o;5416:474::-;5484:6;5492;5541:2;5529:9;5520:7;5516:23;5512:32;5509:119;;;5547:79;;:::i;:::-;5509:119;5667:1;5692:53;5737:7;5728:6;5717:9;5713:22;5692:53;:::i;:::-;5682:63;;5638:117;5794:2;5820:53;5865:7;5856:6;5845:9;5841:22;5820:53;:::i;:::-;5810:63;;5765:118;5416:474;;;;;:::o;5896:180::-;5944:77;5941:1;5934:88;6041:4;6038:1;6031:15;6065:4;6062:1;6055:15;6082:320;6126:6;6163:1;6157:4;6153:12;6143:22;;6210:1;6204:4;6200:12;6231:18;6221:81;;6287:4;6279:6;6275:17;6265:27;;6221:81;6349:2;6341:6;6338:14;6318:18;6315:38;6312:84;;6368:18;;:::i;:::-;6312:84;6133:269;6082:320;;;:::o;6408:118::-;6495:24;6513:5;6495:24;:::i;:::-;6490:3;6483:37;6408:118;;:::o;6532:442::-;6681:4;6719:2;6708:9;6704:18;6696:26;;6732:71;6800:1;6789:9;6785:17;6776:6;6732:71;:::i;:::-;6813:72;6881:2;6870:9;6866:18;6857:6;6813:72;:::i;:::-;6895;6963:2;6952:9;6948:18;6939:6;6895:72;:::i;:::-;6532:442;;;;;;:::o;6980:222::-;7073:4;7111:2;7100:9;7096:18;7088:26;;7124:71;7192:1;7181:9;7177:17;7168:6;7124:71;:::i;:::-;6980:222;;;;:::o;7208:180::-;7256:77;7253:1;7246:88;7353:4;7350:1;7343:15;7377:4;7374:1;7367:15;7394:191;7434:3;7453:20;7471:1;7453:20;:::i;:::-;7448:25;;7487:20;7505:1;7487:20;:::i;:::-;7482:25;;7530:1;7527;7523:9;7516:16;;7551:3;7548:1;7545:10;7542:36;;;7558:18;;:::i;:::-;7542:36;7394:191;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "755000",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "2829",
								"decimals()": "427",
								"mint(uint256)": "infinite",
								"name()": "infinite",
								"symbol()": "infinite",
								"totalSupply()": "2477",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 118,
									"end": 283,
									"name": "PUSH",
									"source": 8,
									"value": "80"
								},
								{
									"begin": 118,
									"end": 283,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 118,
									"end": 283,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 154,
									"end": 196,
									"name": "CALLVALUE",
									"source": 8
								},
								{
									"begin": 154,
									"end": 196,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 154,
									"end": 196,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 154,
									"end": 196,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 154,
									"end": 196,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 154,
									"end": 196,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 154,
									"end": 196,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 154,
									"end": 196,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 154,
									"end": 196,
									"name": "tag",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 154,
									"end": 196,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 154,
									"end": 196,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 4,
									"value": "B"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 4,
									"value": "526577617264546F6B656E000000000000000000000000000000000000000000"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 4,
									"value": "3"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 4,
									"value": "5257440000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1675,
									"end": 1680,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1667,
									"end": 1672,
									"name": "PUSH",
									"source": 4,
									"value": "3"
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "5"
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "6"
								},
								{
									"begin": 1667,
									"end": 1680,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "tag",
									"source": 4,
									"value": "5"
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1700,
									"end": 1707,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1690,
									"end": 1697,
									"name": "PUSH",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "7"
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "6"
								},
								{
									"begin": 1690,
									"end": 1707,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "tag",
									"source": 4,
									"value": "7"
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 118,
									"end": 283,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "9"
								},
								{
									"begin": 118,
									"end": 283,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 7,
									"end": 106,
									"name": "tag",
									"source": 11,
									"value": "10"
								},
								{
									"begin": 7,
									"end": 106,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 59,
									"end": 65,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 93,
									"end": 98,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 87,
									"end": 99,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 77,
									"end": 99,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 77,
									"end": 99,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 7,
									"end": 106,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 7,
									"end": 106,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 7,
									"end": 106,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 7,
									"end": 106,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 112,
									"end": 292,
									"name": "tag",
									"source": 11,
									"value": "11"
								},
								{
									"begin": 112,
									"end": 292,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 160,
									"end": 237,
									"name": "PUSH",
									"source": 11,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 157,
									"end": 158,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 150,
									"end": 238,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 257,
									"end": 261,
									"name": "PUSH",
									"source": 11,
									"value": "41"
								},
								{
									"begin": 254,
									"end": 255,
									"name": "PUSH",
									"source": 11,
									"value": "4"
								},
								{
									"begin": 247,
									"end": 262,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 281,
									"end": 285,
									"name": "PUSH",
									"source": 11,
									"value": "24"
								},
								{
									"begin": 278,
									"end": 279,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 271,
									"end": 286,
									"name": "REVERT",
									"source": 11
								},
								{
									"begin": 298,
									"end": 478,
									"name": "tag",
									"source": 11,
									"value": "12"
								},
								{
									"begin": 298,
									"end": 478,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 346,
									"end": 423,
									"name": "PUSH",
									"source": 11,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 343,
									"end": 344,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 336,
									"end": 424,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 443,
									"end": 447,
									"name": "PUSH",
									"source": 11,
									"value": "22"
								},
								{
									"begin": 440,
									"end": 441,
									"name": "PUSH",
									"source": 11,
									"value": "4"
								},
								{
									"begin": 433,
									"end": 448,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 467,
									"end": 471,
									"name": "PUSH",
									"source": 11,
									"value": "24"
								},
								{
									"begin": 464,
									"end": 465,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 457,
									"end": 472,
									"name": "REVERT",
									"source": 11
								},
								{
									"begin": 484,
									"end": 804,
									"name": "tag",
									"source": 11,
									"value": "13"
								},
								{
									"begin": 484,
									"end": 804,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 528,
									"end": 534,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 565,
									"end": 566,
									"name": "PUSH",
									"source": 11,
									"value": "2"
								},
								{
									"begin": 559,
									"end": 563,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 555,
									"end": 567,
									"name": "DIV",
									"source": 11
								},
								{
									"begin": 545,
									"end": 567,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 545,
									"end": 567,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 612,
									"end": 613,
									"name": "PUSH",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 606,
									"end": 610,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 602,
									"end": 614,
									"name": "AND",
									"source": 11
								},
								{
									"begin": 633,
									"end": 651,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 623,
									"end": 704,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "35"
								},
								{
									"begin": 623,
									"end": 704,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 689,
									"end": 693,
									"name": "PUSH",
									"source": 11,
									"value": "7F"
								},
								{
									"begin": 681,
									"end": 687,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 677,
									"end": 694,
									"name": "AND",
									"source": 11
								},
								{
									"begin": 667,
									"end": 694,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 667,
									"end": 694,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 623,
									"end": 704,
									"name": "tag",
									"source": 11,
									"value": "35"
								},
								{
									"begin": 623,
									"end": 704,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 751,
									"end": 753,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 743,
									"end": 749,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 740,
									"end": 754,
									"name": "LT",
									"source": 11
								},
								{
									"begin": 720,
									"end": 738,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 717,
									"end": 755,
									"name": "SUB",
									"source": 11
								},
								{
									"begin": 714,
									"end": 798,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "36"
								},
								{
									"begin": 714,
									"end": 798,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 770,
									"end": 788,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "37"
								},
								{
									"begin": 770,
									"end": 788,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "12"
								},
								{
									"begin": 770,
									"end": 788,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 770,
									"end": 788,
									"name": "tag",
									"source": 11,
									"value": "37"
								},
								{
									"begin": 770,
									"end": 788,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 714,
									"end": 798,
									"name": "tag",
									"source": 11,
									"value": "36"
								},
								{
									"begin": 714,
									"end": 798,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 535,
									"end": 804,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 484,
									"end": 804,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 484,
									"end": 804,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 484,
									"end": 804,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 484,
									"end": 804,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 810,
									"end": 951,
									"name": "tag",
									"source": 11,
									"value": "14"
								},
								{
									"begin": 810,
									"end": 951,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 859,
									"end": 863,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 882,
									"end": 885,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 874,
									"end": 885,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 874,
									"end": 885,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 905,
									"end": 908,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 902,
									"end": 903,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 895,
									"end": 909,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 939,
									"end": 943,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 936,
									"end": 937,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 926,
									"end": 944,
									"name": "KECCAK256",
									"source": 11
								},
								{
									"begin": 918,
									"end": 944,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 918,
									"end": 944,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 810,
									"end": 951,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 810,
									"end": 951,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 810,
									"end": 951,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 810,
									"end": 951,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "tag",
									"source": 11,
									"value": "15"
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 994,
									"end": 1000,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 1041,
									"end": 1043,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 1036,
									"end": 1038,
									"name": "PUSH",
									"source": 11,
									"value": "1F"
								},
								{
									"begin": 1029,
									"end": 1034,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 1025,
									"end": 1039,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 1021,
									"end": 1044,
									"name": "DIV",
									"source": 11
								},
								{
									"begin": 1011,
									"end": 1044,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 1011,
									"end": 1044,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 957,
									"end": 1050,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "tag",
									"source": 11,
									"value": "16"
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1100,
									"end": 1108,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 1150,
									"end": 1155,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 1144,
									"end": 1148,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 1140,
									"end": 1156,
									"name": "SHL",
									"source": 11
								},
								{
									"begin": 1119,
									"end": 1156,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 1119,
									"end": 1156,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "SWAP3",
									"source": 11
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1056,
									"end": 1163,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "tag",
									"source": 11,
									"value": "17"
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1238,
									"end": 1244,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 1288,
									"end": 1289,
									"name": "PUSH",
									"source": 11,
									"value": "8"
								},
								{
									"begin": 1276,
									"end": 1286,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 1272,
									"end": 1290,
									"name": "MUL",
									"source": 11
								},
								{
									"begin": 1311,
									"end": 1408,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "42"
								},
								{
									"begin": 1341,
									"end": 1407,
									"name": "PUSH",
									"source": 11,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1330,
									"end": 1339,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 1311,
									"end": 1408,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "16"
								},
								{
									"begin": 1311,
									"end": 1408,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 1311,
									"end": 1408,
									"name": "tag",
									"source": 11,
									"value": "42"
								},
								{
									"begin": 1311,
									"end": 1408,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1429,
									"end": 1468,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "43"
								},
								{
									"begin": 1459,
									"end": 1467,
									"name": "DUP7",
									"source": 11
								},
								{
									"begin": 1448,
									"end": 1457,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 1429,
									"end": 1468,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "16"
								},
								{
									"begin": 1429,
									"end": 1468,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 1429,
									"end": 1468,
									"name": "tag",
									"source": 11,
									"value": "43"
								},
								{
									"begin": 1429,
									"end": 1468,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1417,
									"end": 1468,
									"name": "SWAP6",
									"source": 11
								},
								{
									"begin": 1417,
									"end": 1468,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1501,
									"end": 1505,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 1497,
									"end": 1506,
									"name": "NOT",
									"source": 11
								},
								{
									"begin": 1490,
									"end": 1495,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 1486,
									"end": 1507,
									"name": "AND",
									"source": 11
								},
								{
									"begin": 1477,
									"end": 1507,
									"name": "SWAP4",
									"source": 11
								},
								{
									"begin": 1477,
									"end": 1507,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1550,
									"end": 1554,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 1540,
									"end": 1548,
									"name": "DUP7",
									"source": 11
								},
								{
									"begin": 1536,
									"end": 1555,
									"name": "AND",
									"source": 11
								},
								{
									"begin": 1529,
									"end": 1534,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 1526,
									"end": 1556,
									"name": "OR",
									"source": 11
								},
								{
									"begin": 1516,
									"end": 1556,
									"name": "SWAP3",
									"source": 11
								},
								{
									"begin": 1516,
									"end": 1556,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1245,
									"end": 1562,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1245,
									"end": 1562,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "SWAP4",
									"source": 11
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "SWAP3",
									"source": 11
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1169,
									"end": 1562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "tag",
									"source": 11,
									"value": "18"
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1605,
									"end": 1612,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 1634,
									"end": 1639,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 1623,
									"end": 1639,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 1623,
									"end": 1639,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1568,
									"end": 1645,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "tag",
									"source": 11,
									"value": "19"
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1679,
									"end": 1682,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 1700,
									"end": 1705,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 1693,
									"end": 1705,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 1693,
									"end": 1705,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1651,
									"end": 1711,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "tag",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1767,
									"end": 1776,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 1800,
									"end": 1853,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "47"
								},
								{
									"begin": 1818,
									"end": 1852,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "48"
								},
								{
									"begin": 1827,
									"end": 1851,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "49"
								},
								{
									"begin": 1845,
									"end": 1850,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 1827,
									"end": 1851,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "18"
								},
								{
									"begin": 1827,
									"end": 1851,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 1827,
									"end": 1851,
									"name": "tag",
									"source": 11,
									"value": "49"
								},
								{
									"begin": 1827,
									"end": 1851,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1818,
									"end": 1852,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "19"
								},
								{
									"begin": 1818,
									"end": 1852,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 1818,
									"end": 1852,
									"name": "tag",
									"source": 11,
									"value": "48"
								},
								{
									"begin": 1818,
									"end": 1852,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1800,
									"end": 1853,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "18"
								},
								{
									"begin": 1800,
									"end": 1853,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 1800,
									"end": 1853,
									"name": "tag",
									"source": 11,
									"value": "47"
								},
								{
									"begin": 1800,
									"end": 1853,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1787,
									"end": 1853,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 1787,
									"end": 1853,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1717,
									"end": 1859,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "tag",
									"source": 11,
									"value": "21"
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1908,
									"end": 1911,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 1929,
									"end": 1934,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 1922,
									"end": 1934,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 1922,
									"end": 1934,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1865,
									"end": 1940,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "tag",
									"source": 11,
									"value": "22"
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 2056,
									"end": 2095,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "52"
								},
								{
									"begin": 2087,
									"end": 2094,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 2056,
									"end": 2095,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 2056,
									"end": 2095,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 2056,
									"end": 2095,
									"name": "tag",
									"source": 11,
									"value": "52"
								},
								{
									"begin": 2056,
									"end": 2095,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 2117,
									"end": 2208,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "53"
								},
								{
									"begin": 2166,
									"end": 2207,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "54"
								},
								{
									"begin": 2190,
									"end": 2206,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 2166,
									"end": 2207,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "21"
								},
								{
									"begin": 2166,
									"end": 2207,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 2166,
									"end": 2207,
									"name": "tag",
									"source": 11,
									"value": "54"
								},
								{
									"begin": 2166,
									"end": 2207,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 2158,
									"end": 2164,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 2151,
									"end": 2155,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 2145,
									"end": 2156,
									"name": "SLOAD",
									"source": 11
								},
								{
									"begin": 2117,
									"end": 2208,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "17"
								},
								{
									"begin": 2117,
									"end": 2208,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 2117,
									"end": 2208,
									"name": "tag",
									"source": 11,
									"value": "53"
								},
								{
									"begin": 2117,
									"end": 2208,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 2111,
									"end": 2115,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 2104,
									"end": 2209,
									"name": "SSTORE",
									"source": 11
								},
								{
									"begin": 2022,
									"end": 2215,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1946,
									"end": 2215,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 2221,
									"end": 2294,
									"name": "tag",
									"source": 11,
									"value": "23"
								},
								{
									"begin": 2221,
									"end": 2294,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 2266,
									"end": 2269,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 2221,
									"end": 2294,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 2221,
									"end": 2294,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 2300,
									"end": 2489,
									"name": "tag",
									"source": 11,
									"value": "24"
								},
								{
									"begin": 2300,
									"end": 2489,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 2377,
									"end": 2409,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "57"
								},
								{
									"begin": 2377,
									"end": 2409,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "23"
								},
								{
									"begin": 2377,
									"end": 2409,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 2377,
									"end": 2409,
									"name": "tag",
									"source": 11,
									"value": "57"
								},
								{
									"begin": 2377,
									"end": 2409,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 2418,
									"end": 2483,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "58"
								},
								{
									"begin": 2476,
									"end": 2482,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 2468,
									"end": 2474,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 2462,
									"end": 2466,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 2418,
									"end": 2483,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "22"
								},
								{
									"begin": 2418,
									"end": 2483,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 2418,
									"end": 2483,
									"name": "tag",
									"source": 11,
									"value": "58"
								},
								{
									"begin": 2418,
									"end": 2483,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 2353,
									"end": 2489,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 2300,
									"end": 2489,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 2300,
									"end": 2489,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 2300,
									"end": 2489,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 2495,
									"end": 2681,
									"name": "tag",
									"source": 11,
									"value": "25"
								},
								{
									"begin": 2495,
									"end": 2681,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "tag",
									"source": 11,
									"value": "60"
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 2572,
									"end": 2575,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 2565,
									"end": 2570,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 2562,
									"end": 2576,
									"name": "LT",
									"source": 11
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "62"
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 2626,
									"end": 2665,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "63"
								},
								{
									"begin": 2663,
									"end": 2664,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 2656,
									"end": 2661,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 2626,
									"end": 2665,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "24"
								},
								{
									"begin": 2626,
									"end": 2665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 2626,
									"end": 2665,
									"name": "tag",
									"source": 11,
									"value": "63"
								},
								{
									"begin": 2626,
									"end": 2665,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 2599,
									"end": 2600,
									"name": "PUSH",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 2592,
									"end": 2597,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 2588,
									"end": 2601,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 2579,
									"end": 2601,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 2579,
									"end": 2601,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "60"
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "tag",
									"source": 11,
									"value": "62"
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 2495,
									"end": 2681,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 2495,
									"end": 2681,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 2495,
									"end": 2681,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "tag",
									"source": 11,
									"value": "26"
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 2788,
									"end": 2790,
									"name": "PUSH",
									"source": 11,
									"value": "1F"
								},
								{
									"begin": 2783,
									"end": 2786,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 2780,
									"end": 2791,
									"name": "GT",
									"source": 11
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "65"
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 2822,
									"end": 2860,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "66"
								},
								{
									"begin": 2854,
									"end": 2859,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 2822,
									"end": 2860,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "14"
								},
								{
									"begin": 2822,
									"end": 2860,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 2822,
									"end": 2860,
									"name": "tag",
									"source": 11,
									"value": "66"
								},
								{
									"begin": 2822,
									"end": 2860,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 2906,
									"end": 2935,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "67"
								},
								{
									"begin": 2924,
									"end": 2934,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 2906,
									"end": 2935,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "15"
								},
								{
									"begin": 2906,
									"end": 2935,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 2906,
									"end": 2935,
									"name": "tag",
									"source": 11,
									"value": "67"
								},
								{
									"begin": 2906,
									"end": 2935,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 2896,
									"end": 2904,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 2892,
									"end": 2936,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 3089,
									"end": 3091,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 3077,
									"end": 3087,
									"name": "DUP6",
									"source": 11
								},
								{
									"begin": 3074,
									"end": 3092,
									"name": "LT",
									"source": 11
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "68"
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 3110,
									"end": 3118,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 3095,
									"end": 3118,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 3095,
									"end": 3118,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "tag",
									"source": 11,
									"value": "68"
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 3133,
									"end": 3213,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "69"
								},
								{
									"begin": 3189,
									"end": 3211,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "70"
								},
								{
									"begin": 3207,
									"end": 3210,
									"name": "DUP6",
									"source": 11
								},
								{
									"begin": 3189,
									"end": 3211,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "15"
								},
								{
									"begin": 3189,
									"end": 3211,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 3189,
									"end": 3211,
									"name": "tag",
									"source": 11,
									"value": "70"
								},
								{
									"begin": 3189,
									"end": 3211,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 3179,
									"end": 3187,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 3175,
									"end": 3212,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 3162,
									"end": 3173,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 3133,
									"end": 3213,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "25"
								},
								{
									"begin": 3133,
									"end": 3213,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 3133,
									"end": 3213,
									"name": "tag",
									"source": 11,
									"value": "69"
								},
								{
									"begin": 3133,
									"end": 3213,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 2792,
									"end": 3223,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 2792,
									"end": 3223,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "tag",
									"source": 11,
									"value": "65"
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 2687,
									"end": 3230,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "tag",
									"source": 11,
									"value": "27"
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 3290,
									"end": 3298,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 3340,
									"end": 3345,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 3334,
									"end": 3338,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 3330,
									"end": 3346,
									"name": "SHR",
									"source": 11
								},
								{
									"begin": 3309,
									"end": 3346,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 3309,
									"end": 3346,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "SWAP3",
									"source": 11
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 3236,
									"end": 3353,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "tag",
									"source": 11,
									"value": "28"
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 3403,
									"end": 3409,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 3436,
									"end": 3487,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "73"
								},
								{
									"begin": 3484,
									"end": 3485,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 3480,
									"end": 3486,
									"name": "NOT",
									"source": 11
								},
								{
									"begin": 3472,
									"end": 3477,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 3469,
									"end": 3470,
									"name": "PUSH",
									"source": 11,
									"value": "8"
								},
								{
									"begin": 3465,
									"end": 3478,
									"name": "MUL",
									"source": 11
								},
								{
									"begin": 3436,
									"end": 3487,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "27"
								},
								{
									"begin": 3436,
									"end": 3487,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 3436,
									"end": 3487,
									"name": "tag",
									"source": 11,
									"value": "73"
								},
								{
									"begin": 3436,
									"end": 3487,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 3432,
									"end": 3488,
									"name": "NOT",
									"source": 11
								},
								{
									"begin": 3517,
									"end": 3521,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 3511,
									"end": 3515,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 3507,
									"end": 3522,
									"name": "AND",
									"source": 11
								},
								{
									"begin": 3497,
									"end": 3522,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 3497,
									"end": 3522,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 3410,
									"end": 3528,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "SWAP3",
									"source": 11
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 3359,
									"end": 3528,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "tag",
									"source": 11,
									"value": "29"
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 3609,
									"end": 3613,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 3755,
									"end": 3784,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "75"
								},
								{
									"begin": 3780,
									"end": 3783,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 3774,
									"end": 3778,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 3755,
									"end": 3784,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "28"
								},
								{
									"begin": 3755,
									"end": 3784,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 3755,
									"end": 3784,
									"name": "tag",
									"source": 11,
									"value": "75"
								},
								{
									"begin": 3755,
									"end": 3784,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 3747,
									"end": 3784,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 3747,
									"end": 3784,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 3817,
									"end": 3820,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 3814,
									"end": 3815,
									"name": "PUSH",
									"source": 11,
									"value": "2"
								},
								{
									"begin": 3810,
									"end": 3821,
									"name": "MUL",
									"source": 11
								},
								{
									"begin": 3804,
									"end": 3808,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 3801,
									"end": 3822,
									"name": "OR",
									"source": 11
								},
								{
									"begin": 3793,
									"end": 3822,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 3793,
									"end": 3822,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "SWAP3",
									"source": 11
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 3533,
									"end": 3828,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 3833,
									"end": 5228,
									"name": "tag",
									"source": 11,
									"value": "6"
								},
								{
									"begin": 3833,
									"end": 5228,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 3950,
									"end": 3987,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "77"
								},
								{
									"begin": 3983,
									"end": 3986,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 3950,
									"end": 3987,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "10"
								},
								{
									"begin": 3950,
									"end": 3987,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 3950,
									"end": 3987,
									"name": "tag",
									"source": 11,
									"value": "77"
								},
								{
									"begin": 3950,
									"end": 3987,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 4052,
									"end": 4070,
									"name": "PUSH",
									"source": 11,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 4044,
									"end": 4050,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 4041,
									"end": 4071,
									"name": "GT",
									"source": 11
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "78"
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 4074,
									"end": 4092,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "79"
								},
								{
									"begin": 4074,
									"end": 4092,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "11"
								},
								{
									"begin": 4074,
									"end": 4092,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 4074,
									"end": 4092,
									"name": "tag",
									"source": 11,
									"value": "79"
								},
								{
									"begin": 4074,
									"end": 4092,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "tag",
									"source": 11,
									"value": "78"
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 4118,
									"end": 4156,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "80"
								},
								{
									"begin": 4150,
									"end": 4154,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 4144,
									"end": 4155,
									"name": "SLOAD",
									"source": 11
								},
								{
									"begin": 4118,
									"end": 4156,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "13"
								},
								{
									"begin": 4118,
									"end": 4156,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 4118,
									"end": 4156,
									"name": "tag",
									"source": 11,
									"value": "80"
								},
								{
									"begin": 4118,
									"end": 4156,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 4203,
									"end": 4270,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "81"
								},
								{
									"begin": 4263,
									"end": 4269,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 4255,
									"end": 4261,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 4249,
									"end": 4253,
									"name": "DUP6",
									"source": 11
								},
								{
									"begin": 4203,
									"end": 4270,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "26"
								},
								{
									"begin": 4203,
									"end": 4270,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 4203,
									"end": 4270,
									"name": "tag",
									"source": 11,
									"value": "81"
								},
								{
									"begin": 4203,
									"end": 4270,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 4297,
									"end": 4298,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 4321,
									"end": 4325,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 4308,
									"end": 4325,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 4308,
									"end": 4325,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 4353,
									"end": 4355,
									"name": "PUSH",
									"source": 11,
									"value": "1F"
								},
								{
									"begin": 4345,
									"end": 4351,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 4342,
									"end": 4356,
									"name": "GT",
									"source": 11
								},
								{
									"begin": 4370,
									"end": 4371,
									"name": "PUSH",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "EQ",
									"source": 11
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "83"
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 5027,
									"end": 5028,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 5044,
									"end": 5050,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "84"
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 5093,
									"end": 5102,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 5088,
									"end": 5091,
									"name": "DUP8",
									"source": 11
								},
								{
									"begin": 5084,
									"end": 5103,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 5078,
									"end": 5104,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 5069,
									"end": 5104,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 5069,
									"end": 5104,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "tag",
									"source": 11,
									"value": "84"
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 5144,
									"end": 5211,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "85"
								},
								{
									"begin": 5204,
									"end": 5210,
									"name": "DUP6",
									"source": 11
								},
								{
									"begin": 5197,
									"end": 5202,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 5144,
									"end": 5211,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "29"
								},
								{
									"begin": 5144,
									"end": 5211,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 5144,
									"end": 5211,
									"name": "tag",
									"source": 11,
									"value": "85"
								},
								{
									"begin": 5144,
									"end": 5211,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 5138,
									"end": 5142,
									"name": "DUP7",
									"source": 11
								},
								{
									"begin": 5131,
									"end": 5212,
									"name": "SSTORE",
									"source": 11
								},
								{
									"begin": 5000,
									"end": 5222,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "82"
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "tag",
									"source": 11,
									"value": "83"
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 4417,
									"end": 4421,
									"name": "PUSH",
									"source": 11,
									"value": "1F"
								},
								{
									"begin": 4413,
									"end": 4422,
									"name": "NOT",
									"source": 11
								},
								{
									"begin": 4405,
									"end": 4411,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 4401,
									"end": 4423,
									"name": "AND",
									"source": 11
								},
								{
									"begin": 4451,
									"end": 4488,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "86"
								},
								{
									"begin": 4483,
									"end": 4487,
									"name": "DUP7",
									"source": 11
								},
								{
									"begin": 4451,
									"end": 4488,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "14"
								},
								{
									"begin": 4451,
									"end": 4488,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 4451,
									"end": 4488,
									"name": "tag",
									"source": 11,
									"value": "86"
								},
								{
									"begin": 4451,
									"end": 4488,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 4510,
									"end": 4511,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "tag",
									"source": 11,
									"value": "87"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 4538,
									"end": 4545,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 4535,
									"end": 4536,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 4532,
									"end": 4546,
									"name": "LT",
									"source": 11
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "89"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 4617,
									"end": 4626,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 4612,
									"end": 4615,
									"name": "DUP10",
									"source": 11
								},
								{
									"begin": 4608,
									"end": 4627,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 4602,
									"end": 4628,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 4594,
									"end": 4600,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 4587,
									"end": 4629,
									"name": "SSTORE",
									"source": 11
								},
								{
									"begin": 4668,
									"end": 4669,
									"name": "PUSH",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 4660,
									"end": 4666,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 4656,
									"end": 4670,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 4646,
									"end": 4670,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 4646,
									"end": 4670,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 4715,
									"end": 4717,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 4704,
									"end": 4713,
									"name": "DUP6",
									"source": 11
								},
								{
									"begin": 4700,
									"end": 4718,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 4687,
									"end": 4718,
									"name": "SWAP5",
									"source": 11
								},
								{
									"begin": 4687,
									"end": 4718,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 4561,
									"end": 4565,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 4558,
									"end": 4559,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 4554,
									"end": 4566,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 4549,
									"end": 4566,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 4549,
									"end": 4566,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "87"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "tag",
									"source": 11,
									"value": "89"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 4760,
									"end": 4766,
									"name": "DUP7",
									"source": 11
								},
								{
									"begin": 4751,
									"end": 4758,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 4748,
									"end": 4767,
									"name": "LT",
									"source": 11
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "90"
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 4818,
									"end": 4827,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 4813,
									"end": 4816,
									"name": "DUP10",
									"source": 11
								},
								{
									"begin": 4809,
									"end": 4828,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 4803,
									"end": 4829,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 4861,
									"end": 4909,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "91"
								},
								{
									"begin": 4903,
									"end": 4907,
									"name": "PUSH",
									"source": 11,
									"value": "1F"
								},
								{
									"begin": 4895,
									"end": 4901,
									"name": "DUP10",
									"source": 11
								},
								{
									"begin": 4891,
									"end": 4908,
									"name": "AND",
									"source": 11
								},
								{
									"begin": 4880,
									"end": 4889,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 4861,
									"end": 4909,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "28"
								},
								{
									"begin": 4861,
									"end": 4909,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 4861,
									"end": 4909,
									"name": "tag",
									"source": 11,
									"value": "91"
								},
								{
									"begin": 4861,
									"end": 4909,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 4853,
									"end": 4859,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 4846,
									"end": 4910,
									"name": "SSTORE",
									"source": 11
								},
								{
									"begin": 4768,
									"end": 4924,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "tag",
									"source": 11,
									"value": "90"
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 4970,
									"end": 4971,
									"name": "PUSH",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 4966,
									"end": 4967,
									"name": "PUSH",
									"source": 11,
									"value": "2"
								},
								{
									"begin": 4958,
									"end": 4964,
									"name": "DUP9",
									"source": 11
								},
								{
									"begin": 4954,
									"end": 4968,
									"name": "MUL",
									"source": 11
								},
								{
									"begin": 4950,
									"end": 4972,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 4944,
									"end": 4948,
									"name": "DUP9",
									"source": 11
								},
								{
									"begin": 4937,
									"end": 4973,
									"name": "SSTORE",
									"source": 11
								},
								{
									"begin": 4372,
									"end": 4983,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 4372,
									"end": 4983,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 4372,
									"end": 4983,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "tag",
									"source": 11,
									"value": "82"
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 3925,
									"end": 5228,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 3925,
									"end": 5228,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 3925,
									"end": 5228,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 3833,
									"end": 5228,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 3833,
									"end": 5228,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 3833,
									"end": 5228,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 118,
									"end": 283,
									"name": "tag",
									"source": 8,
									"value": "9"
								},
								{
									"begin": 118,
									"end": 283,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 118,
									"end": 283,
									"name": "PUSH #[$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 118,
									"end": 283,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 118,
									"end": 283,
									"name": "PUSH [$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 118,
									"end": 283,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 118,
									"end": 283,
									"name": "CODECOPY",
									"source": 8
								},
								{
									"begin": 118,
									"end": 283,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 118,
									"end": 283,
									"name": "RETURN",
									"source": 8
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212202e841070bcf6e134e197909d0be916dc2c79804eccb9bb2228d245e657b0483264736f6c634300081a0033",
									".code": [
										{
											"begin": 118,
											"end": 283,
											"name": "PUSH",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 118,
											"end": 283,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 118,
											"end": 283,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 118,
											"end": 283,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 118,
											"end": 283,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 118,
											"end": 283,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 118,
											"end": 283,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 118,
											"end": 283,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 118,
											"end": 283,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 118,
											"end": 283,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 118,
											"end": 283,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 118,
											"end": 283,
											"name": "tag",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 118,
											"end": 283,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 118,
											"end": 283,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 118,
											"end": 283,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 118,
											"end": 283,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 118,
											"end": 283,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 118,
											"end": 283,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 118,
											"end": 283,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 118,
											"end": 283,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 118,
											"end": 283,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 118,
											"end": 283,
											"name": "PUSH",
											"source": 8,
											"value": "E0"
										},
										{
											"begin": 118,
											"end": 283,
											"name": "SHR",
											"source": 8
										},
										{
											"begin": 118,
											"end": 283,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 118,
											"end": 283,
											"name": "PUSH",
											"source": 8,
											"value": "70A08231"
										},
										{
											"begin": 118,
											"end": 283,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 118,
											"end": 283,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "13"
										},
										{
											"begin": 118,
											"end": 283,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 118,
											"end": 283,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 118,
											"end": 283,
											"name": "PUSH",
											"source": 8,
											"value": "70A08231"
										},
										{
											"begin": 118,
											"end": 283,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 118,
											"end": 283,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "8"
										},
										{
											"begin": 118,
											"end": 283,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 118,
											"end": 283,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 118,
											"end": 283,
											"name": "PUSH",
											"source": 8,
											"value": "95D89B41"
										},
										{
											"begin": 118,
											"end": 283,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 118,
											"end": 283,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "9"
										},
										{
											"begin": 118,
											"end": 283,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 118,
											"end": 283,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 118,
											"end": 283,
											"name": "PUSH",
											"source": 8,
											"value": "A0712D68"
										},
										{
											"begin": 118,
											"end": 283,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 118,
											"end": 283,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "10"
										},
										{
											"begin": 118,
											"end": 283,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 118,
											"end": 283,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 118,
											"end": 283,
											"name": "PUSH",
											"source": 8,
											"value": "A9059CBB"
										},
										{
											"begin": 118,
											"end": 283,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 118,
											"end": 283,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "11"
										},
										{
											"begin": 118,
											"end": 283,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 118,
											"end": 283,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 118,
											"end": 283,
											"name": "PUSH",
											"source": 8,
											"value": "DD62ED3E"
										},
										{
											"begin": 118,
											"end": 283,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 118,
											"end": 283,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "12"
										},
										{
											"begin": 118,
											"end": 283,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 118,
											"end": 283,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 118,
											"end": 283,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 118,
											"end": 283,
											"name": "tag",
											"source": 8,
											"value": "13"
										},
										{
											"begin": 118,
											"end": 283,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 118,
											"end": 283,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 118,
											"end": 283,
											"name": "PUSH",
											"source": 8,
											"value": "6FDDE03"
										},
										{
											"begin": 118,
											"end": 283,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 118,
											"end": 283,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 118,
											"end": 283,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 118,
											"end": 283,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 118,
											"end": 283,
											"name": "PUSH",
											"source": 8,
											"value": "95EA7B3"
										},
										{
											"begin": 118,
											"end": 283,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 118,
											"end": 283,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 118,
											"end": 283,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 118,
											"end": 283,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 118,
											"end": 283,
											"name": "PUSH",
											"source": 8,
											"value": "18160DDD"
										},
										{
											"begin": 118,
											"end": 283,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 118,
											"end": 283,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "5"
										},
										{
											"begin": 118,
											"end": 283,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 118,
											"end": 283,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 118,
											"end": 283,
											"name": "PUSH",
											"source": 8,
											"value": "23B872DD"
										},
										{
											"begin": 118,
											"end": 283,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 118,
											"end": 283,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "6"
										},
										{
											"begin": 118,
											"end": 283,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 118,
											"end": 283,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 118,
											"end": 283,
											"name": "PUSH",
											"source": 8,
											"value": "313CE567"
										},
										{
											"begin": 118,
											"end": 283,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 118,
											"end": 283,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "7"
										},
										{
											"begin": 118,
											"end": 283,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 118,
											"end": 283,
											"name": "tag",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 118,
											"end": 283,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 118,
											"end": 283,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 118,
											"end": 283,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 118,
											"end": 283,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "tag",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "14"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "15"
										},
										{
											"begin": 1779,
											"end": 1868,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "tag",
											"source": 4,
											"value": "14"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "16"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "17"
										},
										{
											"begin": 1779,
											"end": 1868,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "tag",
											"source": 4,
											"value": "16"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "tag",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "18"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "19"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3998,
											"end": 4184,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "tag",
											"source": 4,
											"value": "19"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "21"
										},
										{
											"begin": 3998,
											"end": 4184,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "tag",
											"source": 4,
											"value": "18"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "22"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "23"
										},
										{
											"begin": 3998,
											"end": 4184,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "tag",
											"source": 4,
											"value": "22"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "tag",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "25"
										},
										{
											"begin": 2849,
											"end": 2946,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "tag",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "26"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "27"
										},
										{
											"begin": 2849,
											"end": 2946,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "tag",
											"source": 4,
											"value": "26"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "tag",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "28"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "29"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "30"
										},
										{
											"begin": 4776,
											"end": 5020,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "tag",
											"source": 4,
											"value": "29"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "31"
										},
										{
											"begin": 4776,
											"end": 5020,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "tag",
											"source": 4,
											"value": "28"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "32"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "23"
										},
										{
											"begin": 4776,
											"end": 5020,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "tag",
											"source": 4,
											"value": "32"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "tag",
											"source": 4,
											"value": "7"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "33"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "34"
										},
										{
											"begin": 2707,
											"end": 2789,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "tag",
											"source": 4,
											"value": "33"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "35"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "36"
										},
										{
											"begin": 2707,
											"end": 2789,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "tag",
											"source": 4,
											"value": "35"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "tag",
											"source": 4,
											"value": "8"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "37"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "38"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "39"
										},
										{
											"begin": 3004,
											"end": 3120,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "tag",
											"source": 4,
											"value": "38"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3004,
											"end": 3120,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "tag",
											"source": 4,
											"value": "37"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "41"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "27"
										},
										{
											"begin": 3004,
											"end": 3120,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "tag",
											"source": 4,
											"value": "41"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "tag",
											"source": 4,
											"value": "9"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "42"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "43"
										},
										{
											"begin": 1981,
											"end": 2074,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "tag",
											"source": 4,
											"value": "42"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "17"
										},
										{
											"begin": 1981,
											"end": 2074,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "tag",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 204,
											"end": 280,
											"name": "tag",
											"source": 8,
											"value": "10"
										},
										{
											"begin": 204,
											"end": 280,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 204,
											"end": 280,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "45"
										},
										{
											"begin": 204,
											"end": 280,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 204,
											"end": 280,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 204,
											"end": 280,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 204,
											"end": 280,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 204,
											"end": 280,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 204,
											"end": 280,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 204,
											"end": 280,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 204,
											"end": 280,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "46"
										},
										{
											"begin": 204,
											"end": 280,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 204,
											"end": 280,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 204,
											"end": 280,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "47"
										},
										{
											"begin": 204,
											"end": 280,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 204,
											"end": 280,
											"name": "tag",
											"source": 8,
											"value": "46"
										},
										{
											"begin": 204,
											"end": 280,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 204,
											"end": 280,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "48"
										},
										{
											"begin": 204,
											"end": 280,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 204,
											"end": 280,
											"name": "tag",
											"source": 8,
											"value": "45"
										},
										{
											"begin": 204,
											"end": 280,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 204,
											"end": 280,
											"name": "STOP",
											"source": 8
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "tag",
											"source": 4,
											"value": "11"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "49"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "50"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3315,
											"end": 3493,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "tag",
											"source": 4,
											"value": "50"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "51"
										},
										{
											"begin": 3315,
											"end": 3493,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "tag",
											"source": 4,
											"value": "49"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "52"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "23"
										},
										{
											"begin": 3315,
											"end": 3493,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "tag",
											"source": 4,
											"value": "52"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "tag",
											"source": 4,
											"value": "12"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "53"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "54"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "55"
										},
										{
											"begin": 3551,
											"end": 3691,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "tag",
											"source": 4,
											"value": "54"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "56"
										},
										{
											"begin": 3551,
											"end": 3691,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "tag",
											"source": 4,
											"value": "53"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "57"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "27"
										},
										{
											"begin": 3551,
											"end": 3691,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "tag",
											"source": 4,
											"value": "57"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "tag",
											"source": 4,
											"value": "15"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1824,
											"end": 1837,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 1856,
											"end": 1861,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "59"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 1849,
											"end": 1861,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "tag",
											"source": 4,
											"value": "59"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "61"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 1849,
											"end": 1861,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "tag",
											"source": 4,
											"value": "61"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "62"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "63"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "62"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "tag",
											"source": 4,
											"value": "63"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "tag",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "tag",
											"source": 4,
											"value": "62"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1779,
											"end": 1868,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "tag",
											"source": 4,
											"value": "21"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4071,
											"end": 4075,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4087,
											"end": 4100,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4103,
											"end": 4115,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "66"
										},
										{
											"begin": 4103,
											"end": 4113,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "67"
										},
										{
											"begin": 4103,
											"end": 4115,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4103,
											"end": 4115,
											"name": "tag",
											"source": 4,
											"value": "66"
										},
										{
											"begin": 4103,
											"end": 4115,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4087,
											"end": 4115,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4087,
											"end": 4115,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4125,
											"end": 4156,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "68"
										},
										{
											"begin": 4134,
											"end": 4139,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4141,
											"end": 4148,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 4150,
											"end": 4155,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 4125,
											"end": 4133,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "69"
										},
										{
											"begin": 4125,
											"end": 4156,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4125,
											"end": 4156,
											"name": "tag",
											"source": 4,
											"value": "68"
										},
										{
											"begin": 4125,
											"end": 4156,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4173,
											"end": 4177,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 4166,
											"end": 4177,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4166,
											"end": 4177,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4166,
											"end": 4177,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3998,
											"end": 4184,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "tag",
											"source": 4,
											"value": "25"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2901,
											"end": 2908,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2927,
											"end": 2939,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 2927,
											"end": 2939,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2920,
											"end": 2939,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2920,
											"end": 2939,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2849,
											"end": 2946,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "tag",
											"source": 4,
											"value": "31"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4863,
											"end": 4867,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4879,
											"end": 4894,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4897,
											"end": 4909,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "72"
										},
										{
											"begin": 4897,
											"end": 4907,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "67"
										},
										{
											"begin": 4897,
											"end": 4909,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4897,
											"end": 4909,
											"name": "tag",
											"source": 4,
											"value": "72"
										},
										{
											"begin": 4897,
											"end": 4909,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4879,
											"end": 4909,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4879,
											"end": 4909,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4919,
											"end": 4956,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "73"
										},
										{
											"begin": 4935,
											"end": 4939,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 4941,
											"end": 4948,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4950,
											"end": 4955,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 4919,
											"end": 4934,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "74"
										},
										{
											"begin": 4919,
											"end": 4956,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4919,
											"end": 4956,
											"name": "tag",
											"source": 4,
											"value": "73"
										},
										{
											"begin": 4919,
											"end": 4956,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4966,
											"end": 4992,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "75"
										},
										{
											"begin": 4976,
											"end": 4980,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 4982,
											"end": 4984,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 4986,
											"end": 4991,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 4966,
											"end": 4975,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "76"
										},
										{
											"begin": 4966,
											"end": 4992,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4966,
											"end": 4992,
											"name": "tag",
											"source": 4,
											"value": "75"
										},
										{
											"begin": 4966,
											"end": 4992,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5009,
											"end": 5013,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 5002,
											"end": 5013,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5002,
											"end": 5013,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5002,
											"end": 5013,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4776,
											"end": 5020,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "tag",
											"source": 4,
											"value": "34"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2756,
											"end": 2761,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2780,
											"end": 2782,
											"name": "PUSH",
											"source": 4,
											"value": "12"
										},
										{
											"begin": 2773,
											"end": 2782,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2773,
											"end": 2782,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2707,
											"end": 2789,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "tag",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3069,
											"end": 3076,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3095,
											"end": 3104,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3105,
											"end": 3112,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 3088,
											"end": 3113,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3088,
											"end": 3113,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3004,
											"end": 3120,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "tag",
											"source": 4,
											"value": "43"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2028,
											"end": 2041,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 2060,
											"end": 2067,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 2053,
											"end": 2067,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "tag",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "81"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 2053,
											"end": 2067,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "tag",
											"source": 4,
											"value": "81"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "82"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "83"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "82"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "tag",
											"source": 4,
											"value": "83"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "tag",
											"source": 4,
											"value": "84"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "84"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "tag",
											"source": 4,
											"value": "82"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1981,
											"end": 2074,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 204,
											"end": 280,
											"name": "tag",
											"source": 8,
											"value": "48"
										},
										{
											"begin": 204,
											"end": 280,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 248,
											"end": 272,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "86"
										},
										{
											"begin": 254,
											"end": 264,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 265,
											"end": 271,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 248,
											"end": 253,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "87"
										},
										{
											"begin": 248,
											"end": 272,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 248,
											"end": 272,
											"name": "tag",
											"source": 8,
											"value": "86"
										},
										{
											"begin": 248,
											"end": 272,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 204,
											"end": 280,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 204,
											"end": 280,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "tag",
											"source": 4,
											"value": "51"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3384,
											"end": 3388,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3400,
											"end": 3413,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3416,
											"end": 3428,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "89"
										},
										{
											"begin": 3416,
											"end": 3426,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "67"
										},
										{
											"begin": 3416,
											"end": 3428,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3416,
											"end": 3428,
											"name": "tag",
											"source": 4,
											"value": "89"
										},
										{
											"begin": 3416,
											"end": 3428,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3400,
											"end": 3428,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3400,
											"end": 3428,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3438,
											"end": 3465,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "90"
										},
										{
											"begin": 3448,
											"end": 3453,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3455,
											"end": 3457,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 3459,
											"end": 3464,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 3438,
											"end": 3447,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "76"
										},
										{
											"begin": 3438,
											"end": 3465,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3438,
											"end": 3465,
											"name": "tag",
											"source": 4,
											"value": "90"
										},
										{
											"begin": 3438,
											"end": 3465,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3482,
											"end": 3486,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 3475,
											"end": 3486,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3475,
											"end": 3486,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3475,
											"end": 3486,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3315,
											"end": 3493,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "tag",
											"source": 4,
											"value": "56"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3631,
											"end": 3638,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3657,
											"end": 3668,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3669,
											"end": 3674,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3676,
											"end": 3683,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 3650,
											"end": 3684,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3650,
											"end": 3684,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3551,
											"end": 3691,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 656,
											"end": 752,
											"name": "tag",
											"source": 7,
											"value": "67"
										},
										{
											"begin": 656,
											"end": 752,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 709,
											"end": 716,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 728,
											"end": 745,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 728,
											"end": 745,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 656,
											"end": 752,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 656,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8726,
											"end": 8854,
											"name": "tag",
											"source": 4,
											"value": "69"
										},
										{
											"begin": 8726,
											"end": 8854,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8810,
											"end": 8847,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "94"
										},
										{
											"begin": 8819,
											"end": 8824,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 8826,
											"end": 8833,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 8835,
											"end": 8840,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 8842,
											"end": 8846,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 8810,
											"end": 8818,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "95"
										},
										{
											"begin": 8810,
											"end": 8847,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 8810,
											"end": 8847,
											"name": "tag",
											"source": 4,
											"value": "94"
										},
										{
											"begin": 8810,
											"end": 8847,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8726,
											"end": 8854,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8726,
											"end": 8854,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8726,
											"end": 8854,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8726,
											"end": 8854,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 10415,
											"end": 10892,
											"name": "tag",
											"source": 4,
											"value": "74"
										},
										{
											"begin": 10415,
											"end": 10892,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10514,
											"end": 10538,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10541,
											"end": 10566,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "97"
										},
										{
											"begin": 10551,
											"end": 10556,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 10558,
											"end": 10565,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 10541,
											"end": 10550,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "56"
										},
										{
											"begin": 10541,
											"end": 10566,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 10541,
											"end": 10566,
											"name": "tag",
											"source": 4,
											"value": "97"
										},
										{
											"begin": 10541,
											"end": 10566,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10514,
											"end": 10566,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10514,
											"end": 10566,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10600,
											"end": 10617,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10580,
											"end": 10596,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10580,
											"end": 10617,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 10576,
											"end": 10886,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "98"
										},
										{
											"begin": 10576,
											"end": 10886,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 10656,
											"end": 10661,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10637,
											"end": 10653,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10637,
											"end": 10661,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 10633,
											"end": 10763,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 10633,
											"end": 10763,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "99"
										},
										{
											"begin": 10633,
											"end": 10763,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 10715,
											"end": 10722,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 10724,
											"end": 10740,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10742,
											"end": 10747,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "PUSH",
											"source": 4,
											"value": "FB8F41B200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "101"
										},
										{
											"begin": 10688,
											"end": 10748,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "tag",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 10633,
											"end": 10763,
											"name": "tag",
											"source": 4,
											"value": "99"
										},
										{
											"begin": 10633,
											"end": 10763,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10804,
											"end": 10861,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "102"
										},
										{
											"begin": 10813,
											"end": 10818,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 10820,
											"end": 10827,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 10848,
											"end": 10853,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 10829,
											"end": 10845,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 10829,
											"end": 10853,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 10855,
											"end": 10860,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10804,
											"end": 10812,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "95"
										},
										{
											"begin": 10804,
											"end": 10861,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 10804,
											"end": 10861,
											"name": "tag",
											"source": 4,
											"value": "102"
										},
										{
											"begin": 10804,
											"end": 10861,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10576,
											"end": 10886,
											"name": "tag",
											"source": 4,
											"value": "98"
										},
										{
											"begin": 10576,
											"end": 10886,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10504,
											"end": 10892,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10415,
											"end": 10892,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10415,
											"end": 10892,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10415,
											"end": 10892,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10415,
											"end": 10892,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5393,
											"end": 5693,
											"name": "tag",
											"source": 4,
											"value": "76"
										},
										{
											"begin": 5393,
											"end": 5693,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5492,
											"end": 5493,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5476,
											"end": 5494,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5476,
											"end": 5494,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5476,
											"end": 5480,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 5476,
											"end": 5494,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5476,
											"end": 5494,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5476,
											"end": 5494,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 5472,
											"end": 5558,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "104"
										},
										{
											"begin": 5472,
											"end": 5558,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 5544,
											"end": 5545,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "PUSH",
											"source": 4,
											"value": "96C6FD1E00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "105"
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "106"
										},
										{
											"begin": 5517,
											"end": 5547,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "tag",
											"source": 4,
											"value": "105"
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 5472,
											"end": 5558,
											"name": "tag",
											"source": 4,
											"value": "104"
										},
										{
											"begin": 5472,
											"end": 5558,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5585,
											"end": 5586,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5571,
											"end": 5587,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5571,
											"end": 5587,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5571,
											"end": 5573,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5571,
											"end": 5587,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5571,
											"end": 5587,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5571,
											"end": 5587,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 5567,
											"end": 5653,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "107"
										},
										{
											"begin": 5567,
											"end": 5653,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 5639,
											"end": 5640,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "PUSH",
											"source": 4,
											"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "108"
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "106"
										},
										{
											"begin": 5610,
											"end": 5642,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "tag",
											"source": 4,
											"value": "108"
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 5567,
											"end": 5653,
											"name": "tag",
											"source": 4,
											"value": "107"
										},
										{
											"begin": 5567,
											"end": 5653,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5662,
											"end": 5686,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "109"
										},
										{
											"begin": 5670,
											"end": 5674,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 5676,
											"end": 5678,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 5680,
											"end": 5685,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 5662,
											"end": 5669,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "110"
										},
										{
											"begin": 5662,
											"end": 5686,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5662,
											"end": 5686,
											"name": "tag",
											"source": 4,
											"value": "109"
										},
										{
											"begin": 5662,
											"end": 5686,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5393,
											"end": 5693,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5393,
											"end": 5693,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5393,
											"end": 5693,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5393,
											"end": 5693,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7458,
											"end": 7666,
											"name": "tag",
											"source": 4,
											"value": "87"
										},
										{
											"begin": 7458,
											"end": 7666,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7547,
											"end": 7548,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7528,
											"end": 7549,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7528,
											"end": 7549,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7528,
											"end": 7535,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7528,
											"end": 7549,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7528,
											"end": 7549,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7528,
											"end": 7549,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 7524,
											"end": 7615,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "112"
										},
										{
											"begin": 7524,
											"end": 7615,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 7601,
											"end": 7602,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "PUSH",
											"source": 4,
											"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "113"
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "106"
										},
										{
											"begin": 7572,
											"end": 7604,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "tag",
											"source": 4,
											"value": "113"
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 7524,
											"end": 7615,
											"name": "tag",
											"source": 4,
											"value": "112"
										},
										{
											"begin": 7524,
											"end": 7615,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7624,
											"end": 7659,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "114"
										},
										{
											"begin": 7640,
											"end": 7641,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7644,
											"end": 7651,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 7653,
											"end": 7658,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 7624,
											"end": 7631,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "110"
										},
										{
											"begin": 7624,
											"end": 7659,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7624,
											"end": 7659,
											"name": "tag",
											"source": 4,
											"value": "114"
										},
										{
											"begin": 7624,
											"end": 7659,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7458,
											"end": 7666,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7458,
											"end": 7666,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7458,
											"end": 7666,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 9701,
											"end": 10133,
											"name": "tag",
											"source": 4,
											"value": "95"
										},
										{
											"begin": 9701,
											"end": 10133,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9830,
											"end": 9831,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9813,
											"end": 9832,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9813,
											"end": 9832,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9813,
											"end": 9818,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 9813,
											"end": 9832,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9813,
											"end": 9832,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9813,
											"end": 9832,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 9809,
											"end": 9898,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "116"
										},
										{
											"begin": 9809,
											"end": 9898,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 9884,
											"end": 9885,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "PUSH",
											"source": 4,
											"value": "E602DF0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "117"
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "106"
										},
										{
											"begin": 9855,
											"end": 9887,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "tag",
											"source": 4,
											"value": "117"
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 9809,
											"end": 9898,
											"name": "tag",
											"source": 4,
											"value": "116"
										},
										{
											"begin": 9809,
											"end": 9898,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9930,
											"end": 9931,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9911,
											"end": 9932,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9911,
											"end": 9932,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9911,
											"end": 9918,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 9911,
											"end": 9932,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9911,
											"end": 9932,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9911,
											"end": 9932,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 9907,
											"end": 9997,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "118"
										},
										{
											"begin": 9907,
											"end": 9997,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 9983,
											"end": 9984,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "PUSH",
											"source": 4,
											"value": "94280D6200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "119"
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "106"
										},
										{
											"begin": 9955,
											"end": 9986,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "tag",
											"source": 4,
											"value": "119"
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 9907,
											"end": 9997,
											"name": "tag",
											"source": 4,
											"value": "118"
										},
										{
											"begin": 9907,
											"end": 9997,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10036,
											"end": 10041,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10006,
											"end": 10017,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10018,
											"end": 10023,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10025,
											"end": 10032,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 10006,
											"end": 10041,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10006,
											"end": 10041,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10006,
											"end": 10041,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 10006,
											"end": 10041,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10055,
											"end": 10064,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 10051,
											"end": 10127,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 10051,
											"end": 10127,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "120"
										},
										{
											"begin": 10051,
											"end": 10127,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 10101,
											"end": 10108,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 10094,
											"end": 10099,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "PUSH",
											"source": 4,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 10110,
											"end": 10115,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "121"
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "27"
										},
										{
											"begin": 10085,
											"end": 10116,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "tag",
											"source": 4,
											"value": "121"
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "LOG3",
											"source": 4
										},
										{
											"begin": 10051,
											"end": 10127,
											"name": "tag",
											"source": 4,
											"value": "120"
										},
										{
											"begin": 10051,
											"end": 10127,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9701,
											"end": 10133,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9701,
											"end": 10133,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9701,
											"end": 10133,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9701,
											"end": 10133,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9701,
											"end": 10133,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6008,
											"end": 7115,
											"name": "tag",
											"source": 4,
											"value": "110"
										},
										{
											"begin": 6008,
											"end": 7115,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6113,
											"end": 6114,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6097,
											"end": 6115,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6097,
											"end": 6115,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6097,
											"end": 6101,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 6097,
											"end": 6115,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6097,
											"end": 6115,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6097,
											"end": 6115,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "123"
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 6249,
											"end": 6254,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6233,
											"end": 6245,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 6233,
											"end": 6245,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "124"
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "125"
										},
										{
											"begin": 6233,
											"end": 6254,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "tag",
											"source": 4,
											"value": "124"
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "126"
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "tag",
											"source": 4,
											"value": "123"
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6285,
											"end": 6304,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6307,
											"end": 6316,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6317,
											"end": 6321,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 6285,
											"end": 6322,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6285,
											"end": 6322,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6354,
											"end": 6359,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6340,
											"end": 6351,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6340,
											"end": 6359,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 6336,
											"end": 6451,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 6336,
											"end": 6451,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "127"
										},
										{
											"begin": 6336,
											"end": 6451,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 6411,
											"end": 6415,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 6417,
											"end": 6428,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6430,
											"end": 6435,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "PUSH",
											"source": 4,
											"value": "E450D38C00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "128"
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "101"
										},
										{
											"begin": 6386,
											"end": 6436,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "tag",
											"source": 4,
											"value": "128"
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 6336,
											"end": 6451,
											"name": "tag",
											"source": 4,
											"value": "127"
										},
										{
											"begin": 6336,
											"end": 6451,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6603,
											"end": 6608,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6589,
											"end": 6600,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6589,
											"end": 6608,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 6571,
											"end": 6580,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6581,
											"end": 6585,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 6571,
											"end": 6608,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6571,
											"end": 6608,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6571,
											"end": 6608,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 6571,
											"end": 6608,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6271,
											"end": 6633,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "tag",
											"source": 4,
											"value": "126"
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6661,
											"end": 6662,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6647,
											"end": 6663,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6647,
											"end": 6663,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6647,
											"end": 6649,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6647,
											"end": 6663,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6647,
											"end": 6663,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6647,
											"end": 6663,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "129"
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 6826,
											"end": 6831,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6810,
											"end": 6822,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 6810,
											"end": 6822,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "130"
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "tag",
											"source": 4,
											"value": "129"
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7038,
											"end": 7043,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7021,
											"end": 7030,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7031,
											"end": 7033,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "tag",
											"source": 4,
											"value": "130"
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7098,
											"end": 7100,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7092,
											"end": 7096,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "PUSH",
											"source": 4,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 7102,
											"end": 7107,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "131"
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "27"
										},
										{
											"begin": 7083,
											"end": 7108,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "tag",
											"source": 4,
											"value": "131"
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "LOG3",
											"source": 4
										},
										{
											"begin": 6008,
											"end": 7115,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6008,
											"end": 7115,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6008,
											"end": 7115,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6008,
											"end": 7115,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7,
											"end": 106,
											"name": "tag",
											"source": 11,
											"value": "132"
										},
										{
											"begin": 7,
											"end": 106,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 59,
											"end": 65,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 93,
											"end": 98,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 87,
											"end": 99,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 77,
											"end": 99,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 77,
											"end": 99,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7,
											"end": 106,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 7,
											"end": 106,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7,
											"end": 106,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7,
											"end": 106,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 112,
											"end": 281,
											"name": "tag",
											"source": 11,
											"value": "133"
										},
										{
											"begin": 112,
											"end": 281,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 196,
											"end": 207,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 230,
											"end": 236,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 225,
											"end": 228,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 218,
											"end": 237,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 270,
											"end": 274,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 265,
											"end": 268,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 261,
											"end": 275,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 246,
											"end": 275,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 246,
											"end": 275,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 112,
											"end": 281,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 112,
											"end": 281,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 112,
											"end": 281,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 112,
											"end": 281,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 112,
											"end": 281,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 287,
											"end": 426,
											"name": "tag",
											"source": 11,
											"value": "134"
										},
										{
											"begin": 287,
											"end": 426,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 376,
											"end": 382,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 371,
											"end": 374,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 366,
											"end": 369,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 360,
											"end": 383,
											"name": "MCOPY",
											"source": 11
										},
										{
											"begin": 417,
											"end": 418,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 408,
											"end": 414,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 403,
											"end": 406,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 399,
											"end": 415,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 392,
											"end": 419,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 287,
											"end": 426,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 287,
											"end": 426,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 287,
											"end": 426,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 287,
											"end": 426,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 432,
											"end": 534,
											"name": "tag",
											"source": 11,
											"value": "135"
										},
										{
											"begin": 432,
											"end": 534,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 473,
											"end": 479,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 524,
											"end": 526,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 520,
											"end": 527,
											"name": "NOT",
											"source": 11
										},
										{
											"begin": 515,
											"end": 517,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 508,
											"end": 513,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 504,
											"end": 518,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 500,
											"end": 528,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 490,
											"end": 528,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 490,
											"end": 528,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 432,
											"end": 534,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 432,
											"end": 534,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 432,
											"end": 534,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 432,
											"end": 534,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 540,
											"end": 917,
											"name": "tag",
											"source": 11,
											"value": "136"
										},
										{
											"begin": 540,
											"end": 917,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 628,
											"end": 631,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 656,
											"end": 695,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "161"
										},
										{
											"begin": 689,
											"end": 694,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 656,
											"end": 695,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "132"
										},
										{
											"begin": 656,
											"end": 695,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 656,
											"end": 695,
											"name": "tag",
											"source": 11,
											"value": "161"
										},
										{
											"begin": 656,
											"end": 695,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 711,
											"end": 782,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "162"
										},
										{
											"begin": 775,
											"end": 781,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 770,
											"end": 773,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 711,
											"end": 782,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "133"
										},
										{
											"begin": 711,
											"end": 782,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 711,
											"end": 782,
											"name": "tag",
											"source": 11,
											"value": "162"
										},
										{
											"begin": 711,
											"end": 782,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 704,
											"end": 782,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 704,
											"end": 782,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 791,
											"end": 856,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "163"
										},
										{
											"begin": 849,
											"end": 855,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 844,
											"end": 847,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 837,
											"end": 841,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 830,
											"end": 835,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 826,
											"end": 842,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 791,
											"end": 856,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "134"
										},
										{
											"begin": 791,
											"end": 856,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 791,
											"end": 856,
											"name": "tag",
											"source": 11,
											"value": "163"
										},
										{
											"begin": 791,
											"end": 856,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 881,
											"end": 910,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "164"
										},
										{
											"begin": 903,
											"end": 909,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 881,
											"end": 910,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "135"
										},
										{
											"begin": 881,
											"end": 910,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 881,
											"end": 910,
											"name": "tag",
											"source": 11,
											"value": "164"
										},
										{
											"begin": 881,
											"end": 910,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 876,
											"end": 879,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 872,
											"end": 911,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 865,
											"end": 911,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 865,
											"end": 911,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 632,
											"end": 917,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 540,
											"end": 917,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 540,
											"end": 917,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 540,
											"end": 917,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 540,
											"end": 917,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 540,
											"end": 917,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "tag",
											"source": 11,
											"value": "17"
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1036,
											"end": 1040,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1074,
											"end": 1076,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1063,
											"end": 1072,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1059,
											"end": 1077,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1051,
											"end": 1077,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1051,
											"end": 1077,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1123,
											"end": 1132,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1117,
											"end": 1121,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1113,
											"end": 1133,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 1109,
											"end": 1110,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1098,
											"end": 1107,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 1094,
											"end": 1111,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1087,
											"end": 1134,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1151,
											"end": 1229,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "166"
										},
										{
											"begin": 1224,
											"end": 1228,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1215,
											"end": 1221,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 1151,
											"end": 1229,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "136"
										},
										{
											"begin": 1151,
											"end": 1229,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1151,
											"end": 1229,
											"name": "tag",
											"source": 11,
											"value": "166"
										},
										{
											"begin": 1151,
											"end": 1229,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1143,
											"end": 1229,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1143,
											"end": 1229,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 923,
											"end": 1236,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1323,
											"end": 1440,
											"name": "tag",
											"source": 11,
											"value": "138"
										},
										{
											"begin": 1323,
											"end": 1440,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1432,
											"end": 1433,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1429,
											"end": 1430,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1422,
											"end": 1434,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "tag",
											"source": 11,
											"value": "140"
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1606,
											"end": 1613,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1646,
											"end": 1688,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1639,
											"end": 1644,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1635,
											"end": 1689,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1624,
											"end": 1689,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1624,
											"end": 1689,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1569,
											"end": 1695,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "tag",
											"source": 11,
											"value": "141"
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1738,
											"end": 1745,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1767,
											"end": 1791,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "172"
										},
										{
											"begin": 1785,
											"end": 1790,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1767,
											"end": 1791,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "140"
										},
										{
											"begin": 1767,
											"end": 1791,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1767,
											"end": 1791,
											"name": "tag",
											"source": 11,
											"value": "172"
										},
										{
											"begin": 1767,
											"end": 1791,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1756,
											"end": 1791,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1756,
											"end": 1791,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1701,
											"end": 1797,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1803,
											"end": 1925,
											"name": "tag",
											"source": 11,
											"value": "142"
										},
										{
											"begin": 1803,
											"end": 1925,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1876,
											"end": 1900,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "174"
										},
										{
											"begin": 1894,
											"end": 1899,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1876,
											"end": 1900,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "141"
										},
										{
											"begin": 1876,
											"end": 1900,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1876,
											"end": 1900,
											"name": "tag",
											"source": 11,
											"value": "174"
										},
										{
											"begin": 1876,
											"end": 1900,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1869,
											"end": 1874,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1866,
											"end": 1901,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 1856,
											"end": 1919,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "175"
										},
										{
											"begin": 1856,
											"end": 1919,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1915,
											"end": 1916,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1912,
											"end": 1913,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1905,
											"end": 1917,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 1856,
											"end": 1919,
											"name": "tag",
											"source": 11,
											"value": "175"
										},
										{
											"begin": 1856,
											"end": 1919,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1803,
											"end": 1925,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1803,
											"end": 1925,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "tag",
											"source": 11,
											"value": "143"
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1977,
											"end": 1982,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2015,
											"end": 2021,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2002,
											"end": 2022,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 1993,
											"end": 2022,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1993,
											"end": 2022,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2031,
											"end": 2064,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "177"
										},
										{
											"begin": 2058,
											"end": 2063,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2031,
											"end": 2064,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "142"
										},
										{
											"begin": 2031,
											"end": 2064,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2031,
											"end": 2064,
											"name": "tag",
											"source": 11,
											"value": "177"
										},
										{
											"begin": 2031,
											"end": 2064,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1931,
											"end": 2070,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "tag",
											"source": 11,
											"value": "144"
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2113,
											"end": 2120,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2142,
											"end": 2147,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2131,
											"end": 2147,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2131,
											"end": 2147,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2076,
											"end": 2153,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2159,
											"end": 2281,
											"name": "tag",
											"source": 11,
											"value": "145"
										},
										{
											"begin": 2159,
											"end": 2281,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2232,
											"end": 2256,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "180"
										},
										{
											"begin": 2250,
											"end": 2255,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2232,
											"end": 2256,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "144"
										},
										{
											"begin": 2232,
											"end": 2256,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2232,
											"end": 2256,
											"name": "tag",
											"source": 11,
											"value": "180"
										},
										{
											"begin": 2232,
											"end": 2256,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2225,
											"end": 2230,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2222,
											"end": 2257,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 2212,
											"end": 2275,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "181"
										},
										{
											"begin": 2212,
											"end": 2275,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 2271,
											"end": 2272,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2268,
											"end": 2269,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2261,
											"end": 2273,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 2212,
											"end": 2275,
											"name": "tag",
											"source": 11,
											"value": "181"
										},
										{
											"begin": 2212,
											"end": 2275,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2159,
											"end": 2281,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2159,
											"end": 2281,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "tag",
											"source": 11,
											"value": "146"
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2333,
											"end": 2338,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2371,
											"end": 2377,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2358,
											"end": 2378,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 2349,
											"end": 2378,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2349,
											"end": 2378,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2387,
											"end": 2420,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "183"
										},
										{
											"begin": 2414,
											"end": 2419,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2387,
											"end": 2420,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "145"
										},
										{
											"begin": 2387,
											"end": 2420,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2387,
											"end": 2420,
											"name": "tag",
											"source": 11,
											"value": "183"
										},
										{
											"begin": 2387,
											"end": 2420,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2287,
											"end": 2426,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "tag",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2500,
											"end": 2506,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2508,
											"end": 2514,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2557,
											"end": 2559,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2545,
											"end": 2554,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 2536,
											"end": 2543,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 2532,
											"end": 2555,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 2528,
											"end": 2560,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "185"
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 2563,
											"end": 2642,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "186"
										},
										{
											"begin": 2563,
											"end": 2642,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "138"
										},
										{
											"begin": 2563,
											"end": 2642,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2563,
											"end": 2642,
											"name": "tag",
											"source": 11,
											"value": "186"
										},
										{
											"begin": 2563,
											"end": 2642,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "tag",
											"source": 11,
											"value": "185"
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2683,
											"end": 2684,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2708,
											"end": 2761,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "187"
										},
										{
											"begin": 2753,
											"end": 2760,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 2744,
											"end": 2750,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2733,
											"end": 2742,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 2729,
											"end": 2751,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2708,
											"end": 2761,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "143"
										},
										{
											"begin": 2708,
											"end": 2761,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2708,
											"end": 2761,
											"name": "tag",
											"source": 11,
											"value": "187"
										},
										{
											"begin": 2708,
											"end": 2761,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2698,
											"end": 2761,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 2698,
											"end": 2761,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2654,
											"end": 2771,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2810,
											"end": 2812,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 2836,
											"end": 2889,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "188"
										},
										{
											"begin": 2881,
											"end": 2888,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 2872,
											"end": 2878,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2861,
											"end": 2870,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 2857,
											"end": 2879,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2836,
											"end": 2889,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "146"
										},
										{
											"begin": 2836,
											"end": 2889,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2836,
											"end": 2889,
											"name": "tag",
											"source": 11,
											"value": "188"
										},
										{
											"begin": 2836,
											"end": 2889,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2826,
											"end": 2889,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2826,
											"end": 2889,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2781,
											"end": 2899,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2432,
											"end": 2906,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "tag",
											"source": 11,
											"value": "147"
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2946,
											"end": 2953,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2989,
											"end": 2994,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2982,
											"end": 2995,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 2975,
											"end": 2996,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 2964,
											"end": 2996,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2964,
											"end": 2996,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2912,
											"end": 3002,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3008,
											"end": 3117,
											"name": "tag",
											"source": 11,
											"value": "148"
										},
										{
											"begin": 3008,
											"end": 3117,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3089,
											"end": 3110,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "191"
										},
										{
											"begin": 3104,
											"end": 3109,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3089,
											"end": 3110,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "147"
										},
										{
											"begin": 3089,
											"end": 3110,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3089,
											"end": 3110,
											"name": "tag",
											"source": 11,
											"value": "191"
										},
										{
											"begin": 3089,
											"end": 3110,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3084,
											"end": 3087,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3077,
											"end": 3111,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3008,
											"end": 3117,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3008,
											"end": 3117,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3008,
											"end": 3117,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "tag",
											"source": 11,
											"value": "23"
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3210,
											"end": 3214,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3248,
											"end": 3250,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 3237,
											"end": 3246,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3233,
											"end": 3251,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3225,
											"end": 3251,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3225,
											"end": 3251,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3261,
											"end": 3326,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "193"
										},
										{
											"begin": 3323,
											"end": 3324,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3312,
											"end": 3321,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 3308,
											"end": 3325,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3299,
											"end": 3305,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 3261,
											"end": 3326,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "148"
										},
										{
											"begin": 3261,
											"end": 3326,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3261,
											"end": 3326,
											"name": "tag",
											"source": 11,
											"value": "193"
										},
										{
											"begin": 3261,
											"end": 3326,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3123,
											"end": 3333,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3339,
											"end": 3457,
											"name": "tag",
											"source": 11,
											"value": "149"
										},
										{
											"begin": 3339,
											"end": 3457,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3426,
											"end": 3450,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "195"
										},
										{
											"begin": 3444,
											"end": 3449,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3426,
											"end": 3450,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "144"
										},
										{
											"begin": 3426,
											"end": 3450,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3426,
											"end": 3450,
											"name": "tag",
											"source": 11,
											"value": "195"
										},
										{
											"begin": 3426,
											"end": 3450,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3421,
											"end": 3424,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3414,
											"end": 3451,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3339,
											"end": 3457,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3339,
											"end": 3457,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3339,
											"end": 3457,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "tag",
											"source": 11,
											"value": "27"
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3556,
											"end": 3560,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3594,
											"end": 3596,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 3583,
											"end": 3592,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3579,
											"end": 3597,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3571,
											"end": 3597,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3571,
											"end": 3597,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3607,
											"end": 3678,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "197"
										},
										{
											"begin": 3675,
											"end": 3676,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3664,
											"end": 3673,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 3660,
											"end": 3677,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3651,
											"end": 3657,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 3607,
											"end": 3678,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "149"
										},
										{
											"begin": 3607,
											"end": 3678,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3607,
											"end": 3678,
											"name": "tag",
											"source": 11,
											"value": "197"
										},
										{
											"begin": 3607,
											"end": 3678,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3463,
											"end": 3685,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "tag",
											"source": 11,
											"value": "30"
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3768,
											"end": 3774,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3776,
											"end": 3782,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3784,
											"end": 3790,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3833,
											"end": 3835,
											"name": "PUSH",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 3821,
											"end": 3830,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 3812,
											"end": 3819,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 3808,
											"end": 3831,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 3804,
											"end": 3836,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 3801,
											"end": 3920,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 3801,
											"end": 3920,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "199"
										},
										{
											"begin": 3801,
											"end": 3920,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 3839,
											"end": 3918,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "200"
										},
										{
											"begin": 3839,
											"end": 3918,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "138"
										},
										{
											"begin": 3839,
											"end": 3918,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3839,
											"end": 3918,
											"name": "tag",
											"source": 11,
											"value": "200"
										},
										{
											"begin": 3839,
											"end": 3918,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3801,
											"end": 3920,
											"name": "tag",
											"source": 11,
											"value": "199"
										},
										{
											"begin": 3801,
											"end": 3920,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3959,
											"end": 3960,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3984,
											"end": 4037,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "201"
										},
										{
											"begin": 4029,
											"end": 4036,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 4020,
											"end": 4026,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4009,
											"end": 4018,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 4005,
											"end": 4027,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3984,
											"end": 4037,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "143"
										},
										{
											"begin": 3984,
											"end": 4037,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3984,
											"end": 4037,
											"name": "tag",
											"source": 11,
											"value": "201"
										},
										{
											"begin": 3984,
											"end": 4037,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3974,
											"end": 4037,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 3974,
											"end": 4037,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3930,
											"end": 4047,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4086,
											"end": 4088,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 4112,
											"end": 4165,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "202"
										},
										{
											"begin": 4157,
											"end": 4164,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 4148,
											"end": 4154,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4137,
											"end": 4146,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 4133,
											"end": 4155,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4112,
											"end": 4165,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "143"
										},
										{
											"begin": 4112,
											"end": 4165,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4112,
											"end": 4165,
											"name": "tag",
											"source": 11,
											"value": "202"
										},
										{
											"begin": 4112,
											"end": 4165,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4102,
											"end": 4165,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 4102,
											"end": 4165,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4057,
											"end": 4175,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4214,
											"end": 4216,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 4240,
											"end": 4293,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "203"
										},
										{
											"begin": 4285,
											"end": 4292,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 4276,
											"end": 4282,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4265,
											"end": 4274,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 4261,
											"end": 4283,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4240,
											"end": 4293,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "146"
										},
										{
											"begin": 4240,
											"end": 4293,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4240,
											"end": 4293,
											"name": "tag",
											"source": 11,
											"value": "203"
										},
										{
											"begin": 4240,
											"end": 4293,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4230,
											"end": 4293,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4230,
											"end": 4293,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4185,
											"end": 4303,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 3691,
											"end": 4310,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4316,
											"end": 4402,
											"name": "tag",
											"source": 11,
											"value": "150"
										},
										{
											"begin": 4316,
											"end": 4402,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4351,
											"end": 4358,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4391,
											"end": 4395,
											"name": "PUSH",
											"source": 11,
											"value": "FF"
										},
										{
											"begin": 4384,
											"end": 4389,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4380,
											"end": 4396,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 4369,
											"end": 4396,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4369,
											"end": 4396,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4316,
											"end": 4402,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4316,
											"end": 4402,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4316,
											"end": 4402,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4316,
											"end": 4402,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4408,
											"end": 4520,
											"name": "tag",
											"source": 11,
											"value": "151"
										},
										{
											"begin": 4408,
											"end": 4520,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4491,
											"end": 4513,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "206"
										},
										{
											"begin": 4507,
											"end": 4512,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4491,
											"end": 4513,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "150"
										},
										{
											"begin": 4491,
											"end": 4513,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4491,
											"end": 4513,
											"name": "tag",
											"source": 11,
											"value": "206"
										},
										{
											"begin": 4491,
											"end": 4513,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4486,
											"end": 4489,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4479,
											"end": 4514,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 4408,
											"end": 4520,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4408,
											"end": 4520,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4408,
											"end": 4520,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4526,
											"end": 4740,
											"name": "tag",
											"source": 11,
											"value": "36"
										},
										{
											"begin": 4526,
											"end": 4740,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4615,
											"end": 4619,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4653,
											"end": 4655,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 4642,
											"end": 4651,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4638,
											"end": 4656,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4630,
											"end": 4656,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4630,
											"end": 4656,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4666,
											"end": 4733,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "208"
										},
										{
											"begin": 4730,
											"end": 4731,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4719,
											"end": 4728,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 4715,
											"end": 4732,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4706,
											"end": 4712,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 4666,
											"end": 4733,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "151"
										},
										{
											"begin": 4666,
											"end": 4733,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4666,
											"end": 4733,
											"name": "tag",
											"source": 11,
											"value": "208"
										},
										{
											"begin": 4666,
											"end": 4733,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4526,
											"end": 4740,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 4526,
											"end": 4740,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4526,
											"end": 4740,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4526,
											"end": 4740,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4526,
											"end": 4740,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4746,
											"end": 5075,
											"name": "tag",
											"source": 11,
											"value": "39"
										},
										{
											"begin": 4746,
											"end": 5075,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4805,
											"end": 4811,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4854,
											"end": 4856,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 4842,
											"end": 4851,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4833,
											"end": 4840,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 4829,
											"end": 4852,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 4825,
											"end": 4857,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 4822,
											"end": 4941,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 4822,
											"end": 4941,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "210"
										},
										{
											"begin": 4822,
											"end": 4941,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 4860,
											"end": 4939,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "211"
										},
										{
											"begin": 4860,
											"end": 4939,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "138"
										},
										{
											"begin": 4860,
											"end": 4939,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4860,
											"end": 4939,
											"name": "tag",
											"source": 11,
											"value": "211"
										},
										{
											"begin": 4860,
											"end": 4939,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4822,
											"end": 4941,
											"name": "tag",
											"source": 11,
											"value": "210"
										},
										{
											"begin": 4822,
											"end": 4941,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4980,
											"end": 4981,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5005,
											"end": 5058,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "212"
										},
										{
											"begin": 5050,
											"end": 5057,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 5041,
											"end": 5047,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5030,
											"end": 5039,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 5026,
											"end": 5048,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5005,
											"end": 5058,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "143"
										},
										{
											"begin": 5005,
											"end": 5058,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5005,
											"end": 5058,
											"name": "tag",
											"source": 11,
											"value": "212"
										},
										{
											"begin": 5005,
											"end": 5058,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4995,
											"end": 5058,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4995,
											"end": 5058,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4951,
											"end": 5068,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4746,
											"end": 5075,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 4746,
											"end": 5075,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4746,
											"end": 5075,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4746,
											"end": 5075,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4746,
											"end": 5075,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5081,
											"end": 5410,
											"name": "tag",
											"source": 11,
											"value": "47"
										},
										{
											"begin": 5081,
											"end": 5410,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5140,
											"end": 5146,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5189,
											"end": 5191,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 5177,
											"end": 5186,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5168,
											"end": 5175,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 5164,
											"end": 5187,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 5160,
											"end": 5192,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 5157,
											"end": 5276,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 5157,
											"end": 5276,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "214"
										},
										{
											"begin": 5157,
											"end": 5276,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 5195,
											"end": 5274,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "215"
										},
										{
											"begin": 5195,
											"end": 5274,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "138"
										},
										{
											"begin": 5195,
											"end": 5274,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5195,
											"end": 5274,
											"name": "tag",
											"source": 11,
											"value": "215"
										},
										{
											"begin": 5195,
											"end": 5274,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5157,
											"end": 5276,
											"name": "tag",
											"source": 11,
											"value": "214"
										},
										{
											"begin": 5157,
											"end": 5276,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5315,
											"end": 5316,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5340,
											"end": 5393,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "216"
										},
										{
											"begin": 5385,
											"end": 5392,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 5376,
											"end": 5382,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5365,
											"end": 5374,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 5361,
											"end": 5383,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5340,
											"end": 5393,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "146"
										},
										{
											"begin": 5340,
											"end": 5393,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5340,
											"end": 5393,
											"name": "tag",
											"source": 11,
											"value": "216"
										},
										{
											"begin": 5340,
											"end": 5393,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5330,
											"end": 5393,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5330,
											"end": 5393,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5286,
											"end": 5403,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5081,
											"end": 5410,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 5081,
											"end": 5410,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5081,
											"end": 5410,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5081,
											"end": 5410,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5081,
											"end": 5410,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5416,
											"end": 5890,
											"name": "tag",
											"source": 11,
											"value": "55"
										},
										{
											"begin": 5416,
											"end": 5890,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5484,
											"end": 5490,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5492,
											"end": 5498,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 5541,
											"end": 5543,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 5529,
											"end": 5538,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 5520,
											"end": 5527,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 5516,
											"end": 5539,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 5512,
											"end": 5544,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 5509,
											"end": 5628,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 5509,
											"end": 5628,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "218"
										},
										{
											"begin": 5509,
											"end": 5628,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 5547,
											"end": 5626,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "219"
										},
										{
											"begin": 5547,
											"end": 5626,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "138"
										},
										{
											"begin": 5547,
											"end": 5626,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5547,
											"end": 5626,
											"name": "tag",
											"source": 11,
											"value": "219"
										},
										{
											"begin": 5547,
											"end": 5626,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5509,
											"end": 5628,
											"name": "tag",
											"source": 11,
											"value": "218"
										},
										{
											"begin": 5509,
											"end": 5628,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5667,
											"end": 5668,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5692,
											"end": 5745,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "220"
										},
										{
											"begin": 5737,
											"end": 5744,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 5728,
											"end": 5734,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5717,
											"end": 5726,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 5713,
											"end": 5735,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5692,
											"end": 5745,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "143"
										},
										{
											"begin": 5692,
											"end": 5745,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5692,
											"end": 5745,
											"name": "tag",
											"source": 11,
											"value": "220"
										},
										{
											"begin": 5692,
											"end": 5745,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5682,
											"end": 5745,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 5682,
											"end": 5745,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5638,
											"end": 5755,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5794,
											"end": 5796,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 5820,
											"end": 5873,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "221"
										},
										{
											"begin": 5865,
											"end": 5872,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 5856,
											"end": 5862,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5845,
											"end": 5854,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 5841,
											"end": 5863,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5820,
											"end": 5873,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "143"
										},
										{
											"begin": 5820,
											"end": 5873,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5820,
											"end": 5873,
											"name": "tag",
											"source": 11,
											"value": "221"
										},
										{
											"begin": 5820,
											"end": 5873,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5810,
											"end": 5873,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5810,
											"end": 5873,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5765,
											"end": 5883,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5416,
											"end": 5890,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 5416,
											"end": 5890,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5416,
											"end": 5890,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 5416,
											"end": 5890,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5416,
											"end": 5890,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5416,
											"end": 5890,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5896,
											"end": 6076,
											"name": "tag",
											"source": 11,
											"value": "152"
										},
										{
											"begin": 5896,
											"end": 6076,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5944,
											"end": 6021,
											"name": "PUSH",
											"source": 11,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5941,
											"end": 5942,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5934,
											"end": 6022,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 6041,
											"end": 6045,
											"name": "PUSH",
											"source": 11,
											"value": "22"
										},
										{
											"begin": 6038,
											"end": 6039,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 6031,
											"end": 6046,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 6065,
											"end": 6069,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 6062,
											"end": 6063,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6055,
											"end": 6070,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 6082,
											"end": 6402,
											"name": "tag",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 6082,
											"end": 6402,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6126,
											"end": 6132,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6163,
											"end": 6164,
											"name": "PUSH",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 6157,
											"end": 6161,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 6153,
											"end": 6165,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 6143,
											"end": 6165,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6143,
											"end": 6165,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6210,
											"end": 6211,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 6204,
											"end": 6208,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 6200,
											"end": 6212,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 6231,
											"end": 6249,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 6221,
											"end": 6302,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "224"
										},
										{
											"begin": 6221,
											"end": 6302,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 6287,
											"end": 6291,
											"name": "PUSH",
											"source": 11,
											"value": "7F"
										},
										{
											"begin": 6279,
											"end": 6285,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 6275,
											"end": 6292,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 6265,
											"end": 6292,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 6265,
											"end": 6292,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6221,
											"end": 6302,
											"name": "tag",
											"source": 11,
											"value": "224"
										},
										{
											"begin": 6221,
											"end": 6302,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6349,
											"end": 6351,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 6341,
											"end": 6347,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 6338,
											"end": 6352,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 6318,
											"end": 6336,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6315,
											"end": 6353,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 6312,
											"end": 6396,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "225"
										},
										{
											"begin": 6312,
											"end": 6396,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 6368,
											"end": 6386,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "226"
										},
										{
											"begin": 6368,
											"end": 6386,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "152"
										},
										{
											"begin": 6368,
											"end": 6386,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6368,
											"end": 6386,
											"name": "tag",
											"source": 11,
											"value": "226"
										},
										{
											"begin": 6368,
											"end": 6386,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6312,
											"end": 6396,
											"name": "tag",
											"source": 11,
											"value": "225"
										},
										{
											"begin": 6312,
											"end": 6396,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6133,
											"end": 6402,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6082,
											"end": 6402,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 6082,
											"end": 6402,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6082,
											"end": 6402,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6082,
											"end": 6402,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6408,
											"end": 6526,
											"name": "tag",
											"source": 11,
											"value": "153"
										},
										{
											"begin": 6408,
											"end": 6526,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6495,
											"end": 6519,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "228"
										},
										{
											"begin": 6513,
											"end": 6518,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6495,
											"end": 6519,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "141"
										},
										{
											"begin": 6495,
											"end": 6519,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6495,
											"end": 6519,
											"name": "tag",
											"source": 11,
											"value": "228"
										},
										{
											"begin": 6495,
											"end": 6519,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6490,
											"end": 6493,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 6483,
											"end": 6520,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 6408,
											"end": 6526,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6408,
											"end": 6526,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6408,
											"end": 6526,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6532,
											"end": 6974,
											"name": "tag",
											"source": 11,
											"value": "101"
										},
										{
											"begin": 6532,
											"end": 6974,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6681,
											"end": 6685,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6719,
											"end": 6721,
											"name": "PUSH",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 6708,
											"end": 6717,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 6704,
											"end": 6722,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6696,
											"end": 6722,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6696,
											"end": 6722,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6732,
											"end": 6803,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "230"
										},
										{
											"begin": 6800,
											"end": 6801,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6789,
											"end": 6798,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 6785,
											"end": 6802,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6776,
											"end": 6782,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 6732,
											"end": 6803,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "153"
										},
										{
											"begin": 6732,
											"end": 6803,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6732,
											"end": 6803,
											"name": "tag",
											"source": 11,
											"value": "230"
										},
										{
											"begin": 6732,
											"end": 6803,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6813,
											"end": 6885,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "231"
										},
										{
											"begin": 6881,
											"end": 6883,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 6870,
											"end": 6879,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 6866,
											"end": 6884,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6857,
											"end": 6863,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 6813,
											"end": 6885,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "149"
										},
										{
											"begin": 6813,
											"end": 6885,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6813,
											"end": 6885,
											"name": "tag",
											"source": 11,
											"value": "231"
										},
										{
											"begin": 6813,
											"end": 6885,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6895,
											"end": 6967,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "232"
										},
										{
											"begin": 6963,
											"end": 6965,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 6952,
											"end": 6961,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 6948,
											"end": 6966,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6939,
											"end": 6945,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 6895,
											"end": 6967,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "149"
										},
										{
											"begin": 6895,
											"end": 6967,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6895,
											"end": 6967,
											"name": "tag",
											"source": 11,
											"value": "232"
										},
										{
											"begin": 6895,
											"end": 6967,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6532,
											"end": 6974,
											"name": "SWAP5",
											"source": 11
										},
										{
											"begin": 6532,
											"end": 6974,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 6532,
											"end": 6974,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6532,
											"end": 6974,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6532,
											"end": 6974,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6532,
											"end": 6974,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6532,
											"end": 6974,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6980,
											"end": 7202,
											"name": "tag",
											"source": 11,
											"value": "106"
										},
										{
											"begin": 6980,
											"end": 7202,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7073,
											"end": 7077,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 7111,
											"end": 7113,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 7100,
											"end": 7109,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 7096,
											"end": 7114,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 7088,
											"end": 7114,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7088,
											"end": 7114,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7124,
											"end": 7195,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "234"
										},
										{
											"begin": 7192,
											"end": 7193,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 7181,
											"end": 7190,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 7177,
											"end": 7194,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 7168,
											"end": 7174,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 7124,
											"end": 7195,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "153"
										},
										{
											"begin": 7124,
											"end": 7195,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7124,
											"end": 7195,
											"name": "tag",
											"source": 11,
											"value": "234"
										},
										{
											"begin": 7124,
											"end": 7195,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6980,
											"end": 7202,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 6980,
											"end": 7202,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 6980,
											"end": 7202,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6980,
											"end": 7202,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6980,
											"end": 7202,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7208,
											"end": 7388,
											"name": "tag",
											"source": 11,
											"value": "154"
										},
										{
											"begin": 7208,
											"end": 7388,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7256,
											"end": 7333,
											"name": "PUSH",
											"source": 11,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7253,
											"end": 7254,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 7246,
											"end": 7334,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 7353,
											"end": 7357,
											"name": "PUSH",
											"source": 11,
											"value": "11"
										},
										{
											"begin": 7350,
											"end": 7351,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 7343,
											"end": 7358,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 7377,
											"end": 7381,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 7374,
											"end": 7375,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 7367,
											"end": 7382,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 7394,
											"end": 7585,
											"name": "tag",
											"source": 11,
											"value": "125"
										},
										{
											"begin": 7394,
											"end": 7585,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7434,
											"end": 7437,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 7453,
											"end": 7473,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "237"
										},
										{
											"begin": 7471,
											"end": 7472,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 7453,
											"end": 7473,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "144"
										},
										{
											"begin": 7453,
											"end": 7473,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7453,
											"end": 7473,
											"name": "tag",
											"source": 11,
											"value": "237"
										},
										{
											"begin": 7453,
											"end": 7473,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7448,
											"end": 7473,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 7448,
											"end": 7473,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7487,
											"end": 7507,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "238"
										},
										{
											"begin": 7505,
											"end": 7506,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 7487,
											"end": 7507,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "144"
										},
										{
											"begin": 7487,
											"end": 7507,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7487,
											"end": 7507,
											"name": "tag",
											"source": 11,
											"value": "238"
										},
										{
											"begin": 7487,
											"end": 7507,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7482,
											"end": 7507,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 7482,
											"end": 7507,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7530,
											"end": 7531,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 7527,
											"end": 7528,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 7523,
											"end": 7532,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 7516,
											"end": 7532,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7516,
											"end": 7532,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7551,
											"end": 7554,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 7548,
											"end": 7549,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 7545,
											"end": 7555,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 7542,
											"end": 7578,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 7542,
											"end": 7578,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "239"
										},
										{
											"begin": 7542,
											"end": 7578,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 7558,
											"end": 7576,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "240"
										},
										{
											"begin": 7558,
											"end": 7576,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "154"
										},
										{
											"begin": 7558,
											"end": 7576,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7558,
											"end": 7576,
											"name": "tag",
											"source": 11,
											"value": "240"
										},
										{
											"begin": 7558,
											"end": 7576,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7542,
											"end": 7578,
											"name": "tag",
											"source": 11,
											"value": "239"
										},
										{
											"begin": 7542,
											"end": 7578,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7394,
											"end": 7585,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 7394,
											"end": 7585,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 7394,
											"end": 7585,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7394,
											"end": 7585,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7394,
											"end": 7585,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
								"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"contracts/RewardToken.sol",
								"contracts/StakeToken.sol",
								"contracts/StakingUpgrade.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"mint(uint256)": "a0712d68",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/RewardToken.sol\":\"RewardToken\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xbf61ab2ae1d575a17ea58fbb99ca232baddcc4e0eeea180e84cbc74b0c348b31\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4e0968705bad99747a8e5288aa008678c2be2f471f919dce3925a3cc4f1dee09\",\"dweb:/ipfs/QmbAFnCQfo4tw6ssfQSjhA5LzwHWNNryXN8bX7ty8jiqqn\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"contracts/RewardToken.sol\":{\"keccak256\":\"0x41ff0f1c961168e5bce46e27b0ff13a5623361533d46272df499c761e5920a47\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://daa4a269e66c6dc837c389472d53603e751cb9ad70eaf5631b204ad110f65558\",\"dweb:/ipfs/QmVYYQFeUU8bgroTcLHN3mmSoJGHiLPQp432VDYgdAcHUw\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 654,
								"contract": "contracts/RewardToken.sol:RewardToken",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 660,
								"contract": "contracts/RewardToken.sol:RewardToken",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 662,
								"contract": "contracts/RewardToken.sol:RewardToken",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 664,
								"contract": "contracts/RewardToken.sol:RewardToken",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 666,
								"contract": "contracts/RewardToken.sol:RewardToken",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/StakeToken.sol": {
				"StakeToken": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "mint",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/StakeToken.sol\":118:281  contract StakeToken is ERC20{... */\n  mstore(0x40, 0x80)\n    /* \"contracts/StakeToken.sol\":153:194  constructor() ERC20(\"StakeToken\",\"STK\"){} */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1601:1714  constructor(string memory name_, string memory symbol_) {... */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x0a\n  dup2\n  mstore\n  0x20\n  add\n  0x5374616b65546f6b656e00000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x03\n  dup2\n  mstore\n  0x20\n  add\n  0x53544b0000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1675:1680  name_ */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1667:1672  _name */\n  0x03\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1667:1680  _name = name_ */\n  swap1\n  dup2\n  tag_5\n  swap2\n  swap1\n  tag_6\n  jump\t// in\ntag_5:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1700:1707  symbol_ */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1690:1697  _symbol */\n  0x04\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1690:1707  _symbol = symbol_ */\n  swap1\n  dup2\n  tag_7\n  swap2\n  swap1\n  tag_6\n  jump\t// in\ntag_7:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1601:1714  constructor(string memory name_, string memory symbol_) {... */\n  pop\n  pop\n    /* \"contracts/StakeToken.sol\":118:281  contract StakeToken is ERC20{... */\n  jump(tag_9)\n    /* \"#utility.yul\":7:106   */\ntag_10:\n    /* \"#utility.yul\":59:65   */\n  0x00\n    /* \"#utility.yul\":93:98   */\n  dup2\n    /* \"#utility.yul\":87:99   */\n  mload\n    /* \"#utility.yul\":77:99   */\n  swap1\n  pop\n    /* \"#utility.yul\":7:106   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":112:292   */\ntag_11:\n    /* \"#utility.yul\":160:237   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":157:158   */\n  0x00\n    /* \"#utility.yul\":150:238   */\n  mstore\n    /* \"#utility.yul\":257:261   */\n  0x41\n    /* \"#utility.yul\":254:255   */\n  0x04\n    /* \"#utility.yul\":247:262   */\n  mstore\n    /* \"#utility.yul\":281:285   */\n  0x24\n    /* \"#utility.yul\":278:279   */\n  0x00\n    /* \"#utility.yul\":271:286   */\n  revert\n    /* \"#utility.yul\":298:478   */\ntag_12:\n    /* \"#utility.yul\":346:423   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":343:344   */\n  0x00\n    /* \"#utility.yul\":336:424   */\n  mstore\n    /* \"#utility.yul\":443:447   */\n  0x22\n    /* \"#utility.yul\":440:441   */\n  0x04\n    /* \"#utility.yul\":433:448   */\n  mstore\n    /* \"#utility.yul\":467:471   */\n  0x24\n    /* \"#utility.yul\":464:465   */\n  0x00\n    /* \"#utility.yul\":457:472   */\n  revert\n    /* \"#utility.yul\":484:804   */\ntag_13:\n    /* \"#utility.yul\":528:534   */\n  0x00\n    /* \"#utility.yul\":565:566   */\n  0x02\n    /* \"#utility.yul\":559:563   */\n  dup3\n    /* \"#utility.yul\":555:567   */\n  div\n    /* \"#utility.yul\":545:567   */\n  swap1\n  pop\n    /* \"#utility.yul\":612:613   */\n  0x01\n    /* \"#utility.yul\":606:610   */\n  dup3\n    /* \"#utility.yul\":602:614   */\n  and\n    /* \"#utility.yul\":633:651   */\n  dup1\n    /* \"#utility.yul\":623:704   */\n  tag_35\n  jumpi\n    /* \"#utility.yul\":689:693   */\n  0x7f\n    /* \"#utility.yul\":681:687   */\n  dup3\n    /* \"#utility.yul\":677:694   */\n  and\n    /* \"#utility.yul\":667:694   */\n  swap2\n  pop\n    /* \"#utility.yul\":623:704   */\ntag_35:\n    /* \"#utility.yul\":751:753   */\n  0x20\n    /* \"#utility.yul\":743:749   */\n  dup3\n    /* \"#utility.yul\":740:754   */\n  lt\n    /* \"#utility.yul\":720:738   */\n  dup2\n    /* \"#utility.yul\":717:755   */\n  sub\n    /* \"#utility.yul\":714:798   */\n  tag_36\n  jumpi\n    /* \"#utility.yul\":770:788   */\n  tag_37\n  tag_12\n  jump\t// in\ntag_37:\n    /* \"#utility.yul\":714:798   */\ntag_36:\n    /* \"#utility.yul\":535:804   */\n  pop\n    /* \"#utility.yul\":484:804   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":810:951   */\ntag_14:\n    /* \"#utility.yul\":859:863   */\n  0x00\n    /* \"#utility.yul\":882:885   */\n  dup2\n    /* \"#utility.yul\":874:885   */\n  swap1\n  pop\n    /* \"#utility.yul\":905:908   */\n  dup2\n    /* \"#utility.yul\":902:903   */\n  0x00\n    /* \"#utility.yul\":895:909   */\n  mstore\n    /* \"#utility.yul\":939:943   */\n  0x20\n    /* \"#utility.yul\":936:937   */\n  0x00\n    /* \"#utility.yul\":926:944   */\n  keccak256\n    /* \"#utility.yul\":918:944   */\n  swap1\n  pop\n    /* \"#utility.yul\":810:951   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":957:1050   */\ntag_15:\n    /* \"#utility.yul\":994:1000   */\n  0x00\n    /* \"#utility.yul\":1041:1043   */\n  0x20\n    /* \"#utility.yul\":1036:1038   */\n  0x1f\n    /* \"#utility.yul\":1029:1034   */\n  dup4\n    /* \"#utility.yul\":1025:1039   */\n  add\n    /* \"#utility.yul\":1021:1044   */\n  div\n    /* \"#utility.yul\":1011:1044   */\n  swap1\n  pop\n    /* \"#utility.yul\":957:1050   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1056:1163   */\ntag_16:\n    /* \"#utility.yul\":1100:1108   */\n  0x00\n    /* \"#utility.yul\":1150:1155   */\n  dup3\n    /* \"#utility.yul\":1144:1148   */\n  dup3\n    /* \"#utility.yul\":1140:1156   */\n  shl\n    /* \"#utility.yul\":1119:1156   */\n  swap1\n  pop\n    /* \"#utility.yul\":1056:1163   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1169:1562   */\ntag_17:\n    /* \"#utility.yul\":1238:1244   */\n  0x00\n    /* \"#utility.yul\":1288:1289   */\n  0x08\n    /* \"#utility.yul\":1276:1286   */\n  dup4\n    /* \"#utility.yul\":1272:1290   */\n  mul\n    /* \"#utility.yul\":1311:1408   */\n  tag_42\n    /* \"#utility.yul\":1341:1407   */\n  0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":1330:1339   */\n  dup3\n    /* \"#utility.yul\":1311:1408   */\n  tag_16\n  jump\t// in\ntag_42:\n    /* \"#utility.yul\":1429:1468   */\n  tag_43\n    /* \"#utility.yul\":1459:1467   */\n  dup7\n    /* \"#utility.yul\":1448:1457   */\n  dup4\n    /* \"#utility.yul\":1429:1468   */\n  tag_16\n  jump\t// in\ntag_43:\n    /* \"#utility.yul\":1417:1468   */\n  swap6\n  pop\n    /* \"#utility.yul\":1501:1505   */\n  dup1\n    /* \"#utility.yul\":1497:1506   */\n  not\n    /* \"#utility.yul\":1490:1495   */\n  dup5\n    /* \"#utility.yul\":1486:1507   */\n  and\n    /* \"#utility.yul\":1477:1507   */\n  swap4\n  pop\n    /* \"#utility.yul\":1550:1554   */\n  dup1\n    /* \"#utility.yul\":1540:1548   */\n  dup7\n    /* \"#utility.yul\":1536:1555   */\n  and\n    /* \"#utility.yul\":1529:1534   */\n  dup5\n    /* \"#utility.yul\":1526:1556   */\n  or\n    /* \"#utility.yul\":1516:1556   */\n  swap3\n  pop\n    /* \"#utility.yul\":1245:1562   */\n  pop\n  pop\n    /* \"#utility.yul\":1169:1562   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1568:1645   */\ntag_18:\n    /* \"#utility.yul\":1605:1612   */\n  0x00\n    /* \"#utility.yul\":1634:1639   */\n  dup2\n    /* \"#utility.yul\":1623:1639   */\n  swap1\n  pop\n    /* \"#utility.yul\":1568:1645   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1651:1711   */\ntag_19:\n    /* \"#utility.yul\":1679:1682   */\n  0x00\n    /* \"#utility.yul\":1700:1705   */\n  dup2\n    /* \"#utility.yul\":1693:1705   */\n  swap1\n  pop\n    /* \"#utility.yul\":1651:1711   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1717:1859   */\ntag_20:\n    /* \"#utility.yul\":1767:1776   */\n  0x00\n    /* \"#utility.yul\":1800:1853   */\n  tag_47\n    /* \"#utility.yul\":1818:1852   */\n  tag_48\n    /* \"#utility.yul\":1827:1851   */\n  tag_49\n    /* \"#utility.yul\":1845:1850   */\n  dup5\n    /* \"#utility.yul\":1827:1851   */\n  tag_18\n  jump\t// in\ntag_49:\n    /* \"#utility.yul\":1818:1852   */\n  tag_19\n  jump\t// in\ntag_48:\n    /* \"#utility.yul\":1800:1853   */\n  tag_18\n  jump\t// in\ntag_47:\n    /* \"#utility.yul\":1787:1853   */\n  swap1\n  pop\n    /* \"#utility.yul\":1717:1859   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1865:1940   */\ntag_21:\n    /* \"#utility.yul\":1908:1911   */\n  0x00\n    /* \"#utility.yul\":1929:1934   */\n  dup2\n    /* \"#utility.yul\":1922:1934   */\n  swap1\n  pop\n    /* \"#utility.yul\":1865:1940   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1946:2215   */\ntag_22:\n    /* \"#utility.yul\":2056:2095   */\n  tag_52\n    /* \"#utility.yul\":2087:2094   */\n  dup4\n    /* \"#utility.yul\":2056:2095   */\n  tag_20\n  jump\t// in\ntag_52:\n    /* \"#utility.yul\":2117:2208   */\n  tag_53\n    /* \"#utility.yul\":2166:2207   */\n  tag_54\n    /* \"#utility.yul\":2190:2206   */\n  dup3\n    /* \"#utility.yul\":2166:2207   */\n  tag_21\n  jump\t// in\ntag_54:\n    /* \"#utility.yul\":2158:2164   */\n  dup5\n    /* \"#utility.yul\":2151:2155   */\n  dup5\n    /* \"#utility.yul\":2145:2156   */\n  sload\n    /* \"#utility.yul\":2117:2208   */\n  tag_17\n  jump\t// in\ntag_53:\n    /* \"#utility.yul\":2111:2115   */\n  dup3\n    /* \"#utility.yul\":2104:2209   */\n  sstore\n    /* \"#utility.yul\":2022:2215   */\n  pop\n    /* \"#utility.yul\":1946:2215   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2221:2294   */\ntag_23:\n    /* \"#utility.yul\":2266:2269   */\n  0x00\n    /* \"#utility.yul\":2221:2294   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":2300:2489   */\ntag_24:\n    /* \"#utility.yul\":2377:2409   */\n  tag_57\n  tag_23\n  jump\t// in\ntag_57:\n    /* \"#utility.yul\":2418:2483   */\n  tag_58\n    /* \"#utility.yul\":2476:2482   */\n  dup2\n    /* \"#utility.yul\":2468:2474   */\n  dup5\n    /* \"#utility.yul\":2462:2466   */\n  dup5\n    /* \"#utility.yul\":2418:2483   */\n  tag_22\n  jump\t// in\ntag_58:\n    /* \"#utility.yul\":2353:2489   */\n  pop\n    /* \"#utility.yul\":2300:2489   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2495:2681   */\ntag_25:\n    /* \"#utility.yul\":2555:2675   */\ntag_60:\n    /* \"#utility.yul\":2572:2575   */\n  dup2\n    /* \"#utility.yul\":2565:2570   */\n  dup2\n    /* \"#utility.yul\":2562:2576   */\n  lt\n    /* \"#utility.yul\":2555:2675   */\n  iszero\n  tag_62\n  jumpi\n    /* \"#utility.yul\":2626:2665   */\n  tag_63\n    /* \"#utility.yul\":2663:2664   */\n  0x00\n    /* \"#utility.yul\":2656:2661   */\n  dup3\n    /* \"#utility.yul\":2626:2665   */\n  tag_24\n  jump\t// in\ntag_63:\n    /* \"#utility.yul\":2599:2600   */\n  0x01\n    /* \"#utility.yul\":2592:2597   */\n  dup2\n    /* \"#utility.yul\":2588:2601   */\n  add\n    /* \"#utility.yul\":2579:2601   */\n  swap1\n  pop\n    /* \"#utility.yul\":2555:2675   */\n  jump(tag_60)\ntag_62:\n    /* \"#utility.yul\":2495:2681   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2687:3230   */\ntag_26:\n    /* \"#utility.yul\":2788:2790   */\n  0x1f\n    /* \"#utility.yul\":2783:2786   */\n  dup3\n    /* \"#utility.yul\":2780:2791   */\n  gt\n    /* \"#utility.yul\":2777:3223   */\n  iszero\n  tag_65\n  jumpi\n    /* \"#utility.yul\":2822:2860   */\n  tag_66\n    /* \"#utility.yul\":2854:2859   */\n  dup2\n    /* \"#utility.yul\":2822:2860   */\n  tag_14\n  jump\t// in\ntag_66:\n    /* \"#utility.yul\":2906:2935   */\n  tag_67\n    /* \"#utility.yul\":2924:2934   */\n  dup5\n    /* \"#utility.yul\":2906:2935   */\n  tag_15\n  jump\t// in\ntag_67:\n    /* \"#utility.yul\":2896:2904   */\n  dup2\n    /* \"#utility.yul\":2892:2936   */\n  add\n    /* \"#utility.yul\":3089:3091   */\n  0x20\n    /* \"#utility.yul\":3077:3087   */\n  dup6\n    /* \"#utility.yul\":3074:3092   */\n  lt\n    /* \"#utility.yul\":3071:3120   */\n  iszero\n  tag_68\n  jumpi\n    /* \"#utility.yul\":3110:3118   */\n  dup2\n    /* \"#utility.yul\":3095:3118   */\n  swap1\n  pop\n    /* \"#utility.yul\":3071:3120   */\ntag_68:\n    /* \"#utility.yul\":3133:3213   */\n  tag_69\n    /* \"#utility.yul\":3189:3211   */\n  tag_70\n    /* \"#utility.yul\":3207:3210   */\n  dup6\n    /* \"#utility.yul\":3189:3211   */\n  tag_15\n  jump\t// in\ntag_70:\n    /* \"#utility.yul\":3179:3187   */\n  dup4\n    /* \"#utility.yul\":3175:3212   */\n  add\n    /* \"#utility.yul\":3162:3173   */\n  dup3\n    /* \"#utility.yul\":3133:3213   */\n  tag_25\n  jump\t// in\ntag_69:\n    /* \"#utility.yul\":2792:3223   */\n  pop\n  pop\n    /* \"#utility.yul\":2777:3223   */\ntag_65:\n    /* \"#utility.yul\":2687:3230   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3236:3353   */\ntag_27:\n    /* \"#utility.yul\":3290:3298   */\n  0x00\n    /* \"#utility.yul\":3340:3345   */\n  dup3\n    /* \"#utility.yul\":3334:3338   */\n  dup3\n    /* \"#utility.yul\":3330:3346   */\n  shr\n    /* \"#utility.yul\":3309:3346   */\n  swap1\n  pop\n    /* \"#utility.yul\":3236:3353   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3359:3528   */\ntag_28:\n    /* \"#utility.yul\":3403:3409   */\n  0x00\n    /* \"#utility.yul\":3436:3487   */\n  tag_73\n    /* \"#utility.yul\":3484:3485   */\n  0x00\n    /* \"#utility.yul\":3480:3486   */\n  not\n    /* \"#utility.yul\":3472:3477   */\n  dup5\n    /* \"#utility.yul\":3469:3470   */\n  0x08\n    /* \"#utility.yul\":3465:3478   */\n  mul\n    /* \"#utility.yul\":3436:3487   */\n  tag_27\n  jump\t// in\ntag_73:\n    /* \"#utility.yul\":3432:3488   */\n  not\n    /* \"#utility.yul\":3517:3521   */\n  dup1\n    /* \"#utility.yul\":3511:3515   */\n  dup4\n    /* \"#utility.yul\":3507:3522   */\n  and\n    /* \"#utility.yul\":3497:3522   */\n  swap2\n  pop\n    /* \"#utility.yul\":3410:3528   */\n  pop\n    /* \"#utility.yul\":3359:3528   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3533:3828   */\ntag_29:\n    /* \"#utility.yul\":3609:3613   */\n  0x00\n    /* \"#utility.yul\":3755:3784   */\n  tag_75\n    /* \"#utility.yul\":3780:3783   */\n  dup4\n    /* \"#utility.yul\":3774:3778   */\n  dup4\n    /* \"#utility.yul\":3755:3784   */\n  tag_28\n  jump\t// in\ntag_75:\n    /* \"#utility.yul\":3747:3784   */\n  swap2\n  pop\n    /* \"#utility.yul\":3817:3820   */\n  dup3\n    /* \"#utility.yul\":3814:3815   */\n  0x02\n    /* \"#utility.yul\":3810:3821   */\n  mul\n    /* \"#utility.yul\":3804:3808   */\n  dup3\n    /* \"#utility.yul\":3801:3822   */\n  or\n    /* \"#utility.yul\":3793:3822   */\n  swap1\n  pop\n    /* \"#utility.yul\":3533:3828   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3833:5228   */\ntag_6:\n    /* \"#utility.yul\":3950:3987   */\n  tag_77\n    /* \"#utility.yul\":3983:3986   */\n  dup3\n    /* \"#utility.yul\":3950:3987   */\n  tag_10\n  jump\t// in\ntag_77:\n    /* \"#utility.yul\":4052:4070   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":4044:4050   */\n  dup2\n    /* \"#utility.yul\":4041:4071   */\n  gt\n    /* \"#utility.yul\":4038:4094   */\n  iszero\n  tag_78\n  jumpi\n    /* \"#utility.yul\":4074:4092   */\n  tag_79\n  tag_11\n  jump\t// in\ntag_79:\n    /* \"#utility.yul\":4038:4094   */\ntag_78:\n    /* \"#utility.yul\":4118:4156   */\n  tag_80\n    /* \"#utility.yul\":4150:4154   */\n  dup3\n    /* \"#utility.yul\":4144:4155   */\n  sload\n    /* \"#utility.yul\":4118:4156   */\n  tag_13\n  jump\t// in\ntag_80:\n    /* \"#utility.yul\":4203:4270   */\n  tag_81\n    /* \"#utility.yul\":4263:4269   */\n  dup3\n    /* \"#utility.yul\":4255:4261   */\n  dup3\n    /* \"#utility.yul\":4249:4253   */\n  dup6\n    /* \"#utility.yul\":4203:4270   */\n  tag_26\n  jump\t// in\ntag_81:\n    /* \"#utility.yul\":4297:4298   */\n  0x00\n    /* \"#utility.yul\":4321:4325   */\n  0x20\n    /* \"#utility.yul\":4308:4325   */\n  swap1\n  pop\n    /* \"#utility.yul\":4353:4355   */\n  0x1f\n    /* \"#utility.yul\":4345:4351   */\n  dup4\n    /* \"#utility.yul\":4342:4356   */\n  gt\n    /* \"#utility.yul\":4370:4371   */\n  0x01\n    /* \"#utility.yul\":4365:4983   */\n  dup2\n  eq\n  tag_83\n  jumpi\n    /* \"#utility.yul\":5027:5028   */\n  0x00\n    /* \"#utility.yul\":5044:5050   */\n  dup5\n    /* \"#utility.yul\":5041:5118   */\n  iszero\n  tag_84\n  jumpi\n    /* \"#utility.yul\":5093:5102   */\n  dup3\n    /* \"#utility.yul\":5088:5091   */\n  dup8\n    /* \"#utility.yul\":5084:5103   */\n  add\n    /* \"#utility.yul\":5078:5104   */\n  mload\n    /* \"#utility.yul\":5069:5104   */\n  swap1\n  pop\n    /* \"#utility.yul\":5041:5118   */\ntag_84:\n    /* \"#utility.yul\":5144:5211   */\n  tag_85\n    /* \"#utility.yul\":5204:5210   */\n  dup6\n    /* \"#utility.yul\":5197:5202   */\n  dup3\n    /* \"#utility.yul\":5144:5211   */\n  tag_29\n  jump\t// in\ntag_85:\n    /* \"#utility.yul\":5138:5142   */\n  dup7\n    /* \"#utility.yul\":5131:5212   */\n  sstore\n    /* \"#utility.yul\":5000:5222   */\n  pop\n    /* \"#utility.yul\":4335:5222   */\n  jump(tag_82)\n    /* \"#utility.yul\":4365:4983   */\ntag_83:\n    /* \"#utility.yul\":4417:4421   */\n  0x1f\n    /* \"#utility.yul\":4413:4422   */\n  not\n    /* \"#utility.yul\":4405:4411   */\n  dup5\n    /* \"#utility.yul\":4401:4423   */\n  and\n    /* \"#utility.yul\":4451:4488   */\n  tag_86\n    /* \"#utility.yul\":4483:4487   */\n  dup7\n    /* \"#utility.yul\":4451:4488   */\n  tag_14\n  jump\t// in\ntag_86:\n    /* \"#utility.yul\":4510:4511   */\n  0x00\n    /* \"#utility.yul\":4524:4732   */\ntag_87:\n    /* \"#utility.yul\":4538:4545   */\n  dup3\n    /* \"#utility.yul\":4535:4536   */\n  dup2\n    /* \"#utility.yul\":4532:4546   */\n  lt\n    /* \"#utility.yul\":4524:4732   */\n  iszero\n  tag_89\n  jumpi\n    /* \"#utility.yul\":4617:4626   */\n  dup5\n    /* \"#utility.yul\":4612:4615   */\n  dup10\n    /* \"#utility.yul\":4608:4627   */\n  add\n    /* \"#utility.yul\":4602:4628   */\n  mload\n    /* \"#utility.yul\":4594:4600   */\n  dup3\n    /* \"#utility.yul\":4587:4629   */\n  sstore\n    /* \"#utility.yul\":4668:4669   */\n  0x01\n    /* \"#utility.yul\":4660:4666   */\n  dup3\n    /* \"#utility.yul\":4656:4670   */\n  add\n    /* \"#utility.yul\":4646:4670   */\n  swap2\n  pop\n    /* \"#utility.yul\":4715:4717   */\n  0x20\n    /* \"#utility.yul\":4704:4713   */\n  dup6\n    /* \"#utility.yul\":4700:4718   */\n  add\n    /* \"#utility.yul\":4687:4718   */\n  swap5\n  pop\n    /* \"#utility.yul\":4561:4565   */\n  0x20\n    /* \"#utility.yul\":4558:4559   */\n  dup2\n    /* \"#utility.yul\":4554:4566   */\n  add\n    /* \"#utility.yul\":4549:4566   */\n  swap1\n  pop\n    /* \"#utility.yul\":4524:4732   */\n  jump(tag_87)\ntag_89:\n    /* \"#utility.yul\":4760:4766   */\n  dup7\n    /* \"#utility.yul\":4751:4758   */\n  dup4\n    /* \"#utility.yul\":4748:4767   */\n  lt\n    /* \"#utility.yul\":4745:4924   */\n  iszero\n  tag_90\n  jumpi\n    /* \"#utility.yul\":4818:4827   */\n  dup5\n    /* \"#utility.yul\":4813:4816   */\n  dup10\n    /* \"#utility.yul\":4809:4828   */\n  add\n    /* \"#utility.yul\":4803:4829   */\n  mload\n    /* \"#utility.yul\":4861:4909   */\n  tag_91\n    /* \"#utility.yul\":4903:4907   */\n  0x1f\n    /* \"#utility.yul\":4895:4901   */\n  dup10\n    /* \"#utility.yul\":4891:4908   */\n  and\n    /* \"#utility.yul\":4880:4889   */\n  dup3\n    /* \"#utility.yul\":4861:4909   */\n  tag_28\n  jump\t// in\ntag_91:\n    /* \"#utility.yul\":4853:4859   */\n  dup4\n    /* \"#utility.yul\":4846:4910   */\n  sstore\n    /* \"#utility.yul\":4768:4924   */\n  pop\n    /* \"#utility.yul\":4745:4924   */\ntag_90:\n    /* \"#utility.yul\":4970:4971   */\n  0x01\n    /* \"#utility.yul\":4966:4967   */\n  0x02\n    /* \"#utility.yul\":4958:4964   */\n  dup9\n    /* \"#utility.yul\":4954:4968   */\n  mul\n    /* \"#utility.yul\":4950:4972   */\n  add\n    /* \"#utility.yul\":4944:4948   */\n  dup9\n    /* \"#utility.yul\":4937:4973   */\n  sstore\n    /* \"#utility.yul\":4372:4983   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":4335:5222   */\ntag_82:\n  pop\n    /* \"#utility.yul\":3925:5228   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":3833:5228   */\n  pop\n  pop\n  jump\t// out\n    /* \"contracts/StakeToken.sol\":118:281  contract StakeToken is ERC20{... */\ntag_9:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/StakeToken.sol\":118:281  contract StakeToken is ERC20{... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x70a08231\n      gt\n      tag_13\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_9\n      jumpi\n      dup1\n      0xa0712d68\n      eq\n      tag_10\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_11\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_12\n      jumpi\n      jump(tag_2)\n    tag_13:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1779:1868  function name() public view virtual returns (string memory) {... */\n    tag_3:\n      tag_14\n      tag_15\n      jump\t// in\n    tag_14:\n      mload(0x40)\n      tag_16\n      swap2\n      swap1\n      tag_17\n      jump\t// in\n    tag_16:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3998:4184  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_4:\n      tag_18\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_19\n      swap2\n      swap1\n      tag_20\n      jump\t// in\n    tag_19:\n      tag_21\n      jump\t// in\n    tag_18:\n      mload(0x40)\n      tag_22\n      swap2\n      swap1\n      tag_23\n      jump\t// in\n    tag_22:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2849:2946  function totalSupply() public view virtual returns (uint256) {... */\n    tag_5:\n      tag_24\n      tag_25\n      jump\t// in\n    tag_24:\n      mload(0x40)\n      tag_26\n      swap2\n      swap1\n      tag_27\n      jump\t// in\n    tag_26:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4776:5020  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_6:\n      tag_28\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_29\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_29:\n      tag_31\n      jump\t// in\n    tag_28:\n      mload(0x40)\n      tag_32\n      swap2\n      swap1\n      tag_23\n      jump\t// in\n    tag_32:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2707:2789  function decimals() public view virtual returns (uint8) {... */\n    tag_7:\n      tag_33\n      tag_34\n      jump\t// in\n    tag_33:\n      mload(0x40)\n      tag_35\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_35:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3004:3120  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_8:\n      tag_37\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_38\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_38:\n      tag_40\n      jump\t// in\n    tag_37:\n      mload(0x40)\n      tag_41\n      swap2\n      swap1\n      tag_27\n      jump\t// in\n    tag_41:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1981:2074  function symbol() public view virtual returns (string memory) {... */\n    tag_9:\n      tag_42\n      tag_43\n      jump\t// in\n    tag_42:\n      mload(0x40)\n      tag_44\n      swap2\n      swap1\n      tag_17\n      jump\t// in\n    tag_44:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/StakeToken.sol\":202:278  function mint(uint amount) public{... */\n    tag_10:\n      tag_45\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_46\n      swap2\n      swap1\n      tag_47\n      jump\t// in\n    tag_46:\n      tag_48\n      jump\t// in\n    tag_45:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3315:3493  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_11:\n      tag_49\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_50\n      swap2\n      swap1\n      tag_20\n      jump\t// in\n    tag_50:\n      tag_51\n      jump\t// in\n    tag_49:\n      mload(0x40)\n      tag_52\n      swap2\n      swap1\n      tag_23\n      jump\t// in\n    tag_52:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3551:3691  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_12:\n      tag_53\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_54\n      swap2\n      swap1\n      tag_55\n      jump\t// in\n    tag_54:\n      tag_56\n      jump\t// in\n    tag_53:\n      mload(0x40)\n      tag_57\n      swap2\n      swap1\n      tag_27\n      jump\t// in\n    tag_57:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1779:1868  function name() public view virtual returns (string memory) {... */\n    tag_15:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1824:1837  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1856:1861  _name */\n      0x03\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1849:1861  return _name */\n      dup1\n      sload\n      tag_59\n      swap1\n      tag_60\n      jump\t// in\n    tag_59:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_61\n      swap1\n      tag_60\n      jump\t// in\n    tag_61:\n      dup1\n      iszero\n      tag_62\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_63\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_62)\n    tag_63:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_64:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_64\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_62:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1779:1868  function name() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3998:4184  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_21:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4071:4075  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4087:4100  address owner */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4103:4115  _msgSender() */\n      tag_66\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4103:4113  _msgSender */\n      tag_67\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4103:4115  _msgSender() */\n      jump\t// in\n    tag_66:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4087:4115  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4125:4156  _approve(owner, spender, value) */\n      tag_68\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4134:4139  owner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4141:4148  spender */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4150:4155  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4125:4133  _approve */\n      tag_69\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4125:4156  _approve(owner, spender, value) */\n      jump\t// in\n    tag_68:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4173:4177  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4166:4177  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3998:4184  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2849:2946  function totalSupply() public view virtual returns (uint256) {... */\n    tag_25:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2901:2908  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2927:2939  _totalSupply */\n      sload(0x02)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2920:2939  return _totalSupply */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2849:2946  function totalSupply() public view virtual returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4776:5020  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_31:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4863:4867  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4879:4894  address spender */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4897:4909  _msgSender() */\n      tag_72\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4897:4907  _msgSender */\n      tag_67\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4897:4909  _msgSender() */\n      jump\t// in\n    tag_72:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4879:4909  address spender = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4919:4956  _spendAllowance(from, spender, value) */\n      tag_73\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4935:4939  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4941:4948  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4950:4955  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4919:4934  _spendAllowance */\n      tag_74\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4919:4956  _spendAllowance(from, spender, value) */\n      jump\t// in\n    tag_73:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4966:4992  _transfer(from, to, value) */\n      tag_75\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4976:4980  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4982:4984  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4986:4991  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4966:4975  _transfer */\n      tag_76\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4966:4992  _transfer(from, to, value) */\n      jump\t// in\n    tag_75:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5009:5013  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5002:5013  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4776:5020  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2707:2789  function decimals() public view virtual returns (uint8) {... */\n    tag_34:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2756:2761  uint8 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2780:2782  18 */\n      0x12\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2773:2782  return 18 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2707:2789  function decimals() public view virtual returns (uint8) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3004:3120  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_40:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3069:3076  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3095:3104  _balances */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3095:3113  _balances[account] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3105:3112  account */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3095:3113  _balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3088:3113  return _balances[account] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3004:3120  function balanceOf(address account) public view virtual returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1981:2074  function symbol() public view virtual returns (string memory) {... */\n    tag_43:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2028:2041  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2060:2067  _symbol */\n      0x04\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2053:2067  return _symbol */\n      dup1\n      sload\n      tag_80\n      swap1\n      tag_60\n      jump\t// in\n    tag_80:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_81\n      swap1\n      tag_60\n      jump\t// in\n    tag_81:\n      dup1\n      iszero\n      tag_82\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_83\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_82)\n    tag_83:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_84:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_84\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_82:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1981:2074  function symbol() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/StakeToken.sol\":202:278  function mint(uint amount) public{... */\n    tag_48:\n        /* \"contracts/StakeToken.sol\":246:270  _mint(msg.sender,amount) */\n      tag_86\n        /* \"contracts/StakeToken.sol\":252:262  msg.sender */\n      caller\n        /* \"contracts/StakeToken.sol\":263:269  amount */\n      dup3\n        /* \"contracts/StakeToken.sol\":246:251  _mint */\n      tag_87\n        /* \"contracts/StakeToken.sol\":246:270  _mint(msg.sender,amount) */\n      jump\t// in\n    tag_86:\n        /* \"contracts/StakeToken.sol\":202:278  function mint(uint amount) public{... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3315:3493  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_51:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3384:3388  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3400:3413  address owner */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3416:3428  _msgSender() */\n      tag_89\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3416:3426  _msgSender */\n      tag_67\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3416:3428  _msgSender() */\n      jump\t// in\n    tag_89:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3400:3428  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3438:3465  _transfer(owner, to, value) */\n      tag_90\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3448:3453  owner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3455:3457  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3459:3464  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3438:3447  _transfer */\n      tag_76\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3438:3465  _transfer(owner, to, value) */\n      jump\t// in\n    tag_90:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3482:3486  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3475:3486  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3315:3493  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3551:3691  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_56:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3631:3638  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3657:3668  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3657:3675  _allowances[owner] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3669:3674  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3657:3675  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3657:3684  _allowances[owner][spender] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3676:3683  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3657:3684  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3650:3684  return _allowances[owner][spender] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3551:3691  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n    tag_67:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":709:716  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":728:745  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8726:8854  function _approve(address owner, address spender, uint256 value) internal {... */\n    tag_69:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8810:8847  _approve(owner, spender, value, true) */\n      tag_94\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8819:8824  owner */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8826:8833  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8835:8840  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8842:8846  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8810:8818  _approve */\n      tag_95\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8810:8847  _approve(owner, spender, value, true) */\n      jump\t// in\n    tag_94:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8726:8854  function _approve(address owner, address spender, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10415:10892  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n    tag_74:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10514:10538  uint256 currentAllowance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10541:10566  allowance(owner, spender) */\n      tag_97\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10551:10556  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10558:10565  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10541:10550  allowance */\n      tag_56\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10541:10566  allowance(owner, spender) */\n      jump\t// in\n    tag_97:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10514:10566  uint256 currentAllowance = allowance(owner, spender) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10600:10617  type(uint256).max */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10580:10596  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10580:10617  currentAllowance != type(uint256).max */\n      eq\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10576:10886  if (currentAllowance != type(uint256).max) {... */\n      tag_98\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10656:10661  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10637:10653  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10637:10661  currentAllowance < value */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10633:10763  if (currentAllowance < value) {... */\n      iszero\n      tag_99\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10715:10722  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10724:10740  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10742:10747  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10688:10748  ERC20InsufficientAllowance(spender, currentAllowance, value) */\n      mload(0x40)\n      0xfb8f41b200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_100\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_101\n      jump\t// in\n    tag_100:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10633:10763  if (currentAllowance < value) {... */\n    tag_99:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10804:10861  _approve(owner, spender, currentAllowance - value, false) */\n      tag_102\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10813:10818  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10820:10827  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10848:10853  value */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10829:10845  currentAllowance */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10829:10853  currentAllowance - value */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10855:10860  false */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10804:10812  _approve */\n      tag_95\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10804:10861  _approve(owner, spender, currentAllowance - value, false) */\n      jump\t// in\n    tag_102:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10576:10886  if (currentAllowance != type(uint256).max) {... */\n    tag_98:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10504:10892  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10415:10892  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5393:5693  function _transfer(address from, address to, uint256 value) internal {... */\n    tag_76:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5492:5493  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5476:5494  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5476:5480  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5476:5494  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5472:5558  if (from == address(0)) {... */\n      tag_104\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5544:5545  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5517:5547  ERC20InvalidSender(address(0)) */\n      mload(0x40)\n      0x96c6fd1e00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_105\n      swap2\n      swap1\n      tag_106\n      jump\t// in\n    tag_105:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5472:5558  if (from == address(0)) {... */\n    tag_104:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5585:5586  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5571:5587  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5571:5573  to */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5571:5587  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5567:5653  if (to == address(0)) {... */\n      tag_107\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5639:5640  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5610:5642  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      0xec442f0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_108\n      swap2\n      swap1\n      tag_106\n      jump\t// in\n    tag_108:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5567:5653  if (to == address(0)) {... */\n    tag_107:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5662:5686  _update(from, to, value) */\n      tag_109\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5670:5674  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5676:5678  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5680:5685  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5662:5669  _update */\n      tag_110\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5662:5686  _update(from, to, value) */\n      jump\t// in\n    tag_109:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5393:5693  function _transfer(address from, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7458:7666  function _mint(address account, uint256 value) internal {... */\n    tag_87:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7547:7548  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7528:7549  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7528:7535  account */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7528:7549  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7524:7615  if (account == address(0)) {... */\n      tag_112\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7601:7602  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7572:7604  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      0xec442f0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_113\n      swap2\n      swap1\n      tag_106\n      jump\t// in\n    tag_113:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7524:7615  if (account == address(0)) {... */\n    tag_112:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7624:7659  _update(address(0), account, value) */\n      tag_114\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7640:7641  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7644:7651  account */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7653:7658  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7624:7631  _update */\n      tag_110\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7624:7659  _update(address(0), account, value) */\n      jump\t// in\n    tag_114:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7458:7666  function _mint(address account, uint256 value) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9701:10133  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n    tag_95:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9830:9831  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9813:9832  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9813:9818  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9813:9832  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9809:9898  if (owner == address(0)) {... */\n      tag_116\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9884:9885  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9855:9887  ERC20InvalidApprover(address(0)) */\n      mload(0x40)\n      0xe602df0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_117\n      swap2\n      swap1\n      tag_106\n      jump\t// in\n    tag_117:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9809:9898  if (owner == address(0)) {... */\n    tag_116:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9930:9931  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9911:9932  spender == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9911:9918  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9911:9932  spender == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9907:9997  if (spender == address(0)) {... */\n      tag_118\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9983:9984  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9955:9986  ERC20InvalidSpender(address(0)) */\n      mload(0x40)\n      0x94280d6200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_119\n      swap2\n      swap1\n      tag_106\n      jump\t// in\n    tag_119:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9907:9997  if (spender == address(0)) {... */\n    tag_118:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10036:10041  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10006:10017  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10006:10024  _allowances[owner] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10018:10023  owner */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10006:10024  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10006:10033  _allowances[owner][spender] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10025:10032  spender */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10006:10033  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10006:10041  _allowances[owner][spender] = value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10055:10064  emitEvent */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10051:10127  if (emitEvent) {... */\n      iszero\n      tag_120\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10101:10108  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10085:10116  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10094:10099  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10085:10116  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10110:10115  value */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10085:10116  Approval(owner, spender, value) */\n      mload(0x40)\n      tag_121\n      swap2\n      swap1\n      tag_27\n      jump\t// in\n    tag_121:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10051:10127  if (emitEvent) {... */\n    tag_120:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9701:10133  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6008:7115  function _update(address from, address to, uint256 value) internal virtual {... */\n    tag_110:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6113:6114  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6097:6115  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6097:6101  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6097:6115  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6093:6633  if (from == address(0)) {... */\n      tag_123\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6249:6254  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6233:6245  _totalSupply */\n      0x02\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6233:6254  _totalSupply += value */\n      dup3\n      dup3\n      sload\n      tag_124\n      swap2\n      swap1\n      tag_125\n      jump\t// in\n    tag_124:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6093:6633  if (from == address(0)) {... */\n      jump(tag_126)\n    tag_123:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6285:6304  uint256 fromBalance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6307:6316  _balances */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6307:6322  _balances[from] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6317:6321  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6307:6322  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6285:6322  uint256 fromBalance = _balances[from] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6354:6359  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6340:6351  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6340:6359  fromBalance < value */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6336:6451  if (fromBalance < value) {... */\n      iszero\n      tag_127\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6411:6415  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6417:6428  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6430:6435  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6386:6436  ERC20InsufficientBalance(from, fromBalance, value) */\n      mload(0x40)\n      0xe450d38c00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_128\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_101\n      jump\t// in\n    tag_128:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6336:6451  if (fromBalance < value) {... */\n    tag_127:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6603:6608  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6589:6600  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6589:6608  fromBalance - value */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6571:6580  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6571:6586  _balances[from] */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6581:6585  from */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6571:6586  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6571:6608  _balances[from] = fromBalance - value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6271:6633  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6093:6633  if (from == address(0)) {... */\n    tag_126:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6661:6662  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6647:6663  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6647:6649  to */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6647:6663  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6643:7068  if (to == address(0)) {... */\n      tag_129\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6826:6831  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6810:6822  _totalSupply */\n      0x02\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6810:6831  _totalSupply -= value */\n      dup3\n      dup3\n      sload\n      sub\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6643:7068  if (to == address(0)) {... */\n      jump(tag_130)\n    tag_129:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7038:7043  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7021:7030  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7021:7034  _balances[to] */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7031:7033  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7021:7034  _balances[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7021:7043  _balances[to] += value */\n      dup3\n      dup3\n      sload\n      add\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6643:7068  if (to == address(0)) {... */\n    tag_130:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7098:7100  to */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7083:7108  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7092:7096  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7083:7108  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7102:7107  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7083:7108  Transfer(from, to, value) */\n      mload(0x40)\n      tag_131\n      swap2\n      swap1\n      tag_27\n      jump\t// in\n    tag_131:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6008:7115  function _update(address from, address to, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:106   */\n    tag_132:\n        /* \"#utility.yul\":59:65   */\n      0x00\n        /* \"#utility.yul\":93:98   */\n      dup2\n        /* \"#utility.yul\":87:99   */\n      mload\n        /* \"#utility.yul\":77:99   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:106   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":112:281   */\n    tag_133:\n        /* \"#utility.yul\":196:207   */\n      0x00\n        /* \"#utility.yul\":230:236   */\n      dup3\n        /* \"#utility.yul\":225:228   */\n      dup3\n        /* \"#utility.yul\":218:237   */\n      mstore\n        /* \"#utility.yul\":270:274   */\n      0x20\n        /* \"#utility.yul\":265:268   */\n      dup3\n        /* \"#utility.yul\":261:275   */\n      add\n        /* \"#utility.yul\":246:275   */\n      swap1\n      pop\n        /* \"#utility.yul\":112:281   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":287:426   */\n    tag_134:\n        /* \"#utility.yul\":376:382   */\n      dup3\n        /* \"#utility.yul\":371:374   */\n      dup2\n        /* \"#utility.yul\":366:369   */\n      dup4\n        /* \"#utility.yul\":360:383   */\n      mcopy\n        /* \"#utility.yul\":417:418   */\n      0x00\n        /* \"#utility.yul\":408:414   */\n      dup4\n        /* \"#utility.yul\":403:406   */\n      dup4\n        /* \"#utility.yul\":399:415   */\n      add\n        /* \"#utility.yul\":392:419   */\n      mstore\n        /* \"#utility.yul\":287:426   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":432:534   */\n    tag_135:\n        /* \"#utility.yul\":473:479   */\n      0x00\n        /* \"#utility.yul\":524:526   */\n      0x1f\n        /* \"#utility.yul\":520:527   */\n      not\n        /* \"#utility.yul\":515:517   */\n      0x1f\n        /* \"#utility.yul\":508:513   */\n      dup4\n        /* \"#utility.yul\":504:518   */\n      add\n        /* \"#utility.yul\":500:528   */\n      and\n        /* \"#utility.yul\":490:528   */\n      swap1\n      pop\n        /* \"#utility.yul\":432:534   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":540:917   */\n    tag_136:\n        /* \"#utility.yul\":628:631   */\n      0x00\n        /* \"#utility.yul\":656:695   */\n      tag_161\n        /* \"#utility.yul\":689:694   */\n      dup3\n        /* \"#utility.yul\":656:695   */\n      tag_132\n      jump\t// in\n    tag_161:\n        /* \"#utility.yul\":711:782   */\n      tag_162\n        /* \"#utility.yul\":775:781   */\n      dup2\n        /* \"#utility.yul\":770:773   */\n      dup6\n        /* \"#utility.yul\":711:782   */\n      tag_133\n      jump\t// in\n    tag_162:\n        /* \"#utility.yul\":704:782   */\n      swap4\n      pop\n        /* \"#utility.yul\":791:856   */\n      tag_163\n        /* \"#utility.yul\":849:855   */\n      dup2\n        /* \"#utility.yul\":844:847   */\n      dup6\n        /* \"#utility.yul\":837:841   */\n      0x20\n        /* \"#utility.yul\":830:835   */\n      dup7\n        /* \"#utility.yul\":826:842   */\n      add\n        /* \"#utility.yul\":791:856   */\n      tag_134\n      jump\t// in\n    tag_163:\n        /* \"#utility.yul\":881:910   */\n      tag_164\n        /* \"#utility.yul\":903:909   */\n      dup2\n        /* \"#utility.yul\":881:910   */\n      tag_135\n      jump\t// in\n    tag_164:\n        /* \"#utility.yul\":876:879   */\n      dup5\n        /* \"#utility.yul\":872:911   */\n      add\n        /* \"#utility.yul\":865:911   */\n      swap2\n      pop\n        /* \"#utility.yul\":632:917   */\n      pop\n        /* \"#utility.yul\":540:917   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":923:1236   */\n    tag_17:\n        /* \"#utility.yul\":1036:1040   */\n      0x00\n        /* \"#utility.yul\":1074:1076   */\n      0x20\n        /* \"#utility.yul\":1063:1072   */\n      dup3\n        /* \"#utility.yul\":1059:1077   */\n      add\n        /* \"#utility.yul\":1051:1077   */\n      swap1\n      pop\n        /* \"#utility.yul\":1123:1132   */\n      dup2\n        /* \"#utility.yul\":1117:1121   */\n      dup2\n        /* \"#utility.yul\":1113:1133   */\n      sub\n        /* \"#utility.yul\":1109:1110   */\n      0x00\n        /* \"#utility.yul\":1098:1107   */\n      dup4\n        /* \"#utility.yul\":1094:1111   */\n      add\n        /* \"#utility.yul\":1087:1134   */\n      mstore\n        /* \"#utility.yul\":1151:1229   */\n      tag_166\n        /* \"#utility.yul\":1224:1228   */\n      dup2\n        /* \"#utility.yul\":1215:1221   */\n      dup5\n        /* \"#utility.yul\":1151:1229   */\n      tag_136\n      jump\t// in\n    tag_166:\n        /* \"#utility.yul\":1143:1229   */\n      swap1\n      pop\n        /* \"#utility.yul\":923:1236   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1323:1440   */\n    tag_138:\n        /* \"#utility.yul\":1432:1433   */\n      0x00\n        /* \"#utility.yul\":1429:1430   */\n      dup1\n        /* \"#utility.yul\":1422:1434   */\n      revert\n        /* \"#utility.yul\":1569:1695   */\n    tag_140:\n        /* \"#utility.yul\":1606:1613   */\n      0x00\n        /* \"#utility.yul\":1646:1688   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":1639:1644   */\n      dup3\n        /* \"#utility.yul\":1635:1689   */\n      and\n        /* \"#utility.yul\":1624:1689   */\n      swap1\n      pop\n        /* \"#utility.yul\":1569:1695   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1701:1797   */\n    tag_141:\n        /* \"#utility.yul\":1738:1745   */\n      0x00\n        /* \"#utility.yul\":1767:1791   */\n      tag_172\n        /* \"#utility.yul\":1785:1790   */\n      dup3\n        /* \"#utility.yul\":1767:1791   */\n      tag_140\n      jump\t// in\n    tag_172:\n        /* \"#utility.yul\":1756:1791   */\n      swap1\n      pop\n        /* \"#utility.yul\":1701:1797   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1803:1925   */\n    tag_142:\n        /* \"#utility.yul\":1876:1900   */\n      tag_174\n        /* \"#utility.yul\":1894:1899   */\n      dup2\n        /* \"#utility.yul\":1876:1900   */\n      tag_141\n      jump\t// in\n    tag_174:\n        /* \"#utility.yul\":1869:1874   */\n      dup2\n        /* \"#utility.yul\":1866:1901   */\n      eq\n        /* \"#utility.yul\":1856:1919   */\n      tag_175\n      jumpi\n        /* \"#utility.yul\":1915:1916   */\n      0x00\n        /* \"#utility.yul\":1912:1913   */\n      dup1\n        /* \"#utility.yul\":1905:1917   */\n      revert\n        /* \"#utility.yul\":1856:1919   */\n    tag_175:\n        /* \"#utility.yul\":1803:1925   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1931:2070   */\n    tag_143:\n        /* \"#utility.yul\":1977:1982   */\n      0x00\n        /* \"#utility.yul\":2015:2021   */\n      dup2\n        /* \"#utility.yul\":2002:2022   */\n      calldataload\n        /* \"#utility.yul\":1993:2022   */\n      swap1\n      pop\n        /* \"#utility.yul\":2031:2064   */\n      tag_177\n        /* \"#utility.yul\":2058:2063   */\n      dup2\n        /* \"#utility.yul\":2031:2064   */\n      tag_142\n      jump\t// in\n    tag_177:\n        /* \"#utility.yul\":1931:2070   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2076:2153   */\n    tag_144:\n        /* \"#utility.yul\":2113:2120   */\n      0x00\n        /* \"#utility.yul\":2142:2147   */\n      dup2\n        /* \"#utility.yul\":2131:2147   */\n      swap1\n      pop\n        /* \"#utility.yul\":2076:2153   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2159:2281   */\n    tag_145:\n        /* \"#utility.yul\":2232:2256   */\n      tag_180\n        /* \"#utility.yul\":2250:2255   */\n      dup2\n        /* \"#utility.yul\":2232:2256   */\n      tag_144\n      jump\t// in\n    tag_180:\n        /* \"#utility.yul\":2225:2230   */\n      dup2\n        /* \"#utility.yul\":2222:2257   */\n      eq\n        /* \"#utility.yul\":2212:2275   */\n      tag_181\n      jumpi\n        /* \"#utility.yul\":2271:2272   */\n      0x00\n        /* \"#utility.yul\":2268:2269   */\n      dup1\n        /* \"#utility.yul\":2261:2273   */\n      revert\n        /* \"#utility.yul\":2212:2275   */\n    tag_181:\n        /* \"#utility.yul\":2159:2281   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2287:2426   */\n    tag_146:\n        /* \"#utility.yul\":2333:2338   */\n      0x00\n        /* \"#utility.yul\":2371:2377   */\n      dup2\n        /* \"#utility.yul\":2358:2378   */\n      calldataload\n        /* \"#utility.yul\":2349:2378   */\n      swap1\n      pop\n        /* \"#utility.yul\":2387:2420   */\n      tag_183\n        /* \"#utility.yul\":2414:2419   */\n      dup2\n        /* \"#utility.yul\":2387:2420   */\n      tag_145\n      jump\t// in\n    tag_183:\n        /* \"#utility.yul\":2287:2426   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2432:2906   */\n    tag_20:\n        /* \"#utility.yul\":2500:2506   */\n      0x00\n        /* \"#utility.yul\":2508:2514   */\n      dup1\n        /* \"#utility.yul\":2557:2559   */\n      0x40\n        /* \"#utility.yul\":2545:2554   */\n      dup4\n        /* \"#utility.yul\":2536:2543   */\n      dup6\n        /* \"#utility.yul\":2532:2555   */\n      sub\n        /* \"#utility.yul\":2528:2560   */\n      slt\n        /* \"#utility.yul\":2525:2644   */\n      iszero\n      tag_185\n      jumpi\n        /* \"#utility.yul\":2563:2642   */\n      tag_186\n      tag_138\n      jump\t// in\n    tag_186:\n        /* \"#utility.yul\":2525:2644   */\n    tag_185:\n        /* \"#utility.yul\":2683:2684   */\n      0x00\n        /* \"#utility.yul\":2708:2761   */\n      tag_187\n        /* \"#utility.yul\":2753:2760   */\n      dup6\n        /* \"#utility.yul\":2744:2750   */\n      dup3\n        /* \"#utility.yul\":2733:2742   */\n      dup7\n        /* \"#utility.yul\":2729:2751   */\n      add\n        /* \"#utility.yul\":2708:2761   */\n      tag_143\n      jump\t// in\n    tag_187:\n        /* \"#utility.yul\":2698:2761   */\n      swap3\n      pop\n        /* \"#utility.yul\":2654:2771   */\n      pop\n        /* \"#utility.yul\":2810:2812   */\n      0x20\n        /* \"#utility.yul\":2836:2889   */\n      tag_188\n        /* \"#utility.yul\":2881:2888   */\n      dup6\n        /* \"#utility.yul\":2872:2878   */\n      dup3\n        /* \"#utility.yul\":2861:2870   */\n      dup7\n        /* \"#utility.yul\":2857:2879   */\n      add\n        /* \"#utility.yul\":2836:2889   */\n      tag_146\n      jump\t// in\n    tag_188:\n        /* \"#utility.yul\":2826:2889   */\n      swap2\n      pop\n        /* \"#utility.yul\":2781:2899   */\n      pop\n        /* \"#utility.yul\":2432:2906   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2912:3002   */\n    tag_147:\n        /* \"#utility.yul\":2946:2953   */\n      0x00\n        /* \"#utility.yul\":2989:2994   */\n      dup2\n        /* \"#utility.yul\":2982:2995   */\n      iszero\n        /* \"#utility.yul\":2975:2996   */\n      iszero\n        /* \"#utility.yul\":2964:2996   */\n      swap1\n      pop\n        /* \"#utility.yul\":2912:3002   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3008:3117   */\n    tag_148:\n        /* \"#utility.yul\":3089:3110   */\n      tag_191\n        /* \"#utility.yul\":3104:3109   */\n      dup2\n        /* \"#utility.yul\":3089:3110   */\n      tag_147\n      jump\t// in\n    tag_191:\n        /* \"#utility.yul\":3084:3087   */\n      dup3\n        /* \"#utility.yul\":3077:3111   */\n      mstore\n        /* \"#utility.yul\":3008:3117   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3123:3333   */\n    tag_23:\n        /* \"#utility.yul\":3210:3214   */\n      0x00\n        /* \"#utility.yul\":3248:3250   */\n      0x20\n        /* \"#utility.yul\":3237:3246   */\n      dup3\n        /* \"#utility.yul\":3233:3251   */\n      add\n        /* \"#utility.yul\":3225:3251   */\n      swap1\n      pop\n        /* \"#utility.yul\":3261:3326   */\n      tag_193\n        /* \"#utility.yul\":3323:3324   */\n      0x00\n        /* \"#utility.yul\":3312:3321   */\n      dup4\n        /* \"#utility.yul\":3308:3325   */\n      add\n        /* \"#utility.yul\":3299:3305   */\n      dup5\n        /* \"#utility.yul\":3261:3326   */\n      tag_148\n      jump\t// in\n    tag_193:\n        /* \"#utility.yul\":3123:3333   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3339:3457   */\n    tag_149:\n        /* \"#utility.yul\":3426:3450   */\n      tag_195\n        /* \"#utility.yul\":3444:3449   */\n      dup2\n        /* \"#utility.yul\":3426:3450   */\n      tag_144\n      jump\t// in\n    tag_195:\n        /* \"#utility.yul\":3421:3424   */\n      dup3\n        /* \"#utility.yul\":3414:3451   */\n      mstore\n        /* \"#utility.yul\":3339:3457   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3463:3685   */\n    tag_27:\n        /* \"#utility.yul\":3556:3560   */\n      0x00\n        /* \"#utility.yul\":3594:3596   */\n      0x20\n        /* \"#utility.yul\":3583:3592   */\n      dup3\n        /* \"#utility.yul\":3579:3597   */\n      add\n        /* \"#utility.yul\":3571:3597   */\n      swap1\n      pop\n        /* \"#utility.yul\":3607:3678   */\n      tag_197\n        /* \"#utility.yul\":3675:3676   */\n      0x00\n        /* \"#utility.yul\":3664:3673   */\n      dup4\n        /* \"#utility.yul\":3660:3677   */\n      add\n        /* \"#utility.yul\":3651:3657   */\n      dup5\n        /* \"#utility.yul\":3607:3678   */\n      tag_149\n      jump\t// in\n    tag_197:\n        /* \"#utility.yul\":3463:3685   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3691:4310   */\n    tag_30:\n        /* \"#utility.yul\":3768:3774   */\n      0x00\n        /* \"#utility.yul\":3776:3782   */\n      dup1\n        /* \"#utility.yul\":3784:3790   */\n      0x00\n        /* \"#utility.yul\":3833:3835   */\n      0x60\n        /* \"#utility.yul\":3821:3830   */\n      dup5\n        /* \"#utility.yul\":3812:3819   */\n      dup7\n        /* \"#utility.yul\":3808:3831   */\n      sub\n        /* \"#utility.yul\":3804:3836   */\n      slt\n        /* \"#utility.yul\":3801:3920   */\n      iszero\n      tag_199\n      jumpi\n        /* \"#utility.yul\":3839:3918   */\n      tag_200\n      tag_138\n      jump\t// in\n    tag_200:\n        /* \"#utility.yul\":3801:3920   */\n    tag_199:\n        /* \"#utility.yul\":3959:3960   */\n      0x00\n        /* \"#utility.yul\":3984:4037   */\n      tag_201\n        /* \"#utility.yul\":4029:4036   */\n      dup7\n        /* \"#utility.yul\":4020:4026   */\n      dup3\n        /* \"#utility.yul\":4009:4018   */\n      dup8\n        /* \"#utility.yul\":4005:4027   */\n      add\n        /* \"#utility.yul\":3984:4037   */\n      tag_143\n      jump\t// in\n    tag_201:\n        /* \"#utility.yul\":3974:4037   */\n      swap4\n      pop\n        /* \"#utility.yul\":3930:4047   */\n      pop\n        /* \"#utility.yul\":4086:4088   */\n      0x20\n        /* \"#utility.yul\":4112:4165   */\n      tag_202\n        /* \"#utility.yul\":4157:4164   */\n      dup7\n        /* \"#utility.yul\":4148:4154   */\n      dup3\n        /* \"#utility.yul\":4137:4146   */\n      dup8\n        /* \"#utility.yul\":4133:4155   */\n      add\n        /* \"#utility.yul\":4112:4165   */\n      tag_143\n      jump\t// in\n    tag_202:\n        /* \"#utility.yul\":4102:4165   */\n      swap3\n      pop\n        /* \"#utility.yul\":4057:4175   */\n      pop\n        /* \"#utility.yul\":4214:4216   */\n      0x40\n        /* \"#utility.yul\":4240:4293   */\n      tag_203\n        /* \"#utility.yul\":4285:4292   */\n      dup7\n        /* \"#utility.yul\":4276:4282   */\n      dup3\n        /* \"#utility.yul\":4265:4274   */\n      dup8\n        /* \"#utility.yul\":4261:4283   */\n      add\n        /* \"#utility.yul\":4240:4293   */\n      tag_146\n      jump\t// in\n    tag_203:\n        /* \"#utility.yul\":4230:4293   */\n      swap2\n      pop\n        /* \"#utility.yul\":4185:4303   */\n      pop\n        /* \"#utility.yul\":3691:4310   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":4316:4402   */\n    tag_150:\n        /* \"#utility.yul\":4351:4358   */\n      0x00\n        /* \"#utility.yul\":4391:4395   */\n      0xff\n        /* \"#utility.yul\":4384:4389   */\n      dup3\n        /* \"#utility.yul\":4380:4396   */\n      and\n        /* \"#utility.yul\":4369:4396   */\n      swap1\n      pop\n        /* \"#utility.yul\":4316:4402   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4408:4520   */\n    tag_151:\n        /* \"#utility.yul\":4491:4513   */\n      tag_206\n        /* \"#utility.yul\":4507:4512   */\n      dup2\n        /* \"#utility.yul\":4491:4513   */\n      tag_150\n      jump\t// in\n    tag_206:\n        /* \"#utility.yul\":4486:4489   */\n      dup3\n        /* \"#utility.yul\":4479:4514   */\n      mstore\n        /* \"#utility.yul\":4408:4520   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4526:4740   */\n    tag_36:\n        /* \"#utility.yul\":4615:4619   */\n      0x00\n        /* \"#utility.yul\":4653:4655   */\n      0x20\n        /* \"#utility.yul\":4642:4651   */\n      dup3\n        /* \"#utility.yul\":4638:4656   */\n      add\n        /* \"#utility.yul\":4630:4656   */\n      swap1\n      pop\n        /* \"#utility.yul\":4666:4733   */\n      tag_208\n        /* \"#utility.yul\":4730:4731   */\n      0x00\n        /* \"#utility.yul\":4719:4728   */\n      dup4\n        /* \"#utility.yul\":4715:4732   */\n      add\n        /* \"#utility.yul\":4706:4712   */\n      dup5\n        /* \"#utility.yul\":4666:4733   */\n      tag_151\n      jump\t// in\n    tag_208:\n        /* \"#utility.yul\":4526:4740   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4746:5075   */\n    tag_39:\n        /* \"#utility.yul\":4805:4811   */\n      0x00\n        /* \"#utility.yul\":4854:4856   */\n      0x20\n        /* \"#utility.yul\":4842:4851   */\n      dup3\n        /* \"#utility.yul\":4833:4840   */\n      dup5\n        /* \"#utility.yul\":4829:4852   */\n      sub\n        /* \"#utility.yul\":4825:4857   */\n      slt\n        /* \"#utility.yul\":4822:4941   */\n      iszero\n      tag_210\n      jumpi\n        /* \"#utility.yul\":4860:4939   */\n      tag_211\n      tag_138\n      jump\t// in\n    tag_211:\n        /* \"#utility.yul\":4822:4941   */\n    tag_210:\n        /* \"#utility.yul\":4980:4981   */\n      0x00\n        /* \"#utility.yul\":5005:5058   */\n      tag_212\n        /* \"#utility.yul\":5050:5057   */\n      dup5\n        /* \"#utility.yul\":5041:5047   */\n      dup3\n        /* \"#utility.yul\":5030:5039   */\n      dup6\n        /* \"#utility.yul\":5026:5048   */\n      add\n        /* \"#utility.yul\":5005:5058   */\n      tag_143\n      jump\t// in\n    tag_212:\n        /* \"#utility.yul\":4995:5058   */\n      swap2\n      pop\n        /* \"#utility.yul\":4951:5068   */\n      pop\n        /* \"#utility.yul\":4746:5075   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5081:5410   */\n    tag_47:\n        /* \"#utility.yul\":5140:5146   */\n      0x00\n        /* \"#utility.yul\":5189:5191   */\n      0x20\n        /* \"#utility.yul\":5177:5186   */\n      dup3\n        /* \"#utility.yul\":5168:5175   */\n      dup5\n        /* \"#utility.yul\":5164:5187   */\n      sub\n        /* \"#utility.yul\":5160:5192   */\n      slt\n        /* \"#utility.yul\":5157:5276   */\n      iszero\n      tag_214\n      jumpi\n        /* \"#utility.yul\":5195:5274   */\n      tag_215\n      tag_138\n      jump\t// in\n    tag_215:\n        /* \"#utility.yul\":5157:5276   */\n    tag_214:\n        /* \"#utility.yul\":5315:5316   */\n      0x00\n        /* \"#utility.yul\":5340:5393   */\n      tag_216\n        /* \"#utility.yul\":5385:5392   */\n      dup5\n        /* \"#utility.yul\":5376:5382   */\n      dup3\n        /* \"#utility.yul\":5365:5374   */\n      dup6\n        /* \"#utility.yul\":5361:5383   */\n      add\n        /* \"#utility.yul\":5340:5393   */\n      tag_146\n      jump\t// in\n    tag_216:\n        /* \"#utility.yul\":5330:5393   */\n      swap2\n      pop\n        /* \"#utility.yul\":5286:5403   */\n      pop\n        /* \"#utility.yul\":5081:5410   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5416:5890   */\n    tag_55:\n        /* \"#utility.yul\":5484:5490   */\n      0x00\n        /* \"#utility.yul\":5492:5498   */\n      dup1\n        /* \"#utility.yul\":5541:5543   */\n      0x40\n        /* \"#utility.yul\":5529:5538   */\n      dup4\n        /* \"#utility.yul\":5520:5527   */\n      dup6\n        /* \"#utility.yul\":5516:5539   */\n      sub\n        /* \"#utility.yul\":5512:5544   */\n      slt\n        /* \"#utility.yul\":5509:5628   */\n      iszero\n      tag_218\n      jumpi\n        /* \"#utility.yul\":5547:5626   */\n      tag_219\n      tag_138\n      jump\t// in\n    tag_219:\n        /* \"#utility.yul\":5509:5628   */\n    tag_218:\n        /* \"#utility.yul\":5667:5668   */\n      0x00\n        /* \"#utility.yul\":5692:5745   */\n      tag_220\n        /* \"#utility.yul\":5737:5744   */\n      dup6\n        /* \"#utility.yul\":5728:5734   */\n      dup3\n        /* \"#utility.yul\":5717:5726   */\n      dup7\n        /* \"#utility.yul\":5713:5735   */\n      add\n        /* \"#utility.yul\":5692:5745   */\n      tag_143\n      jump\t// in\n    tag_220:\n        /* \"#utility.yul\":5682:5745   */\n      swap3\n      pop\n        /* \"#utility.yul\":5638:5755   */\n      pop\n        /* \"#utility.yul\":5794:5796   */\n      0x20\n        /* \"#utility.yul\":5820:5873   */\n      tag_221\n        /* \"#utility.yul\":5865:5872   */\n      dup6\n        /* \"#utility.yul\":5856:5862   */\n      dup3\n        /* \"#utility.yul\":5845:5854   */\n      dup7\n        /* \"#utility.yul\":5841:5863   */\n      add\n        /* \"#utility.yul\":5820:5873   */\n      tag_143\n      jump\t// in\n    tag_221:\n        /* \"#utility.yul\":5810:5873   */\n      swap2\n      pop\n        /* \"#utility.yul\":5765:5883   */\n      pop\n        /* \"#utility.yul\":5416:5890   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5896:6076   */\n    tag_152:\n        /* \"#utility.yul\":5944:6021   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":5941:5942   */\n      0x00\n        /* \"#utility.yul\":5934:6022   */\n      mstore\n        /* \"#utility.yul\":6041:6045   */\n      0x22\n        /* \"#utility.yul\":6038:6039   */\n      0x04\n        /* \"#utility.yul\":6031:6046   */\n      mstore\n        /* \"#utility.yul\":6065:6069   */\n      0x24\n        /* \"#utility.yul\":6062:6063   */\n      0x00\n        /* \"#utility.yul\":6055:6070   */\n      revert\n        /* \"#utility.yul\":6082:6402   */\n    tag_60:\n        /* \"#utility.yul\":6126:6132   */\n      0x00\n        /* \"#utility.yul\":6163:6164   */\n      0x02\n        /* \"#utility.yul\":6157:6161   */\n      dup3\n        /* \"#utility.yul\":6153:6165   */\n      div\n        /* \"#utility.yul\":6143:6165   */\n      swap1\n      pop\n        /* \"#utility.yul\":6210:6211   */\n      0x01\n        /* \"#utility.yul\":6204:6208   */\n      dup3\n        /* \"#utility.yul\":6200:6212   */\n      and\n        /* \"#utility.yul\":6231:6249   */\n      dup1\n        /* \"#utility.yul\":6221:6302   */\n      tag_224\n      jumpi\n        /* \"#utility.yul\":6287:6291   */\n      0x7f\n        /* \"#utility.yul\":6279:6285   */\n      dup3\n        /* \"#utility.yul\":6275:6292   */\n      and\n        /* \"#utility.yul\":6265:6292   */\n      swap2\n      pop\n        /* \"#utility.yul\":6221:6302   */\n    tag_224:\n        /* \"#utility.yul\":6349:6351   */\n      0x20\n        /* \"#utility.yul\":6341:6347   */\n      dup3\n        /* \"#utility.yul\":6338:6352   */\n      lt\n        /* \"#utility.yul\":6318:6336   */\n      dup2\n        /* \"#utility.yul\":6315:6353   */\n      sub\n        /* \"#utility.yul\":6312:6396   */\n      tag_225\n      jumpi\n        /* \"#utility.yul\":6368:6386   */\n      tag_226\n      tag_152\n      jump\t// in\n    tag_226:\n        /* \"#utility.yul\":6312:6396   */\n    tag_225:\n        /* \"#utility.yul\":6133:6402   */\n      pop\n        /* \"#utility.yul\":6082:6402   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6408:6526   */\n    tag_153:\n        /* \"#utility.yul\":6495:6519   */\n      tag_228\n        /* \"#utility.yul\":6513:6518   */\n      dup2\n        /* \"#utility.yul\":6495:6519   */\n      tag_141\n      jump\t// in\n    tag_228:\n        /* \"#utility.yul\":6490:6493   */\n      dup3\n        /* \"#utility.yul\":6483:6520   */\n      mstore\n        /* \"#utility.yul\":6408:6526   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6532:6974   */\n    tag_101:\n        /* \"#utility.yul\":6681:6685   */\n      0x00\n        /* \"#utility.yul\":6719:6721   */\n      0x60\n        /* \"#utility.yul\":6708:6717   */\n      dup3\n        /* \"#utility.yul\":6704:6722   */\n      add\n        /* \"#utility.yul\":6696:6722   */\n      swap1\n      pop\n        /* \"#utility.yul\":6732:6803   */\n      tag_230\n        /* \"#utility.yul\":6800:6801   */\n      0x00\n        /* \"#utility.yul\":6789:6798   */\n      dup4\n        /* \"#utility.yul\":6785:6802   */\n      add\n        /* \"#utility.yul\":6776:6782   */\n      dup7\n        /* \"#utility.yul\":6732:6803   */\n      tag_153\n      jump\t// in\n    tag_230:\n        /* \"#utility.yul\":6813:6885   */\n      tag_231\n        /* \"#utility.yul\":6881:6883   */\n      0x20\n        /* \"#utility.yul\":6870:6879   */\n      dup4\n        /* \"#utility.yul\":6866:6884   */\n      add\n        /* \"#utility.yul\":6857:6863   */\n      dup6\n        /* \"#utility.yul\":6813:6885   */\n      tag_149\n      jump\t// in\n    tag_231:\n        /* \"#utility.yul\":6895:6967   */\n      tag_232\n        /* \"#utility.yul\":6963:6965   */\n      0x40\n        /* \"#utility.yul\":6952:6961   */\n      dup4\n        /* \"#utility.yul\":6948:6966   */\n      add\n        /* \"#utility.yul\":6939:6945   */\n      dup5\n        /* \"#utility.yul\":6895:6967   */\n      tag_149\n      jump\t// in\n    tag_232:\n        /* \"#utility.yul\":6532:6974   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6980:7202   */\n    tag_106:\n        /* \"#utility.yul\":7073:7077   */\n      0x00\n        /* \"#utility.yul\":7111:7113   */\n      0x20\n        /* \"#utility.yul\":7100:7109   */\n      dup3\n        /* \"#utility.yul\":7096:7114   */\n      add\n        /* \"#utility.yul\":7088:7114   */\n      swap1\n      pop\n        /* \"#utility.yul\":7124:7195   */\n      tag_234\n        /* \"#utility.yul\":7192:7193   */\n      0x00\n        /* \"#utility.yul\":7181:7190   */\n      dup4\n        /* \"#utility.yul\":7177:7194   */\n      add\n        /* \"#utility.yul\":7168:7174   */\n      dup5\n        /* \"#utility.yul\":7124:7195   */\n      tag_153\n      jump\t// in\n    tag_234:\n        /* \"#utility.yul\":6980:7202   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7208:7388   */\n    tag_154:\n        /* \"#utility.yul\":7256:7333   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":7253:7254   */\n      0x00\n        /* \"#utility.yul\":7246:7334   */\n      mstore\n        /* \"#utility.yul\":7353:7357   */\n      0x11\n        /* \"#utility.yul\":7350:7351   */\n      0x04\n        /* \"#utility.yul\":7343:7358   */\n      mstore\n        /* \"#utility.yul\":7377:7381   */\n      0x24\n        /* \"#utility.yul\":7374:7375   */\n      0x00\n        /* \"#utility.yul\":7367:7382   */\n      revert\n        /* \"#utility.yul\":7394:7585   */\n    tag_125:\n        /* \"#utility.yul\":7434:7437   */\n      0x00\n        /* \"#utility.yul\":7453:7473   */\n      tag_237\n        /* \"#utility.yul\":7471:7472   */\n      dup3\n        /* \"#utility.yul\":7453:7473   */\n      tag_144\n      jump\t// in\n    tag_237:\n        /* \"#utility.yul\":7448:7473   */\n      swap2\n      pop\n        /* \"#utility.yul\":7487:7507   */\n      tag_238\n        /* \"#utility.yul\":7505:7506   */\n      dup4\n        /* \"#utility.yul\":7487:7507   */\n      tag_144\n      jump\t// in\n    tag_238:\n        /* \"#utility.yul\":7482:7507   */\n      swap3\n      pop\n        /* \"#utility.yul\":7530:7531   */\n      dup3\n        /* \"#utility.yul\":7527:7528   */\n      dup3\n        /* \"#utility.yul\":7523:7532   */\n      add\n        /* \"#utility.yul\":7516:7532   */\n      swap1\n      pop\n        /* \"#utility.yul\":7551:7554   */\n      dup1\n        /* \"#utility.yul\":7548:7549   */\n      dup3\n        /* \"#utility.yul\":7545:7555   */\n      gt\n        /* \"#utility.yul\":7542:7578   */\n      iszero\n      tag_239\n      jumpi\n        /* \"#utility.yul\":7558:7576   */\n      tag_240\n      tag_154\n      jump\t// in\n    tag_240:\n        /* \"#utility.yul\":7542:7578   */\n    tag_239:\n        /* \"#utility.yul\":7394:7585   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa264697066735822122028b976fd646428bda1fda284fd6b383f35620a345acbff012c2a45f875bc980f64736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_1319": {
									"entryPoint": null,
									"id": 1319,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_683": {
									"entryPoint": null,
									"id": 683,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"array_dataslot_t_string_storage": {
									"entryPoint": 311,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 163,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_t_string_storage": {
									"entryPoint": 596,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"cleanup_t_uint256": {
									"entryPoint": 437,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clear_storage_range_t_bytes1": {
									"entryPoint": 562,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"convert_t_uint256_to_t_uint256": {
									"entryPoint": 455,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 733,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"divide_by_32_ceil": {
									"entryPoint": 329,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 263,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": 706,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"identity": {
									"entryPoint": 446,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mask_bytes_dynamic": {
									"entryPoint": 678,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x22": {
									"entryPoint": 218,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 173,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"prepare_store_t_uint256": {
									"entryPoint": 488,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"shift_left_dynamic": {
									"entryPoint": 344,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"shift_right_unsigned_dynamic": {
									"entryPoint": 666,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"storage_set_to_zero_t_uint256": {
									"entryPoint": 538,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"update_byte_slice_dynamic32": {
									"entryPoint": 356,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"update_storage_value_t_uint256_to_t_uint256": {
									"entryPoint": 497,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"zero_value_for_split_t_uint256": {
									"entryPoint": 534,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:5231:11",
										"nodeType": "YulBlock",
										"src": "0:5231:11",
										"statements": [
											{
												"body": {
													"nativeSrc": "66:40:11",
													"nodeType": "YulBlock",
													"src": "66:40:11",
													"statements": [
														{
															"nativeSrc": "77:22:11",
															"nodeType": "YulAssignment",
															"src": "77:22:11",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "93:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "93:5:11"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "87:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "87:5:11"
																},
																"nativeSrc": "87:12:11",
																"nodeType": "YulFunctionCall",
																"src": "87:12:11"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "77:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "77:6:11"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "7:99:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "49:5:11",
														"nodeType": "YulTypedName",
														"src": "49:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "59:6:11",
														"nodeType": "YulTypedName",
														"src": "59:6:11",
														"type": ""
													}
												],
												"src": "7:99:11"
											},
											{
												"body": {
													"nativeSrc": "140:152:11",
													"nodeType": "YulBlock",
													"src": "140:152:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "157:1:11",
																		"nodeType": "YulLiteral",
																		"src": "157:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "160:77:11",
																		"nodeType": "YulLiteral",
																		"src": "160:77:11",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "150:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "150:6:11"
																},
																"nativeSrc": "150:88:11",
																"nodeType": "YulFunctionCall",
																"src": "150:88:11"
															},
															"nativeSrc": "150:88:11",
															"nodeType": "YulExpressionStatement",
															"src": "150:88:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "254:1:11",
																		"nodeType": "YulLiteral",
																		"src": "254:1:11",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "257:4:11",
																		"nodeType": "YulLiteral",
																		"src": "257:4:11",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "247:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "247:6:11"
																},
																"nativeSrc": "247:15:11",
																"nodeType": "YulFunctionCall",
																"src": "247:15:11"
															},
															"nativeSrc": "247:15:11",
															"nodeType": "YulExpressionStatement",
															"src": "247:15:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "278:1:11",
																		"nodeType": "YulLiteral",
																		"src": "278:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "281:4:11",
																		"nodeType": "YulLiteral",
																		"src": "281:4:11",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "271:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "271:6:11"
																},
																"nativeSrc": "271:15:11",
																"nodeType": "YulFunctionCall",
																"src": "271:15:11"
															},
															"nativeSrc": "271:15:11",
															"nodeType": "YulExpressionStatement",
															"src": "271:15:11"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "112:180:11",
												"nodeType": "YulFunctionDefinition",
												"src": "112:180:11"
											},
											{
												"body": {
													"nativeSrc": "326:152:11",
													"nodeType": "YulBlock",
													"src": "326:152:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "343:1:11",
																		"nodeType": "YulLiteral",
																		"src": "343:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "346:77:11",
																		"nodeType": "YulLiteral",
																		"src": "346:77:11",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "336:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "336:6:11"
																},
																"nativeSrc": "336:88:11",
																"nodeType": "YulFunctionCall",
																"src": "336:88:11"
															},
															"nativeSrc": "336:88:11",
															"nodeType": "YulExpressionStatement",
															"src": "336:88:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "440:1:11",
																		"nodeType": "YulLiteral",
																		"src": "440:1:11",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "443:4:11",
																		"nodeType": "YulLiteral",
																		"src": "443:4:11",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "433:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "433:6:11"
																},
																"nativeSrc": "433:15:11",
																"nodeType": "YulFunctionCall",
																"src": "433:15:11"
															},
															"nativeSrc": "433:15:11",
															"nodeType": "YulExpressionStatement",
															"src": "433:15:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "464:1:11",
																		"nodeType": "YulLiteral",
																		"src": "464:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "467:4:11",
																		"nodeType": "YulLiteral",
																		"src": "467:4:11",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "457:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "457:6:11"
																},
																"nativeSrc": "457:15:11",
																"nodeType": "YulFunctionCall",
																"src": "457:15:11"
															},
															"nativeSrc": "457:15:11",
															"nodeType": "YulExpressionStatement",
															"src": "457:15:11"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "298:180:11",
												"nodeType": "YulFunctionDefinition",
												"src": "298:180:11"
											},
											{
												"body": {
													"nativeSrc": "535:269:11",
													"nodeType": "YulBlock",
													"src": "535:269:11",
													"statements": [
														{
															"nativeSrc": "545:22:11",
															"nodeType": "YulAssignment",
															"src": "545:22:11",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "559:4:11",
																		"nodeType": "YulIdentifier",
																		"src": "559:4:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "565:1:11",
																		"nodeType": "YulLiteral",
																		"src": "565:1:11",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "555:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "555:3:11"
																},
																"nativeSrc": "555:12:11",
																"nodeType": "YulFunctionCall",
																"src": "555:12:11"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "545:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "545:6:11"
																}
															]
														},
														{
															"nativeSrc": "576:38:11",
															"nodeType": "YulVariableDeclaration",
															"src": "576:38:11",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "606:4:11",
																		"nodeType": "YulIdentifier",
																		"src": "606:4:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "612:1:11",
																		"nodeType": "YulLiteral",
																		"src": "612:1:11",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "602:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "602:3:11"
																},
																"nativeSrc": "602:12:11",
																"nodeType": "YulFunctionCall",
																"src": "602:12:11"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "580:18:11",
																	"nodeType": "YulTypedName",
																	"src": "580:18:11",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "653:51:11",
																"nodeType": "YulBlock",
																"src": "653:51:11",
																"statements": [
																	{
																		"nativeSrc": "667:27:11",
																		"nodeType": "YulAssignment",
																		"src": "667:27:11",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "681:6:11",
																					"nodeType": "YulIdentifier",
																					"src": "681:6:11"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "689:4:11",
																					"nodeType": "YulLiteral",
																					"src": "689:4:11",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "677:3:11",
																				"nodeType": "YulIdentifier",
																				"src": "677:3:11"
																			},
																			"nativeSrc": "677:17:11",
																			"nodeType": "YulFunctionCall",
																			"src": "677:17:11"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "667:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "667:6:11"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "633:18:11",
																		"nodeType": "YulIdentifier",
																		"src": "633:18:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "626:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "626:6:11"
																},
																"nativeSrc": "626:26:11",
																"nodeType": "YulFunctionCall",
																"src": "626:26:11"
															},
															"nativeSrc": "623:81:11",
															"nodeType": "YulIf",
															"src": "623:81:11"
														},
														{
															"body": {
																"nativeSrc": "756:42:11",
																"nodeType": "YulBlock",
																"src": "756:42:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "770:16:11",
																				"nodeType": "YulIdentifier",
																				"src": "770:16:11"
																			},
																			"nativeSrc": "770:18:11",
																			"nodeType": "YulFunctionCall",
																			"src": "770:18:11"
																		},
																		"nativeSrc": "770:18:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "770:18:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "720:18:11",
																		"nodeType": "YulIdentifier",
																		"src": "720:18:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "743:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "743:6:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "751:2:11",
																				"nodeType": "YulLiteral",
																				"src": "751:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "740:2:11",
																			"nodeType": "YulIdentifier",
																			"src": "740:2:11"
																		},
																		"nativeSrc": "740:14:11",
																		"nodeType": "YulFunctionCall",
																		"src": "740:14:11"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "717:2:11",
																	"nodeType": "YulIdentifier",
																	"src": "717:2:11"
																},
																"nativeSrc": "717:38:11",
																"nodeType": "YulFunctionCall",
																"src": "717:38:11"
															},
															"nativeSrc": "714:84:11",
															"nodeType": "YulIf",
															"src": "714:84:11"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "484:320:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "519:4:11",
														"nodeType": "YulTypedName",
														"src": "519:4:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "528:6:11",
														"nodeType": "YulTypedName",
														"src": "528:6:11",
														"type": ""
													}
												],
												"src": "484:320:11"
											},
											{
												"body": {
													"nativeSrc": "864:87:11",
													"nodeType": "YulBlock",
													"src": "864:87:11",
													"statements": [
														{
															"nativeSrc": "874:11:11",
															"nodeType": "YulAssignment",
															"src": "874:11:11",
															"value": {
																"name": "ptr",
																"nativeSrc": "882:3:11",
																"nodeType": "YulIdentifier",
																"src": "882:3:11"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "874:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "874:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "902:1:11",
																		"nodeType": "YulLiteral",
																		"src": "902:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "905:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "905:3:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "895:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "895:6:11"
																},
																"nativeSrc": "895:14:11",
																"nodeType": "YulFunctionCall",
																"src": "895:14:11"
															},
															"nativeSrc": "895:14:11",
															"nodeType": "YulExpressionStatement",
															"src": "895:14:11"
														},
														{
															"nativeSrc": "918:26:11",
															"nodeType": "YulAssignment",
															"src": "918:26:11",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "936:1:11",
																		"nodeType": "YulLiteral",
																		"src": "936:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "939:4:11",
																		"nodeType": "YulLiteral",
																		"src": "939:4:11",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "926:9:11",
																	"nodeType": "YulIdentifier",
																	"src": "926:9:11"
																},
																"nativeSrc": "926:18:11",
																"nodeType": "YulFunctionCall",
																"src": "926:18:11"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "918:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "918:4:11"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_string_storage",
												"nativeSrc": "810:141:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "851:3:11",
														"nodeType": "YulTypedName",
														"src": "851:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "859:4:11",
														"nodeType": "YulTypedName",
														"src": "859:4:11",
														"type": ""
													}
												],
												"src": "810:141:11"
											},
											{
												"body": {
													"nativeSrc": "1001:49:11",
													"nodeType": "YulBlock",
													"src": "1001:49:11",
													"statements": [
														{
															"nativeSrc": "1011:33:11",
															"nodeType": "YulAssignment",
															"src": "1011:33:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1029:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "1029:5:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1036:2:11",
																				"nodeType": "YulLiteral",
																				"src": "1036:2:11",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1025:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "1025:3:11"
																		},
																		"nativeSrc": "1025:14:11",
																		"nodeType": "YulFunctionCall",
																		"src": "1025:14:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1041:2:11",
																		"nodeType": "YulLiteral",
																		"src": "1041:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "1021:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "1021:3:11"
																},
																"nativeSrc": "1021:23:11",
																"nodeType": "YulFunctionCall",
																"src": "1021:23:11"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "1011:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "1011:6:11"
																}
															]
														}
													]
												},
												"name": "divide_by_32_ceil",
												"nativeSrc": "957:93:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "984:5:11",
														"nodeType": "YulTypedName",
														"src": "984:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "994:6:11",
														"nodeType": "YulTypedName",
														"src": "994:6:11",
														"type": ""
													}
												],
												"src": "957:93:11"
											},
											{
												"body": {
													"nativeSrc": "1109:54:11",
													"nodeType": "YulBlock",
													"src": "1109:54:11",
													"statements": [
														{
															"nativeSrc": "1119:37:11",
															"nodeType": "YulAssignment",
															"src": "1119:37:11",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "1144:4:11",
																		"nodeType": "YulIdentifier",
																		"src": "1144:4:11"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "1150:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "1150:5:11"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nativeSrc": "1140:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "1140:3:11"
																},
																"nativeSrc": "1140:16:11",
																"nodeType": "YulFunctionCall",
																"src": "1140:16:11"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "1119:8:11",
																	"nodeType": "YulIdentifier",
																	"src": "1119:8:11"
																}
															]
														}
													]
												},
												"name": "shift_left_dynamic",
												"nativeSrc": "1056:107:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "1084:4:11",
														"nodeType": "YulTypedName",
														"src": "1084:4:11",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "1090:5:11",
														"nodeType": "YulTypedName",
														"src": "1090:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "1100:8:11",
														"nodeType": "YulTypedName",
														"src": "1100:8:11",
														"type": ""
													}
												],
												"src": "1056:107:11"
											},
											{
												"body": {
													"nativeSrc": "1245:317:11",
													"nodeType": "YulBlock",
													"src": "1245:317:11",
													"statements": [
														{
															"nativeSrc": "1255:35:11",
															"nodeType": "YulVariableDeclaration",
															"src": "1255:35:11",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBytes",
																		"nativeSrc": "1276:10:11",
																		"nodeType": "YulIdentifier",
																		"src": "1276:10:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1288:1:11",
																		"nodeType": "YulLiteral",
																		"src": "1288:1:11",
																		"type": "",
																		"value": "8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "1272:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "1272:3:11"
																},
																"nativeSrc": "1272:18:11",
																"nodeType": "YulFunctionCall",
																"src": "1272:18:11"
															},
															"variables": [
																{
																	"name": "shiftBits",
																	"nativeSrc": "1259:9:11",
																	"nodeType": "YulTypedName",
																	"src": "1259:9:11",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1299:109:11",
															"nodeType": "YulVariableDeclaration",
															"src": "1299:109:11",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "1330:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "1330:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1341:66:11",
																		"nodeType": "YulLiteral",
																		"src": "1341:66:11",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "1311:18:11",
																	"nodeType": "YulIdentifier",
																	"src": "1311:18:11"
																},
																"nativeSrc": "1311:97:11",
																"nodeType": "YulFunctionCall",
																"src": "1311:97:11"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "1303:4:11",
																	"nodeType": "YulTypedName",
																	"src": "1303:4:11",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1417:51:11",
															"nodeType": "YulAssignment",
															"src": "1417:51:11",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "1448:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "1448:9:11"
																	},
																	{
																		"name": "toInsert",
																		"nativeSrc": "1459:8:11",
																		"nodeType": "YulIdentifier",
																		"src": "1459:8:11"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "1429:18:11",
																	"nodeType": "YulIdentifier",
																	"src": "1429:18:11"
																},
																"nativeSrc": "1429:39:11",
																"nodeType": "YulFunctionCall",
																"src": "1429:39:11"
															},
															"variableNames": [
																{
																	"name": "toInsert",
																	"nativeSrc": "1417:8:11",
																	"nodeType": "YulIdentifier",
																	"src": "1417:8:11"
																}
															]
														},
														{
															"nativeSrc": "1477:30:11",
															"nodeType": "YulAssignment",
															"src": "1477:30:11",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1490:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "1490:5:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "mask",
																				"nativeSrc": "1501:4:11",
																				"nodeType": "YulIdentifier",
																				"src": "1501:4:11"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "1497:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "1497:3:11"
																		},
																		"nativeSrc": "1497:9:11",
																		"nodeType": "YulFunctionCall",
																		"src": "1497:9:11"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1486:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "1486:3:11"
																},
																"nativeSrc": "1486:21:11",
																"nodeType": "YulFunctionCall",
																"src": "1486:21:11"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1477:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "1477:5:11"
																}
															]
														},
														{
															"nativeSrc": "1516:40:11",
															"nodeType": "YulAssignment",
															"src": "1516:40:11",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1529:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "1529:5:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "toInsert",
																				"nativeSrc": "1540:8:11",
																				"nodeType": "YulIdentifier",
																				"src": "1540:8:11"
																			},
																			{
																				"name": "mask",
																				"nativeSrc": "1550:4:11",
																				"nodeType": "YulIdentifier",
																				"src": "1550:4:11"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "1536:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "1536:3:11"
																		},
																		"nativeSrc": "1536:19:11",
																		"nodeType": "YulFunctionCall",
																		"src": "1536:19:11"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "1526:2:11",
																	"nodeType": "YulIdentifier",
																	"src": "1526:2:11"
																},
																"nativeSrc": "1526:30:11",
																"nodeType": "YulFunctionCall",
																"src": "1526:30:11"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "1516:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "1516:6:11"
																}
															]
														}
													]
												},
												"name": "update_byte_slice_dynamic32",
												"nativeSrc": "1169:393:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1206:5:11",
														"nodeType": "YulTypedName",
														"src": "1206:5:11",
														"type": ""
													},
													{
														"name": "shiftBytes",
														"nativeSrc": "1213:10:11",
														"nodeType": "YulTypedName",
														"src": "1213:10:11",
														"type": ""
													},
													{
														"name": "toInsert",
														"nativeSrc": "1225:8:11",
														"nodeType": "YulTypedName",
														"src": "1225:8:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "1238:6:11",
														"nodeType": "YulTypedName",
														"src": "1238:6:11",
														"type": ""
													}
												],
												"src": "1169:393:11"
											},
											{
												"body": {
													"nativeSrc": "1613:32:11",
													"nodeType": "YulBlock",
													"src": "1613:32:11",
													"statements": [
														{
															"nativeSrc": "1623:16:11",
															"nodeType": "YulAssignment",
															"src": "1623:16:11",
															"value": {
																"name": "value",
																"nativeSrc": "1634:5:11",
																"nodeType": "YulIdentifier",
																"src": "1634:5:11"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1623:7:11",
																	"nodeType": "YulIdentifier",
																	"src": "1623:7:11"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "1568:77:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1595:5:11",
														"nodeType": "YulTypedName",
														"src": "1595:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1605:7:11",
														"nodeType": "YulTypedName",
														"src": "1605:7:11",
														"type": ""
													}
												],
												"src": "1568:77:11"
											},
											{
												"body": {
													"nativeSrc": "1683:28:11",
													"nodeType": "YulBlock",
													"src": "1683:28:11",
													"statements": [
														{
															"nativeSrc": "1693:12:11",
															"nodeType": "YulAssignment",
															"src": "1693:12:11",
															"value": {
																"name": "value",
																"nativeSrc": "1700:5:11",
																"nodeType": "YulIdentifier",
																"src": "1700:5:11"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "1693:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "1693:3:11"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "1651:60:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1669:5:11",
														"nodeType": "YulTypedName",
														"src": "1669:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "1679:3:11",
														"nodeType": "YulTypedName",
														"src": "1679:3:11",
														"type": ""
													}
												],
												"src": "1651:60:11"
											},
											{
												"body": {
													"nativeSrc": "1777:82:11",
													"nodeType": "YulBlock",
													"src": "1777:82:11",
													"statements": [
														{
															"nativeSrc": "1787:66:11",
															"nodeType": "YulAssignment",
															"src": "1787:66:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1845:5:11",
																						"nodeType": "YulIdentifier",
																						"src": "1845:5:11"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "1827:17:11",
																					"nodeType": "YulIdentifier",
																					"src": "1827:17:11"
																				},
																				"nativeSrc": "1827:24:11",
																				"nodeType": "YulFunctionCall",
																				"src": "1827:24:11"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "1818:8:11",
																			"nodeType": "YulIdentifier",
																			"src": "1818:8:11"
																		},
																		"nativeSrc": "1818:34:11",
																		"nodeType": "YulFunctionCall",
																		"src": "1818:34:11"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "1800:17:11",
																	"nodeType": "YulIdentifier",
																	"src": "1800:17:11"
																},
																"nativeSrc": "1800:53:11",
																"nodeType": "YulFunctionCall",
																"src": "1800:53:11"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "1787:9:11",
																	"nodeType": "YulIdentifier",
																	"src": "1787:9:11"
																}
															]
														}
													]
												},
												"name": "convert_t_uint256_to_t_uint256",
												"nativeSrc": "1717:142:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1757:5:11",
														"nodeType": "YulTypedName",
														"src": "1757:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "1767:9:11",
														"nodeType": "YulTypedName",
														"src": "1767:9:11",
														"type": ""
													}
												],
												"src": "1717:142:11"
											},
											{
												"body": {
													"nativeSrc": "1912:28:11",
													"nodeType": "YulBlock",
													"src": "1912:28:11",
													"statements": [
														{
															"nativeSrc": "1922:12:11",
															"nodeType": "YulAssignment",
															"src": "1922:12:11",
															"value": {
																"name": "value",
																"nativeSrc": "1929:5:11",
																"nodeType": "YulIdentifier",
																"src": "1929:5:11"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "1922:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "1922:3:11"
																}
															]
														}
													]
												},
												"name": "prepare_store_t_uint256",
												"nativeSrc": "1865:75:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1898:5:11",
														"nodeType": "YulTypedName",
														"src": "1898:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "1908:3:11",
														"nodeType": "YulTypedName",
														"src": "1908:3:11",
														"type": ""
													}
												],
												"src": "1865:75:11"
											},
											{
												"body": {
													"nativeSrc": "2022:193:11",
													"nodeType": "YulBlock",
													"src": "2022:193:11",
													"statements": [
														{
															"nativeSrc": "2032:63:11",
															"nodeType": "YulVariableDeclaration",
															"src": "2032:63:11",
															"value": {
																"arguments": [
																	{
																		"name": "value_0",
																		"nativeSrc": "2087:7:11",
																		"nodeType": "YulIdentifier",
																		"src": "2087:7:11"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint256_to_t_uint256",
																	"nativeSrc": "2056:30:11",
																	"nodeType": "YulIdentifier",
																	"src": "2056:30:11"
																},
																"nativeSrc": "2056:39:11",
																"nodeType": "YulFunctionCall",
																"src": "2056:39:11"
															},
															"variables": [
																{
																	"name": "convertedValue_0",
																	"nativeSrc": "2036:16:11",
																	"nodeType": "YulTypedName",
																	"src": "2036:16:11",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "2111:4:11",
																		"nodeType": "YulIdentifier",
																		"src": "2111:4:11"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "2151:4:11",
																						"nodeType": "YulIdentifier",
																						"src": "2151:4:11"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "2145:5:11",
																					"nodeType": "YulIdentifier",
																					"src": "2145:5:11"
																				},
																				"nativeSrc": "2145:11:11",
																				"nodeType": "YulFunctionCall",
																				"src": "2145:11:11"
																			},
																			{
																				"name": "offset",
																				"nativeSrc": "2158:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "2158:6:11"
																			},
																			{
																				"arguments": [
																					{
																						"name": "convertedValue_0",
																						"nativeSrc": "2190:16:11",
																						"nodeType": "YulIdentifier",
																						"src": "2190:16:11"
																					}
																				],
																				"functionName": {
																					"name": "prepare_store_t_uint256",
																					"nativeSrc": "2166:23:11",
																					"nodeType": "YulIdentifier",
																					"src": "2166:23:11"
																				},
																				"nativeSrc": "2166:41:11",
																				"nodeType": "YulFunctionCall",
																				"src": "2166:41:11"
																			}
																		],
																		"functionName": {
																			"name": "update_byte_slice_dynamic32",
																			"nativeSrc": "2117:27:11",
																			"nodeType": "YulIdentifier",
																			"src": "2117:27:11"
																		},
																		"nativeSrc": "2117:91:11",
																		"nodeType": "YulFunctionCall",
																		"src": "2117:91:11"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nativeSrc": "2104:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "2104:6:11"
																},
																"nativeSrc": "2104:105:11",
																"nodeType": "YulFunctionCall",
																"src": "2104:105:11"
															},
															"nativeSrc": "2104:105:11",
															"nodeType": "YulExpressionStatement",
															"src": "2104:105:11"
														}
													]
												},
												"name": "update_storage_value_t_uint256_to_t_uint256",
												"nativeSrc": "1946:269:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "1999:4:11",
														"nodeType": "YulTypedName",
														"src": "1999:4:11",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "2005:6:11",
														"nodeType": "YulTypedName",
														"src": "2005:6:11",
														"type": ""
													},
													{
														"name": "value_0",
														"nativeSrc": "2013:7:11",
														"nodeType": "YulTypedName",
														"src": "2013:7:11",
														"type": ""
													}
												],
												"src": "1946:269:11"
											},
											{
												"body": {
													"nativeSrc": "2270:24:11",
													"nodeType": "YulBlock",
													"src": "2270:24:11",
													"statements": [
														{
															"nativeSrc": "2280:8:11",
															"nodeType": "YulAssignment",
															"src": "2280:8:11",
															"value": {
																"kind": "number",
																"nativeSrc": "2287:1:11",
																"nodeType": "YulLiteral",
																"src": "2287:1:11",
																"type": "",
																"value": "0"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "2280:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "2280:3:11"
																}
															]
														}
													]
												},
												"name": "zero_value_for_split_t_uint256",
												"nativeSrc": "2221:73:11",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "2266:3:11",
														"nodeType": "YulTypedName",
														"src": "2266:3:11",
														"type": ""
													}
												],
												"src": "2221:73:11"
											},
											{
												"body": {
													"nativeSrc": "2353:136:11",
													"nodeType": "YulBlock",
													"src": "2353:136:11",
													"statements": [
														{
															"nativeSrc": "2363:46:11",
															"nodeType": "YulVariableDeclaration",
															"src": "2363:46:11",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "zero_value_for_split_t_uint256",
																	"nativeSrc": "2377:30:11",
																	"nodeType": "YulIdentifier",
																	"src": "2377:30:11"
																},
																"nativeSrc": "2377:32:11",
																"nodeType": "YulFunctionCall",
																"src": "2377:32:11"
															},
															"variables": [
																{
																	"name": "zero_0",
																	"nativeSrc": "2367:6:11",
																	"nodeType": "YulTypedName",
																	"src": "2367:6:11",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "2462:4:11",
																		"nodeType": "YulIdentifier",
																		"src": "2462:4:11"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "2468:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "2468:6:11"
																	},
																	{
																		"name": "zero_0",
																		"nativeSrc": "2476:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "2476:6:11"
																	}
																],
																"functionName": {
																	"name": "update_storage_value_t_uint256_to_t_uint256",
																	"nativeSrc": "2418:43:11",
																	"nodeType": "YulIdentifier",
																	"src": "2418:43:11"
																},
																"nativeSrc": "2418:65:11",
																"nodeType": "YulFunctionCall",
																"src": "2418:65:11"
															},
															"nativeSrc": "2418:65:11",
															"nodeType": "YulExpressionStatement",
															"src": "2418:65:11"
														}
													]
												},
												"name": "storage_set_to_zero_t_uint256",
												"nativeSrc": "2300:189:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "2339:4:11",
														"nodeType": "YulTypedName",
														"src": "2339:4:11",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "2345:6:11",
														"nodeType": "YulTypedName",
														"src": "2345:6:11",
														"type": ""
													}
												],
												"src": "2300:189:11"
											},
											{
												"body": {
													"nativeSrc": "2545:136:11",
													"nodeType": "YulBlock",
													"src": "2545:136:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "2612:63:11",
																"nodeType": "YulBlock",
																"src": "2612:63:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "2656:5:11",
																					"nodeType": "YulIdentifier",
																					"src": "2656:5:11"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2663:1:11",
																					"nodeType": "YulLiteral",
																					"src": "2663:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "storage_set_to_zero_t_uint256",
																				"nativeSrc": "2626:29:11",
																				"nodeType": "YulIdentifier",
																				"src": "2626:29:11"
																			},
																			"nativeSrc": "2626:39:11",
																			"nodeType": "YulFunctionCall",
																			"src": "2626:39:11"
																		},
																		"nativeSrc": "2626:39:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "2626:39:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "start",
																		"nativeSrc": "2565:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "2565:5:11"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "2572:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "2572:3:11"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "2562:2:11",
																	"nodeType": "YulIdentifier",
																	"src": "2562:2:11"
																},
																"nativeSrc": "2562:14:11",
																"nodeType": "YulFunctionCall",
																"src": "2562:14:11"
															},
															"nativeSrc": "2555:120:11",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "2577:26:11",
																"nodeType": "YulBlock",
																"src": "2577:26:11",
																"statements": [
																	{
																		"nativeSrc": "2579:22:11",
																		"nodeType": "YulAssignment",
																		"src": "2579:22:11",
																		"value": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "2592:5:11",
																					"nodeType": "YulIdentifier",
																					"src": "2592:5:11"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2599:1:11",
																					"nodeType": "YulLiteral",
																					"src": "2599:1:11",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "2588:3:11",
																				"nodeType": "YulIdentifier",
																				"src": "2588:3:11"
																			},
																			"nativeSrc": "2588:13:11",
																			"nodeType": "YulFunctionCall",
																			"src": "2588:13:11"
																		},
																		"variableNames": [
																			{
																				"name": "start",
																				"nativeSrc": "2579:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "2579:5:11"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "2559:2:11",
																"nodeType": "YulBlock",
																"src": "2559:2:11",
																"statements": []
															},
															"src": "2555:120:11"
														}
													]
												},
												"name": "clear_storage_range_t_bytes1",
												"nativeSrc": "2495:186:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nativeSrc": "2533:5:11",
														"nodeType": "YulTypedName",
														"src": "2533:5:11",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2540:3:11",
														"nodeType": "YulTypedName",
														"src": "2540:3:11",
														"type": ""
													}
												],
												"src": "2495:186:11"
											},
											{
												"body": {
													"nativeSrc": "2766:464:11",
													"nodeType": "YulBlock",
													"src": "2766:464:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "2792:431:11",
																"nodeType": "YulBlock",
																"src": "2792:431:11",
																"statements": [
																	{
																		"nativeSrc": "2806:54:11",
																		"nodeType": "YulVariableDeclaration",
																		"src": "2806:54:11",
																		"value": {
																			"arguments": [
																				{
																					"name": "array",
																					"nativeSrc": "2854:5:11",
																					"nodeType": "YulIdentifier",
																					"src": "2854:5:11"
																				}
																			],
																			"functionName": {
																				"name": "array_dataslot_t_string_storage",
																				"nativeSrc": "2822:31:11",
																				"nodeType": "YulIdentifier",
																				"src": "2822:31:11"
																			},
																			"nativeSrc": "2822:38:11",
																			"nodeType": "YulFunctionCall",
																			"src": "2822:38:11"
																		},
																		"variables": [
																			{
																				"name": "dataArea",
																				"nativeSrc": "2810:8:11",
																				"nodeType": "YulTypedName",
																				"src": "2810:8:11",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "2873:63:11",
																		"nodeType": "YulVariableDeclaration",
																		"src": "2873:63:11",
																		"value": {
																			"arguments": [
																				{
																					"name": "dataArea",
																					"nativeSrc": "2896:8:11",
																					"nodeType": "YulIdentifier",
																					"src": "2896:8:11"
																				},
																				{
																					"arguments": [
																						{
																							"name": "startIndex",
																							"nativeSrc": "2924:10:11",
																							"nodeType": "YulIdentifier",
																							"src": "2924:10:11"
																						}
																					],
																					"functionName": {
																						"name": "divide_by_32_ceil",
																						"nativeSrc": "2906:17:11",
																						"nodeType": "YulIdentifier",
																						"src": "2906:17:11"
																					},
																					"nativeSrc": "2906:29:11",
																					"nodeType": "YulFunctionCall",
																					"src": "2906:29:11"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "2892:3:11",
																				"nodeType": "YulIdentifier",
																				"src": "2892:3:11"
																			},
																			"nativeSrc": "2892:44:11",
																			"nodeType": "YulFunctionCall",
																			"src": "2892:44:11"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "2877:11:11",
																				"nodeType": "YulTypedName",
																				"src": "2877:11:11",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "3093:27:11",
																			"nodeType": "YulBlock",
																			"src": "3093:27:11",
																			"statements": [
																				{
																					"nativeSrc": "3095:23:11",
																					"nodeType": "YulAssignment",
																					"src": "3095:23:11",
																					"value": {
																						"name": "dataArea",
																						"nativeSrc": "3110:8:11",
																						"nodeType": "YulIdentifier",
																						"src": "3110:8:11"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "3095:11:11",
																							"nodeType": "YulIdentifier",
																							"src": "3095:11:11"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "3077:10:11",
																					"nodeType": "YulIdentifier",
																					"src": "3077:10:11"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3089:2:11",
																					"nodeType": "YulLiteral",
																					"src": "3089:2:11",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "3074:2:11",
																				"nodeType": "YulIdentifier",
																				"src": "3074:2:11"
																			},
																			"nativeSrc": "3074:18:11",
																			"nodeType": "YulFunctionCall",
																			"src": "3074:18:11"
																		},
																		"nativeSrc": "3071:49:11",
																		"nodeType": "YulIf",
																		"src": "3071:49:11"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "deleteStart",
																					"nativeSrc": "3162:11:11",
																					"nodeType": "YulIdentifier",
																					"src": "3162:11:11"
																				},
																				{
																					"arguments": [
																						{
																							"name": "dataArea",
																							"nativeSrc": "3179:8:11",
																							"nodeType": "YulIdentifier",
																							"src": "3179:8:11"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "3207:3:11",
																									"nodeType": "YulIdentifier",
																									"src": "3207:3:11"
																								}
																							],
																							"functionName": {
																								"name": "divide_by_32_ceil",
																								"nativeSrc": "3189:17:11",
																								"nodeType": "YulIdentifier",
																								"src": "3189:17:11"
																							},
																							"nativeSrc": "3189:22:11",
																							"nodeType": "YulFunctionCall",
																							"src": "3189:22:11"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "3175:3:11",
																						"nodeType": "YulIdentifier",
																						"src": "3175:3:11"
																					},
																					"nativeSrc": "3175:37:11",
																					"nodeType": "YulFunctionCall",
																					"src": "3175:37:11"
																				}
																			],
																			"functionName": {
																				"name": "clear_storage_range_t_bytes1",
																				"nativeSrc": "3133:28:11",
																				"nodeType": "YulIdentifier",
																				"src": "3133:28:11"
																			},
																			"nativeSrc": "3133:80:11",
																			"nodeType": "YulFunctionCall",
																			"src": "3133:80:11"
																		},
																		"nativeSrc": "3133:80:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "3133:80:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "2783:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "2783:3:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2788:2:11",
																		"nodeType": "YulLiteral",
																		"src": "2788:2:11",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2780:2:11",
																	"nodeType": "YulIdentifier",
																	"src": "2780:2:11"
																},
																"nativeSrc": "2780:11:11",
																"nodeType": "YulFunctionCall",
																"src": "2780:11:11"
															},
															"nativeSrc": "2777:446:11",
															"nodeType": "YulIf",
															"src": "2777:446:11"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_t_string_storage",
												"nativeSrc": "2687:543:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "2742:5:11",
														"nodeType": "YulTypedName",
														"src": "2742:5:11",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "2749:3:11",
														"nodeType": "YulTypedName",
														"src": "2749:3:11",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "2754:10:11",
														"nodeType": "YulTypedName",
														"src": "2754:10:11",
														"type": ""
													}
												],
												"src": "2687:543:11"
											},
											{
												"body": {
													"nativeSrc": "3299:54:11",
													"nodeType": "YulBlock",
													"src": "3299:54:11",
													"statements": [
														{
															"nativeSrc": "3309:37:11",
															"nodeType": "YulAssignment",
															"src": "3309:37:11",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "3334:4:11",
																		"nodeType": "YulIdentifier",
																		"src": "3334:4:11"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "3340:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "3340:5:11"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "3330:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "3330:3:11"
																},
																"nativeSrc": "3330:16:11",
																"nodeType": "YulFunctionCall",
																"src": "3330:16:11"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "3309:8:11",
																	"nodeType": "YulIdentifier",
																	"src": "3309:8:11"
																}
															]
														}
													]
												},
												"name": "shift_right_unsigned_dynamic",
												"nativeSrc": "3236:117:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "3274:4:11",
														"nodeType": "YulTypedName",
														"src": "3274:4:11",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "3280:5:11",
														"nodeType": "YulTypedName",
														"src": "3280:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "3290:8:11",
														"nodeType": "YulTypedName",
														"src": "3290:8:11",
														"type": ""
													}
												],
												"src": "3236:117:11"
											},
											{
												"body": {
													"nativeSrc": "3410:118:11",
													"nodeType": "YulBlock",
													"src": "3410:118:11",
													"statements": [
														{
															"nativeSrc": "3420:68:11",
															"nodeType": "YulVariableDeclaration",
															"src": "3420:68:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "3469:1:11",
																						"nodeType": "YulLiteral",
																						"src": "3469:1:11",
																						"type": "",
																						"value": "8"
																					},
																					{
																						"name": "bytes",
																						"nativeSrc": "3472:5:11",
																						"nodeType": "YulIdentifier",
																						"src": "3472:5:11"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "3465:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "3465:3:11"
																				},
																				"nativeSrc": "3465:13:11",
																				"nodeType": "YulFunctionCall",
																				"src": "3465:13:11"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "3484:1:11",
																						"nodeType": "YulLiteral",
																						"src": "3484:1:11",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "3480:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "3480:3:11"
																				},
																				"nativeSrc": "3480:6:11",
																				"nodeType": "YulFunctionCall",
																				"src": "3480:6:11"
																			}
																		],
																		"functionName": {
																			"name": "shift_right_unsigned_dynamic",
																			"nativeSrc": "3436:28:11",
																			"nodeType": "YulIdentifier",
																			"src": "3436:28:11"
																		},
																		"nativeSrc": "3436:51:11",
																		"nodeType": "YulFunctionCall",
																		"src": "3436:51:11"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nativeSrc": "3432:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "3432:3:11"
																},
																"nativeSrc": "3432:56:11",
																"nodeType": "YulFunctionCall",
																"src": "3432:56:11"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "3424:4:11",
																	"nodeType": "YulTypedName",
																	"src": "3424:4:11",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "3497:25:11",
															"nodeType": "YulAssignment",
															"src": "3497:25:11",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "3511:4:11",
																		"nodeType": "YulIdentifier",
																		"src": "3511:4:11"
																	},
																	{
																		"name": "mask",
																		"nativeSrc": "3517:4:11",
																		"nodeType": "YulIdentifier",
																		"src": "3517:4:11"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "3507:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "3507:3:11"
																},
																"nativeSrc": "3507:15:11",
																"nodeType": "YulFunctionCall",
																"src": "3507:15:11"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "3497:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "3497:6:11"
																}
															]
														}
													]
												},
												"name": "mask_bytes_dynamic",
												"nativeSrc": "3359:169:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "3387:4:11",
														"nodeType": "YulTypedName",
														"src": "3387:4:11",
														"type": ""
													},
													{
														"name": "bytes",
														"nativeSrc": "3393:5:11",
														"nodeType": "YulTypedName",
														"src": "3393:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "3403:6:11",
														"nodeType": "YulTypedName",
														"src": "3403:6:11",
														"type": ""
													}
												],
												"src": "3359:169:11"
											},
											{
												"body": {
													"nativeSrc": "3614:214:11",
													"nodeType": "YulBlock",
													"src": "3614:214:11",
													"statements": [
														{
															"nativeSrc": "3747:37:11",
															"nodeType": "YulAssignment",
															"src": "3747:37:11",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "3774:4:11",
																		"nodeType": "YulIdentifier",
																		"src": "3774:4:11"
																	},
																	{
																		"name": "len",
																		"nativeSrc": "3780:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "3780:3:11"
																	}
																],
																"functionName": {
																	"name": "mask_bytes_dynamic",
																	"nativeSrc": "3755:18:11",
																	"nodeType": "YulIdentifier",
																	"src": "3755:18:11"
																},
																"nativeSrc": "3755:29:11",
																"nodeType": "YulFunctionCall",
																"src": "3755:29:11"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "3747:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "3747:4:11"
																}
															]
														},
														{
															"nativeSrc": "3793:29:11",
															"nodeType": "YulAssignment",
															"src": "3793:29:11",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "3804:4:11",
																		"nodeType": "YulIdentifier",
																		"src": "3804:4:11"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "3814:1:11",
																				"nodeType": "YulLiteral",
																				"src": "3814:1:11",
																				"type": "",
																				"value": "2"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "3817:3:11",
																				"nodeType": "YulIdentifier",
																				"src": "3817:3:11"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "3810:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "3810:3:11"
																		},
																		"nativeSrc": "3810:11:11",
																		"nodeType": "YulFunctionCall",
																		"src": "3810:11:11"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "3801:2:11",
																	"nodeType": "YulIdentifier",
																	"src": "3801:2:11"
																},
																"nativeSrc": "3801:21:11",
																"nodeType": "YulFunctionCall",
																"src": "3801:21:11"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "3793:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "3793:4:11"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "3533:295:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "3595:4:11",
														"nodeType": "YulTypedName",
														"src": "3595:4:11",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "3601:3:11",
														"nodeType": "YulTypedName",
														"src": "3601:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "3609:4:11",
														"nodeType": "YulTypedName",
														"src": "3609:4:11",
														"type": ""
													}
												],
												"src": "3533:295:11"
											},
											{
												"body": {
													"nativeSrc": "3925:1303:11",
													"nodeType": "YulBlock",
													"src": "3925:1303:11",
													"statements": [
														{
															"nativeSrc": "3936:51:11",
															"nodeType": "YulVariableDeclaration",
															"src": "3936:51:11",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "3983:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "3983:3:11"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "3950:32:11",
																	"nodeType": "YulIdentifier",
																	"src": "3950:32:11"
																},
																"nativeSrc": "3950:37:11",
																"nodeType": "YulFunctionCall",
																"src": "3950:37:11"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "3940:6:11",
																	"nodeType": "YulTypedName",
																	"src": "3940:6:11",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4072:22:11",
																"nodeType": "YulBlock",
																"src": "4072:22:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "4074:16:11",
																				"nodeType": "YulIdentifier",
																				"src": "4074:16:11"
																			},
																			"nativeSrc": "4074:18:11",
																			"nodeType": "YulFunctionCall",
																			"src": "4074:18:11"
																		},
																		"nativeSrc": "4074:18:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "4074:18:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "4044:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "4044:6:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4052:18:11",
																		"nodeType": "YulLiteral",
																		"src": "4052:18:11",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "4041:2:11",
																	"nodeType": "YulIdentifier",
																	"src": "4041:2:11"
																},
																"nativeSrc": "4041:30:11",
																"nodeType": "YulFunctionCall",
																"src": "4041:30:11"
															},
															"nativeSrc": "4038:56:11",
															"nodeType": "YulIf",
															"src": "4038:56:11"
														},
														{
															"nativeSrc": "4104:52:11",
															"nodeType": "YulVariableDeclaration",
															"src": "4104:52:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "slot",
																				"nativeSrc": "4150:4:11",
																				"nodeType": "YulIdentifier",
																				"src": "4150:4:11"
																			}
																		],
																		"functionName": {
																			"name": "sload",
																			"nativeSrc": "4144:5:11",
																			"nodeType": "YulIdentifier",
																			"src": "4144:5:11"
																		},
																		"nativeSrc": "4144:11:11",
																		"nodeType": "YulFunctionCall",
																		"src": "4144:11:11"
																	}
																],
																"functionName": {
																	"name": "extract_byte_array_length",
																	"nativeSrc": "4118:25:11",
																	"nodeType": "YulIdentifier",
																	"src": "4118:25:11"
																},
																"nativeSrc": "4118:38:11",
																"nodeType": "YulFunctionCall",
																"src": "4118:38:11"
															},
															"variables": [
																{
																	"name": "oldLen",
																	"nativeSrc": "4108:6:11",
																	"nodeType": "YulTypedName",
																	"src": "4108:6:11",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "4249:4:11",
																		"nodeType": "YulIdentifier",
																		"src": "4249:4:11"
																	},
																	{
																		"name": "oldLen",
																		"nativeSrc": "4255:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "4255:6:11"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "4263:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "4263:6:11"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_t_string_storage",
																	"nativeSrc": "4203:45:11",
																	"nodeType": "YulIdentifier",
																	"src": "4203:45:11"
																},
																"nativeSrc": "4203:67:11",
																"nodeType": "YulFunctionCall",
																"src": "4203:67:11"
															},
															"nativeSrc": "4203:67:11",
															"nodeType": "YulExpressionStatement",
															"src": "4203:67:11"
														},
														{
															"nativeSrc": "4280:18:11",
															"nodeType": "YulVariableDeclaration",
															"src": "4280:18:11",
															"value": {
																"kind": "number",
																"nativeSrc": "4297:1:11",
																"nodeType": "YulLiteral",
																"src": "4297:1:11",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "4284:9:11",
																	"nodeType": "YulTypedName",
																	"src": "4284:9:11",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "4308:17:11",
															"nodeType": "YulAssignment",
															"src": "4308:17:11",
															"value": {
																"kind": "number",
																"nativeSrc": "4321:4:11",
																"nodeType": "YulLiteral",
																"src": "4321:4:11",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "4308:9:11",
																	"nodeType": "YulIdentifier",
																	"src": "4308:9:11"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "4372:611:11",
																		"nodeType": "YulBlock",
																		"src": "4372:611:11",
																		"statements": [
																			{
																				"nativeSrc": "4386:37:11",
																				"nodeType": "YulVariableDeclaration",
																				"src": "4386:37:11",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "4405:6:11",
																							"nodeType": "YulIdentifier",
																							"src": "4405:6:11"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "4417:4:11",
																									"nodeType": "YulLiteral",
																									"src": "4417:4:11",
																									"type": "",
																									"value": "0x1f"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "4413:3:11",
																								"nodeType": "YulIdentifier",
																								"src": "4413:3:11"
																							},
																							"nativeSrc": "4413:9:11",
																							"nodeType": "YulFunctionCall",
																							"src": "4413:9:11"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "4401:3:11",
																						"nodeType": "YulIdentifier",
																						"src": "4401:3:11"
																					},
																					"nativeSrc": "4401:22:11",
																					"nodeType": "YulFunctionCall",
																					"src": "4401:22:11"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "4390:7:11",
																						"nodeType": "YulTypedName",
																						"src": "4390:7:11",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "4437:51:11",
																				"nodeType": "YulVariableDeclaration",
																				"src": "4437:51:11",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "4483:4:11",
																							"nodeType": "YulIdentifier",
																							"src": "4483:4:11"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_t_string_storage",
																						"nativeSrc": "4451:31:11",
																						"nodeType": "YulIdentifier",
																						"src": "4451:31:11"
																					},
																					"nativeSrc": "4451:37:11",
																					"nodeType": "YulFunctionCall",
																					"src": "4451:37:11"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "4441:6:11",
																						"nodeType": "YulTypedName",
																						"src": "4441:6:11",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "4501:10:11",
																				"nodeType": "YulVariableDeclaration",
																				"src": "4501:10:11",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "4510:1:11",
																					"nodeType": "YulLiteral",
																					"src": "4510:1:11",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "4505:1:11",
																						"nodeType": "YulTypedName",
																						"src": "4505:1:11",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "4569:163:11",
																					"nodeType": "YulBlock",
																					"src": "4569:163:11",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "4594:6:11",
																										"nodeType": "YulIdentifier",
																										"src": "4594:6:11"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "4612:3:11",
																														"nodeType": "YulIdentifier",
																														"src": "4612:3:11"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "4617:9:11",
																														"nodeType": "YulIdentifier",
																														"src": "4617:9:11"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "4608:3:11",
																													"nodeType": "YulIdentifier",
																													"src": "4608:3:11"
																												},
																												"nativeSrc": "4608:19:11",
																												"nodeType": "YulFunctionCall",
																												"src": "4608:19:11"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "4602:5:11",
																											"nodeType": "YulIdentifier",
																											"src": "4602:5:11"
																										},
																										"nativeSrc": "4602:26:11",
																										"nodeType": "YulFunctionCall",
																										"src": "4602:26:11"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "4587:6:11",
																									"nodeType": "YulIdentifier",
																									"src": "4587:6:11"
																								},
																								"nativeSrc": "4587:42:11",
																								"nodeType": "YulFunctionCall",
																								"src": "4587:42:11"
																							},
																							"nativeSrc": "4587:42:11",
																							"nodeType": "YulExpressionStatement",
																							"src": "4587:42:11"
																						},
																						{
																							"nativeSrc": "4646:24:11",
																							"nodeType": "YulAssignment",
																							"src": "4646:24:11",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "4660:6:11",
																										"nodeType": "YulIdentifier",
																										"src": "4660:6:11"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "4668:1:11",
																										"nodeType": "YulLiteral",
																										"src": "4668:1:11",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "4656:3:11",
																									"nodeType": "YulIdentifier",
																									"src": "4656:3:11"
																								},
																								"nativeSrc": "4656:14:11",
																								"nodeType": "YulFunctionCall",
																								"src": "4656:14:11"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "4646:6:11",
																									"nodeType": "YulIdentifier",
																									"src": "4646:6:11"
																								}
																							]
																						},
																						{
																							"nativeSrc": "4687:31:11",
																							"nodeType": "YulAssignment",
																							"src": "4687:31:11",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "4704:9:11",
																										"nodeType": "YulIdentifier",
																										"src": "4704:9:11"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "4715:2:11",
																										"nodeType": "YulLiteral",
																										"src": "4715:2:11",
																										"type": "",
																										"value": "32"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "4700:3:11",
																									"nodeType": "YulIdentifier",
																									"src": "4700:3:11"
																								},
																								"nativeSrc": "4700:18:11",
																								"nodeType": "YulFunctionCall",
																								"src": "4700:18:11"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "4687:9:11",
																									"nodeType": "YulIdentifier",
																									"src": "4687:9:11"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "4535:1:11",
																							"nodeType": "YulIdentifier",
																							"src": "4535:1:11"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "4538:7:11",
																							"nodeType": "YulIdentifier",
																							"src": "4538:7:11"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "4532:2:11",
																						"nodeType": "YulIdentifier",
																						"src": "4532:2:11"
																					},
																					"nativeSrc": "4532:14:11",
																					"nodeType": "YulFunctionCall",
																					"src": "4532:14:11"
																				},
																				"nativeSrc": "4524:208:11",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "4547:21:11",
																					"nodeType": "YulBlock",
																					"src": "4547:21:11",
																					"statements": [
																						{
																							"nativeSrc": "4549:17:11",
																							"nodeType": "YulAssignment",
																							"src": "4549:17:11",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "4558:1:11",
																										"nodeType": "YulIdentifier",
																										"src": "4558:1:11"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "4561:4:11",
																										"nodeType": "YulLiteral",
																										"src": "4561:4:11",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "4554:3:11",
																									"nodeType": "YulIdentifier",
																									"src": "4554:3:11"
																								},
																								"nativeSrc": "4554:12:11",
																								"nodeType": "YulFunctionCall",
																								"src": "4554:12:11"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "4549:1:11",
																									"nodeType": "YulIdentifier",
																									"src": "4549:1:11"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "4528:3:11",
																					"nodeType": "YulBlock",
																					"src": "4528:3:11",
																					"statements": []
																				},
																				"src": "4524:208:11"
																			},
																			{
																				"body": {
																					"nativeSrc": "4768:156:11",
																					"nodeType": "YulBlock",
																					"src": "4768:156:11",
																					"statements": [
																						{
																							"nativeSrc": "4786:43:11",
																							"nodeType": "YulVariableDeclaration",
																							"src": "4786:43:11",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "4813:3:11",
																												"nodeType": "YulIdentifier",
																												"src": "4813:3:11"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "4818:9:11",
																												"nodeType": "YulIdentifier",
																												"src": "4818:9:11"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "4809:3:11",
																											"nodeType": "YulIdentifier",
																											"src": "4809:3:11"
																										},
																										"nativeSrc": "4809:19:11",
																										"nodeType": "YulFunctionCall",
																										"src": "4809:19:11"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "4803:5:11",
																									"nodeType": "YulIdentifier",
																									"src": "4803:5:11"
																								},
																								"nativeSrc": "4803:26:11",
																								"nodeType": "YulFunctionCall",
																								"src": "4803:26:11"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "4790:9:11",
																									"nodeType": "YulTypedName",
																									"src": "4790:9:11",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "4853:6:11",
																										"nodeType": "YulIdentifier",
																										"src": "4853:6:11"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "4880:9:11",
																												"nodeType": "YulIdentifier",
																												"src": "4880:9:11"
																											},
																											{
																												"arguments": [
																													{
																														"name": "newLen",
																														"nativeSrc": "4895:6:11",
																														"nodeType": "YulIdentifier",
																														"src": "4895:6:11"
																													},
																													{
																														"kind": "number",
																														"nativeSrc": "4903:4:11",
																														"nodeType": "YulLiteral",
																														"src": "4903:4:11",
																														"type": "",
																														"value": "0x1f"
																													}
																												],
																												"functionName": {
																													"name": "and",
																													"nativeSrc": "4891:3:11",
																													"nodeType": "YulIdentifier",
																													"src": "4891:3:11"
																												},
																												"nativeSrc": "4891:17:11",
																												"nodeType": "YulFunctionCall",
																												"src": "4891:17:11"
																											}
																										],
																										"functionName": {
																											"name": "mask_bytes_dynamic",
																											"nativeSrc": "4861:18:11",
																											"nodeType": "YulIdentifier",
																											"src": "4861:18:11"
																										},
																										"nativeSrc": "4861:48:11",
																										"nodeType": "YulFunctionCall",
																										"src": "4861:48:11"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "4846:6:11",
																									"nodeType": "YulIdentifier",
																									"src": "4846:6:11"
																								},
																								"nativeSrc": "4846:64:11",
																								"nodeType": "YulFunctionCall",
																								"src": "4846:64:11"
																							},
																							"nativeSrc": "4846:64:11",
																							"nodeType": "YulExpressionStatement",
																							"src": "4846:64:11"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "4751:7:11",
																							"nodeType": "YulIdentifier",
																							"src": "4751:7:11"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "4760:6:11",
																							"nodeType": "YulIdentifier",
																							"src": "4760:6:11"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "4748:2:11",
																						"nodeType": "YulIdentifier",
																						"src": "4748:2:11"
																					},
																					"nativeSrc": "4748:19:11",
																					"nodeType": "YulFunctionCall",
																					"src": "4748:19:11"
																				},
																				"nativeSrc": "4745:179:11",
																				"nodeType": "YulIf",
																				"src": "4745:179:11"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "4944:4:11",
																							"nodeType": "YulIdentifier",
																							"src": "4944:4:11"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "newLen",
																											"nativeSrc": "4958:6:11",
																											"nodeType": "YulIdentifier",
																											"src": "4958:6:11"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "4966:1:11",
																											"nodeType": "YulLiteral",
																											"src": "4966:1:11",
																											"type": "",
																											"value": "2"
																										}
																									],
																									"functionName": {
																										"name": "mul",
																										"nativeSrc": "4954:3:11",
																										"nodeType": "YulIdentifier",
																										"src": "4954:3:11"
																									},
																									"nativeSrc": "4954:14:11",
																									"nodeType": "YulFunctionCall",
																									"src": "4954:14:11"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "4970:1:11",
																									"nodeType": "YulLiteral",
																									"src": "4970:1:11",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "4950:3:11",
																								"nodeType": "YulIdentifier",
																								"src": "4950:3:11"
																							},
																							"nativeSrc": "4950:22:11",
																							"nodeType": "YulFunctionCall",
																							"src": "4950:22:11"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "4937:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "4937:6:11"
																					},
																					"nativeSrc": "4937:36:11",
																					"nodeType": "YulFunctionCall",
																					"src": "4937:36:11"
																				},
																				"nativeSrc": "4937:36:11",
																				"nodeType": "YulExpressionStatement",
																				"src": "4937:36:11"
																			}
																		]
																	},
																	"nativeSrc": "4365:618:11",
																	"nodeType": "YulCase",
																	"src": "4365:618:11",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4370:1:11",
																		"nodeType": "YulLiteral",
																		"src": "4370:1:11",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "5000:222:11",
																		"nodeType": "YulBlock",
																		"src": "5000:222:11",
																		"statements": [
																			{
																				"nativeSrc": "5014:14:11",
																				"nodeType": "YulVariableDeclaration",
																				"src": "5014:14:11",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "5027:1:11",
																					"nodeType": "YulLiteral",
																					"src": "5027:1:11",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "5018:5:11",
																						"nodeType": "YulTypedName",
																						"src": "5018:5:11",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "5051:67:11",
																					"nodeType": "YulBlock",
																					"src": "5051:67:11",
																					"statements": [
																						{
																							"nativeSrc": "5069:35:11",
																							"nodeType": "YulAssignment",
																							"src": "5069:35:11",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "5088:3:11",
																												"nodeType": "YulIdentifier",
																												"src": "5088:3:11"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "5093:9:11",
																												"nodeType": "YulIdentifier",
																												"src": "5093:9:11"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "5084:3:11",
																											"nodeType": "YulIdentifier",
																											"src": "5084:3:11"
																										},
																										"nativeSrc": "5084:19:11",
																										"nodeType": "YulFunctionCall",
																										"src": "5084:19:11"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "5078:5:11",
																									"nodeType": "YulIdentifier",
																									"src": "5078:5:11"
																								},
																								"nativeSrc": "5078:26:11",
																								"nodeType": "YulFunctionCall",
																								"src": "5078:26:11"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "5069:5:11",
																									"nodeType": "YulIdentifier",
																									"src": "5069:5:11"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "5044:6:11",
																					"nodeType": "YulIdentifier",
																					"src": "5044:6:11"
																				},
																				"nativeSrc": "5041:77:11",
																				"nodeType": "YulIf",
																				"src": "5041:77:11"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "5138:4:11",
																							"nodeType": "YulIdentifier",
																							"src": "5138:4:11"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "5197:5:11",
																									"nodeType": "YulIdentifier",
																									"src": "5197:5:11"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "5204:6:11",
																									"nodeType": "YulIdentifier",
																									"src": "5204:6:11"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "5144:52:11",
																								"nodeType": "YulIdentifier",
																								"src": "5144:52:11"
																							},
																							"nativeSrc": "5144:67:11",
																							"nodeType": "YulFunctionCall",
																							"src": "5144:67:11"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "5131:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "5131:6:11"
																					},
																					"nativeSrc": "5131:81:11",
																					"nodeType": "YulFunctionCall",
																					"src": "5131:81:11"
																				},
																				"nativeSrc": "5131:81:11",
																				"nodeType": "YulExpressionStatement",
																				"src": "5131:81:11"
																			}
																		]
																	},
																	"nativeSrc": "4992:230:11",
																	"nodeType": "YulCase",
																	"src": "4992:230:11",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "4345:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "4345:6:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4353:2:11",
																		"nodeType": "YulLiteral",
																		"src": "4353:2:11",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "4342:2:11",
																	"nodeType": "YulIdentifier",
																	"src": "4342:2:11"
																},
																"nativeSrc": "4342:14:11",
																"nodeType": "YulFunctionCall",
																"src": "4342:14:11"
															},
															"nativeSrc": "4335:887:11",
															"nodeType": "YulSwitch",
															"src": "4335:887:11"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "3833:1395:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "3914:4:11",
														"nodeType": "YulTypedName",
														"src": "3914:4:11",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "3920:3:11",
														"nodeType": "YulTypedName",
														"src": "3920:3:11",
														"type": ""
													}
												],
												"src": "3833:1395:11"
											}
										]
									},
									"contents": "{\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n}\n",
									"id": 11,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b506040518060400160405280600a81526020017f5374616b65546f6b656e000000000000000000000000000000000000000000008152506040518060400160405280600381526020017f53544b0000000000000000000000000000000000000000000000000000000000815250816003908161008b91906102dd565b50806004908161009b91906102dd565b5050506103ac565b5f81519050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f600282049050600182168061011e57607f821691505b602082108103610131576101306100da565b5b50919050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f600883026101937fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82610158565b61019d8683610158565b95508019841693508086168417925050509392505050565b5f819050919050565b5f819050919050565b5f6101e16101dc6101d7846101b5565b6101be565b6101b5565b9050919050565b5f819050919050565b6101fa836101c7565b61020e610206826101e8565b848454610164565b825550505050565b5f90565b610222610216565b61022d8184846101f1565b505050565b5b81811015610250576102455f8261021a565b600181019050610233565b5050565b601f8211156102955761026681610137565b61026f84610149565b8101602085101561027e578190505b61029261028a85610149565b830182610232565b50505b505050565b5f82821c905092915050565b5f6102b55f198460080261029a565b1980831691505092915050565b5f6102cd83836102a6565b9150826002028217905092915050565b6102e6826100a3565b67ffffffffffffffff8111156102ff576102fe6100ad565b5b6103098254610107565b610314828285610254565b5f60209050601f831160018114610345575f8415610333578287015190505b61033d85826102c2565b8655506103a4565b601f19841661035386610137565b5f5b8281101561037a57848901518255600182019150602085019450602081019050610355565b868310156103975784890151610393601f8916826102a6565b8355505b6001600288020188555050505b505050505050565b610ebf806103b95f395ff3fe608060405234801561000f575f80fd5b506004361061009c575f3560e01c806370a082311161006457806370a082311461015a57806395d89b411461018a578063a0712d68146101a8578063a9059cbb146101c4578063dd62ed3e146101f45761009c565b806306fdde03146100a0578063095ea7b3146100be57806318160ddd146100ee57806323b872dd1461010c578063313ce5671461013c575b5f80fd5b6100a8610224565b6040516100b59190610b0d565b60405180910390f35b6100d860048036038101906100d39190610bbe565b6102b4565b6040516100e59190610c16565b60405180910390f35b6100f66102d6565b6040516101039190610c3e565b60405180910390f35b61012660048036038101906101219190610c57565b6102df565b6040516101339190610c16565b60405180910390f35b61014461030d565b6040516101519190610cc2565b60405180910390f35b610174600480360381019061016f9190610cdb565b610315565b6040516101819190610c3e565b60405180910390f35b61019261035a565b60405161019f9190610b0d565b60405180910390f35b6101c260048036038101906101bd9190610d06565b6103ea565b005b6101de60048036038101906101d99190610bbe565b6103f7565b6040516101eb9190610c16565b60405180910390f35b61020e60048036038101906102099190610d31565b610419565b60405161021b9190610c3e565b60405180910390f35b60606003805461023390610d9c565b80601f016020809104026020016040519081016040528092919081815260200182805461025f90610d9c565b80156102aa5780601f10610281576101008083540402835291602001916102aa565b820191905f5260205f20905b81548152906001019060200180831161028d57829003601f168201915b5050505050905090565b5f806102be61049b565b90506102cb8185856104a2565b600191505092915050565b5f600254905090565b5f806102e961049b565b90506102f68582856104b4565b610301858585610546565b60019150509392505050565b5f6012905090565b5f805f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b60606004805461036990610d9c565b80601f016020809104026020016040519081016040528092919081815260200182805461039590610d9c565b80156103e05780601f106103b7576101008083540402835291602001916103e0565b820191905f5260205f20905b8154815290600101906020018083116103c357829003601f168201915b5050505050905090565b6103f43382610636565b50565b5f8061040161049b565b905061040e818585610546565b600191505092915050565b5f60015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905092915050565b5f33905090565b6104af83838360016106b5565b505050565b5f6104bf8484610419565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146105405781811015610531578281836040517ffb8f41b200000000000000000000000000000000000000000000000000000000815260040161052893929190610ddb565b60405180910390fd5b61053f84848484035f6106b5565b5b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036105b6575f6040517f96c6fd1e0000000000000000000000000000000000000000000000000000000081526004016105ad9190610e10565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610626575f6040517fec442f0500000000000000000000000000000000000000000000000000000000815260040161061d9190610e10565b60405180910390fd5b610631838383610884565b505050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036106a6575f6040517fec442f0500000000000000000000000000000000000000000000000000000000815260040161069d9190610e10565b60405180910390fd5b6106b15f8383610884565b5050565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603610725575f6040517fe602df0500000000000000000000000000000000000000000000000000000000815260040161071c9190610e10565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610795575f6040517f94280d6200000000000000000000000000000000000000000000000000000000815260040161078c9190610e10565b60405180910390fd5b8160015f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550801561087e578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040516108759190610c3e565b60405180910390a35b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036108d4578060025f8282546108c89190610e56565b925050819055506109a2565b5f805f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205490508181101561095d578381836040517fe450d38c00000000000000000000000000000000000000000000000000000000815260040161095493929190610ddb565b60405180910390fd5b8181035f808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036109e9578060025f8282540392505081905550610a33565b805f808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051610a909190610c3e565b60405180910390a3505050565b5f81519050919050565b5f82825260208201905092915050565b8281835e5f83830152505050565b5f601f19601f8301169050919050565b5f610adf82610a9d565b610ae98185610aa7565b9350610af9818560208601610ab7565b610b0281610ac5565b840191505092915050565b5f6020820190508181035f830152610b258184610ad5565b905092915050565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f610b5a82610b31565b9050919050565b610b6a81610b50565b8114610b74575f80fd5b50565b5f81359050610b8581610b61565b92915050565b5f819050919050565b610b9d81610b8b565b8114610ba7575f80fd5b50565b5f81359050610bb881610b94565b92915050565b5f8060408385031215610bd457610bd3610b2d565b5b5f610be185828601610b77565b9250506020610bf285828601610baa565b9150509250929050565b5f8115159050919050565b610c1081610bfc565b82525050565b5f602082019050610c295f830184610c07565b92915050565b610c3881610b8b565b82525050565b5f602082019050610c515f830184610c2f565b92915050565b5f805f60608486031215610c6e57610c6d610b2d565b5b5f610c7b86828701610b77565b9350506020610c8c86828701610b77565b9250506040610c9d86828701610baa565b9150509250925092565b5f60ff82169050919050565b610cbc81610ca7565b82525050565b5f602082019050610cd55f830184610cb3565b92915050565b5f60208284031215610cf057610cef610b2d565b5b5f610cfd84828501610b77565b91505092915050565b5f60208284031215610d1b57610d1a610b2d565b5b5f610d2884828501610baa565b91505092915050565b5f8060408385031215610d4757610d46610b2d565b5b5f610d5485828601610b77565b9250506020610d6585828601610b77565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f6002820490506001821680610db357607f821691505b602082108103610dc657610dc5610d6f565b5b50919050565b610dd581610b50565b82525050565b5f606082019050610dee5f830186610dcc565b610dfb6020830185610c2f565b610e086040830184610c2f565b949350505050565b5f602082019050610e235f830184610dcc565b92915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f610e6082610b8b565b9150610e6b83610b8b565b9250828201905080821115610e8357610e82610e29565b5b9291505056fea264697066735822122028b976fd646428bda1fda284fd6b383f35620a345acbff012c2a45f875bc980f64736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xA DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5374616B65546F6B656E00000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x53544B0000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 PUSH1 0x3 SWAP1 DUP2 PUSH2 0x8B SWAP2 SWAP1 PUSH2 0x2DD JUMP JUMPDEST POP DUP1 PUSH1 0x4 SWAP1 DUP2 PUSH2 0x9B SWAP2 SWAP1 PUSH2 0x2DD JUMP JUMPDEST POP POP POP PUSH2 0x3AC JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x11E JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x131 JUMPI PUSH2 0x130 PUSH2 0xDA JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP DUP2 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP4 MUL PUSH2 0x193 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x158 JUMP JUMPDEST PUSH2 0x19D DUP7 DUP4 PUSH2 0x158 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1E1 PUSH2 0x1DC PUSH2 0x1D7 DUP5 PUSH2 0x1B5 JUMP JUMPDEST PUSH2 0x1BE JUMP JUMPDEST PUSH2 0x1B5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1FA DUP4 PUSH2 0x1C7 JUMP JUMPDEST PUSH2 0x20E PUSH2 0x206 DUP3 PUSH2 0x1E8 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x164 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 SWAP1 JUMP JUMPDEST PUSH2 0x222 PUSH2 0x216 JUMP JUMPDEST PUSH2 0x22D DUP2 DUP5 DUP5 PUSH2 0x1F1 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x250 JUMPI PUSH2 0x245 PUSH0 DUP3 PUSH2 0x21A JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x233 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x295 JUMPI PUSH2 0x266 DUP2 PUSH2 0x137 JUMP JUMPDEST PUSH2 0x26F DUP5 PUSH2 0x149 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x27E JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x292 PUSH2 0x28A DUP6 PUSH2 0x149 JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x232 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2B5 PUSH0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x29A JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2CD DUP4 DUP4 PUSH2 0x2A6 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2E6 DUP3 PUSH2 0xA3 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2FF JUMPI PUSH2 0x2FE PUSH2 0xAD JUMP JUMPDEST JUMPDEST PUSH2 0x309 DUP3 SLOAD PUSH2 0x107 JUMP JUMPDEST PUSH2 0x314 DUP3 DUP3 DUP6 PUSH2 0x254 JUMP JUMPDEST PUSH0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x345 JUMPI PUSH0 DUP5 ISZERO PUSH2 0x333 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x33D DUP6 DUP3 PUSH2 0x2C2 JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x3A4 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x353 DUP7 PUSH2 0x137 JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x37A JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x355 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x397 JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x393 PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x2A6 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0xEBF DUP1 PUSH2 0x3B9 PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x9C JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0x64 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x15A JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x18A JUMPI DUP1 PUSH4 0xA0712D68 EQ PUSH2 0x1A8 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x1C4 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x1F4 JUMPI PUSH2 0x9C JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xA0 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xBE JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xEE JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x10C JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x13C JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xA8 PUSH2 0x224 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xB5 SWAP2 SWAP1 PUSH2 0xB0D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xD8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xD3 SWAP2 SWAP1 PUSH2 0xBBE JUMP JUMPDEST PUSH2 0x2B4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE5 SWAP2 SWAP1 PUSH2 0xC16 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xF6 PUSH2 0x2D6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x103 SWAP2 SWAP1 PUSH2 0xC3E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x126 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x121 SWAP2 SWAP1 PUSH2 0xC57 JUMP JUMPDEST PUSH2 0x2DF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x133 SWAP2 SWAP1 PUSH2 0xC16 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x144 PUSH2 0x30D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x151 SWAP2 SWAP1 PUSH2 0xCC2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x174 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x16F SWAP2 SWAP1 PUSH2 0xCDB JUMP JUMPDEST PUSH2 0x315 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x181 SWAP2 SWAP1 PUSH2 0xC3E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x192 PUSH2 0x35A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x19F SWAP2 SWAP1 PUSH2 0xB0D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1C2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1BD SWAP2 SWAP1 PUSH2 0xD06 JUMP JUMPDEST PUSH2 0x3EA JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1DE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1D9 SWAP2 SWAP1 PUSH2 0xBBE JUMP JUMPDEST PUSH2 0x3F7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1EB SWAP2 SWAP1 PUSH2 0xC16 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x20E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x209 SWAP2 SWAP1 PUSH2 0xD31 JUMP JUMPDEST PUSH2 0x419 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x21B SWAP2 SWAP1 PUSH2 0xC3E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x233 SWAP1 PUSH2 0xD9C JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x25F SWAP1 PUSH2 0xD9C JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2AA JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x281 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2AA JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x28D JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x2BE PUSH2 0x49B JUMP JUMPDEST SWAP1 POP PUSH2 0x2CB DUP2 DUP6 DUP6 PUSH2 0x4A2 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x2E9 PUSH2 0x49B JUMP JUMPDEST SWAP1 POP PUSH2 0x2F6 DUP6 DUP3 DUP6 PUSH2 0x4B4 JUMP JUMPDEST PUSH2 0x301 DUP6 DUP6 DUP6 PUSH2 0x546 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x369 SWAP1 PUSH2 0xD9C JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x395 SWAP1 PUSH2 0xD9C JUMP JUMPDEST DUP1 ISZERO PUSH2 0x3E0 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x3B7 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x3E0 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x3C3 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x3F4 CALLER DUP3 PUSH2 0x636 JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x401 PUSH2 0x49B JUMP JUMPDEST SWAP1 POP PUSH2 0x40E DUP2 DUP6 DUP6 PUSH2 0x546 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x4AF DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x6B5 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x4BF DUP5 DUP5 PUSH2 0x419 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0x540 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x531 JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x528 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xDDB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x53F DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0x6B5 JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x5B6 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5AD SWAP2 SWAP1 PUSH2 0xE10 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x626 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x61D SWAP2 SWAP1 PUSH2 0xE10 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x631 DUP4 DUP4 DUP4 PUSH2 0x884 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x6A6 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x69D SWAP2 SWAP1 PUSH2 0xE10 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x6B1 PUSH0 DUP4 DUP4 PUSH2 0x884 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x725 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x71C SWAP2 SWAP1 PUSH2 0xE10 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x795 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x78C SWAP2 SWAP1 PUSH2 0xE10 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0x87E JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x875 SWAP2 SWAP1 PUSH2 0xC3E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x8D4 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x8C8 SWAP2 SWAP1 PUSH2 0xE56 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x9A2 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x95D JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x954 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xDDB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x9E9 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0xA33 JUMP JUMPDEST DUP1 PUSH0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0xA90 SWAP2 SWAP1 PUSH2 0xC3E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xADF DUP3 PUSH2 0xA9D JUMP JUMPDEST PUSH2 0xAE9 DUP2 DUP6 PUSH2 0xAA7 JUMP JUMPDEST SWAP4 POP PUSH2 0xAF9 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xAB7 JUMP JUMPDEST PUSH2 0xB02 DUP2 PUSH2 0xAC5 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xB25 DUP2 DUP5 PUSH2 0xAD5 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xB5A DUP3 PUSH2 0xB31 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB6A DUP2 PUSH2 0xB50 JUMP JUMPDEST DUP2 EQ PUSH2 0xB74 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xB85 DUP2 PUSH2 0xB61 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB9D DUP2 PUSH2 0xB8B JUMP JUMPDEST DUP2 EQ PUSH2 0xBA7 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xBB8 DUP2 PUSH2 0xB94 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xBD4 JUMPI PUSH2 0xBD3 PUSH2 0xB2D JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xBE1 DUP6 DUP3 DUP7 ADD PUSH2 0xB77 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xBF2 DUP6 DUP3 DUP7 ADD PUSH2 0xBAA JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xC10 DUP2 PUSH2 0xBFC JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xC29 PUSH0 DUP4 ADD DUP5 PUSH2 0xC07 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xC38 DUP2 PUSH2 0xB8B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xC51 PUSH0 DUP4 ADD DUP5 PUSH2 0xC2F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xC6E JUMPI PUSH2 0xC6D PUSH2 0xB2D JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xC7B DUP7 DUP3 DUP8 ADD PUSH2 0xB77 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0xC8C DUP7 DUP3 DUP8 ADD PUSH2 0xB77 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0xC9D DUP7 DUP3 DUP8 ADD PUSH2 0xBAA JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xCBC DUP2 PUSH2 0xCA7 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xCD5 PUSH0 DUP4 ADD DUP5 PUSH2 0xCB3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xCF0 JUMPI PUSH2 0xCEF PUSH2 0xB2D JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xCFD DUP5 DUP3 DUP6 ADD PUSH2 0xB77 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD1B JUMPI PUSH2 0xD1A PUSH2 0xB2D JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xD28 DUP5 DUP3 DUP6 ADD PUSH2 0xBAA JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xD47 JUMPI PUSH2 0xD46 PUSH2 0xB2D JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xD54 DUP6 DUP3 DUP7 ADD PUSH2 0xB77 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xD65 DUP6 DUP3 DUP7 ADD PUSH2 0xB77 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0xDB3 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0xDC6 JUMPI PUSH2 0xDC5 PUSH2 0xD6F JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xDD5 DUP2 PUSH2 0xB50 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0xDEE PUSH0 DUP4 ADD DUP7 PUSH2 0xDCC JUMP JUMPDEST PUSH2 0xDFB PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0xC2F JUMP JUMPDEST PUSH2 0xE08 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xC2F JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xE23 PUSH0 DUP4 ADD DUP5 PUSH2 0xDCC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0xE60 DUP3 PUSH2 0xB8B JUMP JUMPDEST SWAP2 POP PUSH2 0xE6B DUP4 PUSH2 0xB8B JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0xE83 JUMPI PUSH2 0xE82 PUSH2 0xE29 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x28 0xB9 PUSH23 0xFD646428BDA1FDA284FD6B383F35620A345ACBFF012C2A GASLIMIT 0xF8 PUSH22 0xBC980F64736F6C634300081A00330000000000000000 ",
							"sourceMap": "118:163:9:-:0;;;153:41;;;;;;;;;;1601:113:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1675:5;1667;:13;;;;;;:::i;:::-;;1700:7;1690;:17;;;;;;:::i;:::-;;1601:113;;118:163:9;;7:99:11;59:6;93:5;87:12;77:22;;7:99;;;:::o;112:180::-;160:77;157:1;150:88;257:4;254:1;247:15;281:4;278:1;271:15;298:180;346:77;343:1;336:88;443:4;440:1;433:15;467:4;464:1;457:15;484:320;528:6;565:1;559:4;555:12;545:22;;612:1;606:4;602:12;633:18;623:81;;689:4;681:6;677:17;667:27;;623:81;751:2;743:6;740:14;720:18;717:38;714:84;;770:18;;:::i;:::-;714:84;535:269;484:320;;;:::o;810:141::-;859:4;882:3;874:11;;905:3;902:1;895:14;939:4;936:1;926:18;918:26;;810:141;;;:::o;957:93::-;994:6;1041:2;1036;1029:5;1025:14;1021:23;1011:33;;957:93;;;:::o;1056:107::-;1100:8;1150:5;1144:4;1140:16;1119:37;;1056:107;;;;:::o;1169:393::-;1238:6;1288:1;1276:10;1272:18;1311:97;1341:66;1330:9;1311:97;:::i;:::-;1429:39;1459:8;1448:9;1429:39;:::i;:::-;1417:51;;1501:4;1497:9;1490:5;1486:21;1477:30;;1550:4;1540:8;1536:19;1529:5;1526:30;1516:40;;1245:317;;1169:393;;;;;:::o;1568:77::-;1605:7;1634:5;1623:16;;1568:77;;;:::o;1651:60::-;1679:3;1700:5;1693:12;;1651:60;;;:::o;1717:142::-;1767:9;1800:53;1818:34;1827:24;1845:5;1827:24;:::i;:::-;1818:34;:::i;:::-;1800:53;:::i;:::-;1787:66;;1717:142;;;:::o;1865:75::-;1908:3;1929:5;1922:12;;1865:75;;;:::o;1946:269::-;2056:39;2087:7;2056:39;:::i;:::-;2117:91;2166:41;2190:16;2166:41;:::i;:::-;2158:6;2151:4;2145:11;2117:91;:::i;:::-;2111:4;2104:105;2022:193;1946:269;;;:::o;2221:73::-;2266:3;2221:73;:::o;2300:189::-;2377:32;;:::i;:::-;2418:65;2476:6;2468;2462:4;2418:65;:::i;:::-;2353:136;2300:189;;:::o;2495:186::-;2555:120;2572:3;2565:5;2562:14;2555:120;;;2626:39;2663:1;2656:5;2626:39;:::i;:::-;2599:1;2592:5;2588:13;2579:22;;2555:120;;;2495:186;;:::o;2687:543::-;2788:2;2783:3;2780:11;2777:446;;;2822:38;2854:5;2822:38;:::i;:::-;2906:29;2924:10;2906:29;:::i;:::-;2896:8;2892:44;3089:2;3077:10;3074:18;3071:49;;;3110:8;3095:23;;3071:49;3133:80;3189:22;3207:3;3189:22;:::i;:::-;3179:8;3175:37;3162:11;3133:80;:::i;:::-;2792:431;;2777:446;2687:543;;;:::o;3236:117::-;3290:8;3340:5;3334:4;3330:16;3309:37;;3236:117;;;;:::o;3359:169::-;3403:6;3436:51;3484:1;3480:6;3472:5;3469:1;3465:13;3436:51;:::i;:::-;3432:56;3517:4;3511;3507:15;3497:25;;3410:118;3359:169;;;;:::o;3533:295::-;3609:4;3755:29;3780:3;3774:4;3755:29;:::i;:::-;3747:37;;3817:3;3814:1;3810:11;3804:4;3801:21;3793:29;;3533:295;;;;:::o;3833:1395::-;3950:37;3983:3;3950:37;:::i;:::-;4052:18;4044:6;4041:30;4038:56;;;4074:18;;:::i;:::-;4038:56;4118:38;4150:4;4144:11;4118:38;:::i;:::-;4203:67;4263:6;4255;4249:4;4203:67;:::i;:::-;4297:1;4321:4;4308:17;;4353:2;4345:6;4342:14;4370:1;4365:618;;;;5027:1;5044:6;5041:77;;;5093:9;5088:3;5084:19;5078:26;5069:35;;5041:77;5144:67;5204:6;5197:5;5144:67;:::i;:::-;5138:4;5131:81;5000:222;4335:887;;4365:618;4417:4;4413:9;4405:6;4401:22;4451:37;4483:4;4451:37;:::i;:::-;4510:1;4524:208;4538:7;4535:1;4532:14;4524:208;;;4617:9;4612:3;4608:19;4602:26;4594:6;4587:42;4668:1;4660:6;4656:14;4646:24;;4715:2;4704:9;4700:18;4687:31;;4561:4;4558:1;4554:12;4549:17;;4524:208;;;4760:6;4751:7;4748:19;4745:179;;;4818:9;4813:3;4809:19;4803:26;4861:48;4903:4;4895:6;4891:17;4880:9;4861:48;:::i;:::-;4853:6;4846:64;4768:156;4745:179;4970:1;4966;4958:6;4954:14;4950:22;4944:4;4937:36;4372:611;;;4335:887;;3925:1303;;;3833:1395;;:::o;118:163:9:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_approve_1037": {
									"entryPoint": 1186,
									"id": 1037,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_approve_1097": {
									"entryPoint": 1717,
									"id": 1097,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_mint_986": {
									"entryPoint": 1590,
									"id": 986,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_1262": {
									"entryPoint": 1179,
									"id": 1262,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_spendAllowance_1145": {
									"entryPoint": 1204,
									"id": 1145,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transfer_876": {
									"entryPoint": 1350,
									"id": 876,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_update_953": {
									"entryPoint": 2180,
									"id": 953,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@allowance_773": {
									"entryPoint": 1049,
									"id": 773,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_797": {
									"entryPoint": 692,
									"id": 797,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_732": {
									"entryPoint": 789,
									"id": 732,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@decimals_710": {
									"entryPoint": 781,
									"id": 710,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@mint_1331": {
									"entryPoint": 1002,
									"id": 1331,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@name_692": {
									"entryPoint": 548,
									"id": 692,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@symbol_701": {
									"entryPoint": 858,
									"id": 701,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@totalSupply_719": {
									"entryPoint": 726,
									"id": 719,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_829": {
									"entryPoint": 735,
									"id": 829,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transfer_756": {
									"entryPoint": 1015,
									"id": 756,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 2935,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 2986,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 3291,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 3377,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 3159,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 3006,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 3334,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 3532,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 3079,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 2773,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 3119,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint8_to_t_uint8_fromStack": {
									"entryPoint": 3251,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 3600,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 3547,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 3094,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 2829,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 3134,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": 3266,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 2717,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 2727,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 3670,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 2896,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 3068,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 2865,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 2955,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint8": {
									"entryPoint": 3239,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 2743,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 3484,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 3625,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 3439,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 2861,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 2757,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"validator_revert_t_address": {
									"entryPoint": 2913,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 2964,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:7588:11",
										"nodeType": "YulBlock",
										"src": "0:7588:11",
										"statements": [
											{
												"body": {
													"nativeSrc": "66:40:11",
													"nodeType": "YulBlock",
													"src": "66:40:11",
													"statements": [
														{
															"nativeSrc": "77:22:11",
															"nodeType": "YulAssignment",
															"src": "77:22:11",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "93:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "93:5:11"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "87:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "87:5:11"
																},
																"nativeSrc": "87:12:11",
																"nodeType": "YulFunctionCall",
																"src": "87:12:11"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "77:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "77:6:11"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "7:99:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "49:5:11",
														"nodeType": "YulTypedName",
														"src": "49:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "59:6:11",
														"nodeType": "YulTypedName",
														"src": "59:6:11",
														"type": ""
													}
												],
												"src": "7:99:11"
											},
											{
												"body": {
													"nativeSrc": "208:73:11",
													"nodeType": "YulBlock",
													"src": "208:73:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "225:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "225:3:11"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "230:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "230:6:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "218:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "218:6:11"
																},
																"nativeSrc": "218:19:11",
																"nodeType": "YulFunctionCall",
																"src": "218:19:11"
															},
															"nativeSrc": "218:19:11",
															"nodeType": "YulExpressionStatement",
															"src": "218:19:11"
														},
														{
															"nativeSrc": "246:29:11",
															"nodeType": "YulAssignment",
															"src": "246:29:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "265:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "265:3:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "270:4:11",
																		"nodeType": "YulLiteral",
																		"src": "270:4:11",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "261:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "261:3:11"
																},
																"nativeSrc": "261:14:11",
																"nodeType": "YulFunctionCall",
																"src": "261:14:11"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "246:11:11",
																	"nodeType": "YulIdentifier",
																	"src": "246:11:11"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "112:169:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "180:3:11",
														"nodeType": "YulTypedName",
														"src": "180:3:11",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "185:6:11",
														"nodeType": "YulTypedName",
														"src": "185:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "196:11:11",
														"nodeType": "YulTypedName",
														"src": "196:11:11",
														"type": ""
													}
												],
												"src": "112:169:11"
											},
											{
												"body": {
													"nativeSrc": "349:77:11",
													"nodeType": "YulBlock",
													"src": "349:77:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "366:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "366:3:11"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "371:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "371:3:11"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "376:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "376:6:11"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "360:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "360:5:11"
																},
																"nativeSrc": "360:23:11",
																"nodeType": "YulFunctionCall",
																"src": "360:23:11"
															},
															"nativeSrc": "360:23:11",
															"nodeType": "YulExpressionStatement",
															"src": "360:23:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "403:3:11",
																				"nodeType": "YulIdentifier",
																				"src": "403:3:11"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "408:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "408:6:11"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "399:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "399:3:11"
																		},
																		"nativeSrc": "399:16:11",
																		"nodeType": "YulFunctionCall",
																		"src": "399:16:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "417:1:11",
																		"nodeType": "YulLiteral",
																		"src": "417:1:11",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "392:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "392:6:11"
																},
																"nativeSrc": "392:27:11",
																"nodeType": "YulFunctionCall",
																"src": "392:27:11"
															},
															"nativeSrc": "392:27:11",
															"nodeType": "YulExpressionStatement",
															"src": "392:27:11"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "287:139:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "331:3:11",
														"nodeType": "YulTypedName",
														"src": "331:3:11",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "336:3:11",
														"nodeType": "YulTypedName",
														"src": "336:3:11",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "341:6:11",
														"nodeType": "YulTypedName",
														"src": "341:6:11",
														"type": ""
													}
												],
												"src": "287:139:11"
											},
											{
												"body": {
													"nativeSrc": "480:54:11",
													"nodeType": "YulBlock",
													"src": "480:54:11",
													"statements": [
														{
															"nativeSrc": "490:38:11",
															"nodeType": "YulAssignment",
															"src": "490:38:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "508:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "508:5:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "515:2:11",
																				"nodeType": "YulLiteral",
																				"src": "515:2:11",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "504:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "504:3:11"
																		},
																		"nativeSrc": "504:14:11",
																		"nodeType": "YulFunctionCall",
																		"src": "504:14:11"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "524:2:11",
																				"nodeType": "YulLiteral",
																				"src": "524:2:11",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "520:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "520:3:11"
																		},
																		"nativeSrc": "520:7:11",
																		"nodeType": "YulFunctionCall",
																		"src": "520:7:11"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "500:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "500:3:11"
																},
																"nativeSrc": "500:28:11",
																"nodeType": "YulFunctionCall",
																"src": "500:28:11"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "490:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "490:6:11"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "432:102:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "463:5:11",
														"nodeType": "YulTypedName",
														"src": "463:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "473:6:11",
														"nodeType": "YulTypedName",
														"src": "473:6:11",
														"type": ""
													}
												],
												"src": "432:102:11"
											},
											{
												"body": {
													"nativeSrc": "632:285:11",
													"nodeType": "YulBlock",
													"src": "632:285:11",
													"statements": [
														{
															"nativeSrc": "642:53:11",
															"nodeType": "YulVariableDeclaration",
															"src": "642:53:11",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "689:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "689:5:11"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "656:32:11",
																	"nodeType": "YulIdentifier",
																	"src": "656:32:11"
																},
																"nativeSrc": "656:39:11",
																"nodeType": "YulFunctionCall",
																"src": "656:39:11"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "646:6:11",
																	"nodeType": "YulTypedName",
																	"src": "646:6:11",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "704:78:11",
															"nodeType": "YulAssignment",
															"src": "704:78:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "770:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "770:3:11"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "775:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "775:6:11"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "711:58:11",
																	"nodeType": "YulIdentifier",
																	"src": "711:58:11"
																},
																"nativeSrc": "711:71:11",
																"nodeType": "YulFunctionCall",
																"src": "711:71:11"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "704:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "704:3:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "830:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "830:5:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "837:4:11",
																				"nodeType": "YulLiteral",
																				"src": "837:4:11",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "826:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "826:3:11"
																		},
																		"nativeSrc": "826:16:11",
																		"nodeType": "YulFunctionCall",
																		"src": "826:16:11"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "844:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "844:3:11"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "849:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "849:6:11"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "791:34:11",
																	"nodeType": "YulIdentifier",
																	"src": "791:34:11"
																},
																"nativeSrc": "791:65:11",
																"nodeType": "YulFunctionCall",
																"src": "791:65:11"
															},
															"nativeSrc": "791:65:11",
															"nodeType": "YulExpressionStatement",
															"src": "791:65:11"
														},
														{
															"nativeSrc": "865:46:11",
															"nodeType": "YulAssignment",
															"src": "865:46:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "876:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "876:3:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "903:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "903:6:11"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "881:21:11",
																			"nodeType": "YulIdentifier",
																			"src": "881:21:11"
																		},
																		"nativeSrc": "881:29:11",
																		"nodeType": "YulFunctionCall",
																		"src": "881:29:11"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "872:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "872:3:11"
																},
																"nativeSrc": "872:39:11",
																"nodeType": "YulFunctionCall",
																"src": "872:39:11"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "865:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "865:3:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "540:377:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "613:5:11",
														"nodeType": "YulTypedName",
														"src": "613:5:11",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "620:3:11",
														"nodeType": "YulTypedName",
														"src": "620:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "628:3:11",
														"nodeType": "YulTypedName",
														"src": "628:3:11",
														"type": ""
													}
												],
												"src": "540:377:11"
											},
											{
												"body": {
													"nativeSrc": "1041:195:11",
													"nodeType": "YulBlock",
													"src": "1041:195:11",
													"statements": [
														{
															"nativeSrc": "1051:26:11",
															"nodeType": "YulAssignment",
															"src": "1051:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1063:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "1063:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1074:2:11",
																		"nodeType": "YulLiteral",
																		"src": "1074:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1059:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "1059:3:11"
																},
																"nativeSrc": "1059:18:11",
																"nodeType": "YulFunctionCall",
																"src": "1059:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1051:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "1051:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1098:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "1098:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1109:1:11",
																				"nodeType": "YulLiteral",
																				"src": "1109:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1094:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "1094:3:11"
																		},
																		"nativeSrc": "1094:17:11",
																		"nodeType": "YulFunctionCall",
																		"src": "1094:17:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "1117:4:11",
																				"nodeType": "YulIdentifier",
																				"src": "1117:4:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1123:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "1123:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1113:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "1113:3:11"
																		},
																		"nativeSrc": "1113:20:11",
																		"nodeType": "YulFunctionCall",
																		"src": "1113:20:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1087:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "1087:6:11"
																},
																"nativeSrc": "1087:47:11",
																"nodeType": "YulFunctionCall",
																"src": "1087:47:11"
															},
															"nativeSrc": "1087:47:11",
															"nodeType": "YulExpressionStatement",
															"src": "1087:47:11"
														},
														{
															"nativeSrc": "1143:86:11",
															"nodeType": "YulAssignment",
															"src": "1143:86:11",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1215:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "1215:6:11"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "1224:4:11",
																		"nodeType": "YulIdentifier",
																		"src": "1224:4:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "1151:63:11",
																	"nodeType": "YulIdentifier",
																	"src": "1151:63:11"
																},
																"nativeSrc": "1151:78:11",
																"nodeType": "YulFunctionCall",
																"src": "1151:78:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1143:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "1143:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "923:313:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1013:9:11",
														"nodeType": "YulTypedName",
														"src": "1013:9:11",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1025:6:11",
														"nodeType": "YulTypedName",
														"src": "1025:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1036:4:11",
														"nodeType": "YulTypedName",
														"src": "1036:4:11",
														"type": ""
													}
												],
												"src": "923:313:11"
											},
											{
												"body": {
													"nativeSrc": "1282:35:11",
													"nodeType": "YulBlock",
													"src": "1282:35:11",
													"statements": [
														{
															"nativeSrc": "1292:19:11",
															"nodeType": "YulAssignment",
															"src": "1292:19:11",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1308:2:11",
																		"nodeType": "YulLiteral",
																		"src": "1308:2:11",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1302:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "1302:5:11"
																},
																"nativeSrc": "1302:9:11",
																"nodeType": "YulFunctionCall",
																"src": "1302:9:11"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "1292:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "1292:6:11"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "1242:75:11",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "1275:6:11",
														"nodeType": "YulTypedName",
														"src": "1275:6:11",
														"type": ""
													}
												],
												"src": "1242:75:11"
											},
											{
												"body": {
													"nativeSrc": "1412:28:11",
													"nodeType": "YulBlock",
													"src": "1412:28:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1429:1:11",
																		"nodeType": "YulLiteral",
																		"src": "1429:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1432:1:11",
																		"nodeType": "YulLiteral",
																		"src": "1432:1:11",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1422:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "1422:6:11"
																},
																"nativeSrc": "1422:12:11",
																"nodeType": "YulFunctionCall",
																"src": "1422:12:11"
															},
															"nativeSrc": "1422:12:11",
															"nodeType": "YulExpressionStatement",
															"src": "1422:12:11"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "1323:117:11",
												"nodeType": "YulFunctionDefinition",
												"src": "1323:117:11"
											},
											{
												"body": {
													"nativeSrc": "1535:28:11",
													"nodeType": "YulBlock",
													"src": "1535:28:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1552:1:11",
																		"nodeType": "YulLiteral",
																		"src": "1552:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1555:1:11",
																		"nodeType": "YulLiteral",
																		"src": "1555:1:11",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1545:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "1545:6:11"
																},
																"nativeSrc": "1545:12:11",
																"nodeType": "YulFunctionCall",
																"src": "1545:12:11"
															},
															"nativeSrc": "1545:12:11",
															"nodeType": "YulExpressionStatement",
															"src": "1545:12:11"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "1446:117:11",
												"nodeType": "YulFunctionDefinition",
												"src": "1446:117:11"
											},
											{
												"body": {
													"nativeSrc": "1614:81:11",
													"nodeType": "YulBlock",
													"src": "1614:81:11",
													"statements": [
														{
															"nativeSrc": "1624:65:11",
															"nodeType": "YulAssignment",
															"src": "1624:65:11",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1639:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "1639:5:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1646:42:11",
																		"nodeType": "YulLiteral",
																		"src": "1646:42:11",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1635:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "1635:3:11"
																},
																"nativeSrc": "1635:54:11",
																"nodeType": "YulFunctionCall",
																"src": "1635:54:11"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1624:7:11",
																	"nodeType": "YulIdentifier",
																	"src": "1624:7:11"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "1569:126:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1596:5:11",
														"nodeType": "YulTypedName",
														"src": "1596:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1606:7:11",
														"nodeType": "YulTypedName",
														"src": "1606:7:11",
														"type": ""
													}
												],
												"src": "1569:126:11"
											},
											{
												"body": {
													"nativeSrc": "1746:51:11",
													"nodeType": "YulBlock",
													"src": "1746:51:11",
													"statements": [
														{
															"nativeSrc": "1756:35:11",
															"nodeType": "YulAssignment",
															"src": "1756:35:11",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1785:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "1785:5:11"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "1767:17:11",
																	"nodeType": "YulIdentifier",
																	"src": "1767:17:11"
																},
																"nativeSrc": "1767:24:11",
																"nodeType": "YulFunctionCall",
																"src": "1767:24:11"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1756:7:11",
																	"nodeType": "YulIdentifier",
																	"src": "1756:7:11"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "1701:96:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1728:5:11",
														"nodeType": "YulTypedName",
														"src": "1728:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1738:7:11",
														"nodeType": "YulTypedName",
														"src": "1738:7:11",
														"type": ""
													}
												],
												"src": "1701:96:11"
											},
											{
												"body": {
													"nativeSrc": "1846:79:11",
													"nodeType": "YulBlock",
													"src": "1846:79:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "1903:16:11",
																"nodeType": "YulBlock",
																"src": "1903:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1912:1:11",
																					"nodeType": "YulLiteral",
																					"src": "1912:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1915:1:11",
																					"nodeType": "YulLiteral",
																					"src": "1915:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1905:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "1905:6:11"
																			},
																			"nativeSrc": "1905:12:11",
																			"nodeType": "YulFunctionCall",
																			"src": "1905:12:11"
																		},
																		"nativeSrc": "1905:12:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "1905:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1869:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "1869:5:11"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1894:5:11",
																						"nodeType": "YulIdentifier",
																						"src": "1894:5:11"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "1876:17:11",
																					"nodeType": "YulIdentifier",
																					"src": "1876:17:11"
																				},
																				"nativeSrc": "1876:24:11",
																				"nodeType": "YulFunctionCall",
																				"src": "1876:24:11"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1866:2:11",
																			"nodeType": "YulIdentifier",
																			"src": "1866:2:11"
																		},
																		"nativeSrc": "1866:35:11",
																		"nodeType": "YulFunctionCall",
																		"src": "1866:35:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1859:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "1859:6:11"
																},
																"nativeSrc": "1859:43:11",
																"nodeType": "YulFunctionCall",
																"src": "1859:43:11"
															},
															"nativeSrc": "1856:63:11",
															"nodeType": "YulIf",
															"src": "1856:63:11"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "1803:122:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1839:5:11",
														"nodeType": "YulTypedName",
														"src": "1839:5:11",
														"type": ""
													}
												],
												"src": "1803:122:11"
											},
											{
												"body": {
													"nativeSrc": "1983:87:11",
													"nodeType": "YulBlock",
													"src": "1983:87:11",
													"statements": [
														{
															"nativeSrc": "1993:29:11",
															"nodeType": "YulAssignment",
															"src": "1993:29:11",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2015:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "2015:6:11"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2002:12:11",
																	"nodeType": "YulIdentifier",
																	"src": "2002:12:11"
																},
																"nativeSrc": "2002:20:11",
																"nodeType": "YulFunctionCall",
																"src": "2002:20:11"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1993:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "1993:5:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2058:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "2058:5:11"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "2031:26:11",
																	"nodeType": "YulIdentifier",
																	"src": "2031:26:11"
																},
																"nativeSrc": "2031:33:11",
																"nodeType": "YulFunctionCall",
																"src": "2031:33:11"
															},
															"nativeSrc": "2031:33:11",
															"nodeType": "YulExpressionStatement",
															"src": "2031:33:11"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "1931:139:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1961:6:11",
														"nodeType": "YulTypedName",
														"src": "1961:6:11",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1969:3:11",
														"nodeType": "YulTypedName",
														"src": "1969:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1977:5:11",
														"nodeType": "YulTypedName",
														"src": "1977:5:11",
														"type": ""
													}
												],
												"src": "1931:139:11"
											},
											{
												"body": {
													"nativeSrc": "2121:32:11",
													"nodeType": "YulBlock",
													"src": "2121:32:11",
													"statements": [
														{
															"nativeSrc": "2131:16:11",
															"nodeType": "YulAssignment",
															"src": "2131:16:11",
															"value": {
																"name": "value",
																"nativeSrc": "2142:5:11",
																"nodeType": "YulIdentifier",
																"src": "2142:5:11"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2131:7:11",
																	"nodeType": "YulIdentifier",
																	"src": "2131:7:11"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "2076:77:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2103:5:11",
														"nodeType": "YulTypedName",
														"src": "2103:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2113:7:11",
														"nodeType": "YulTypedName",
														"src": "2113:7:11",
														"type": ""
													}
												],
												"src": "2076:77:11"
											},
											{
												"body": {
													"nativeSrc": "2202:79:11",
													"nodeType": "YulBlock",
													"src": "2202:79:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "2259:16:11",
																"nodeType": "YulBlock",
																"src": "2259:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2268:1:11",
																					"nodeType": "YulLiteral",
																					"src": "2268:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2271:1:11",
																					"nodeType": "YulLiteral",
																					"src": "2271:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2261:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "2261:6:11"
																			},
																			"nativeSrc": "2261:12:11",
																			"nodeType": "YulFunctionCall",
																			"src": "2261:12:11"
																		},
																		"nativeSrc": "2261:12:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "2261:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2225:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "2225:5:11"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2250:5:11",
																						"nodeType": "YulIdentifier",
																						"src": "2250:5:11"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "2232:17:11",
																					"nodeType": "YulIdentifier",
																					"src": "2232:17:11"
																				},
																				"nativeSrc": "2232:24:11",
																				"nodeType": "YulFunctionCall",
																				"src": "2232:24:11"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "2222:2:11",
																			"nodeType": "YulIdentifier",
																			"src": "2222:2:11"
																		},
																		"nativeSrc": "2222:35:11",
																		"nodeType": "YulFunctionCall",
																		"src": "2222:35:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2215:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "2215:6:11"
																},
																"nativeSrc": "2215:43:11",
																"nodeType": "YulFunctionCall",
																"src": "2215:43:11"
															},
															"nativeSrc": "2212:63:11",
															"nodeType": "YulIf",
															"src": "2212:63:11"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "2159:122:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2195:5:11",
														"nodeType": "YulTypedName",
														"src": "2195:5:11",
														"type": ""
													}
												],
												"src": "2159:122:11"
											},
											{
												"body": {
													"nativeSrc": "2339:87:11",
													"nodeType": "YulBlock",
													"src": "2339:87:11",
													"statements": [
														{
															"nativeSrc": "2349:29:11",
															"nodeType": "YulAssignment",
															"src": "2349:29:11",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2371:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "2371:6:11"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2358:12:11",
																	"nodeType": "YulIdentifier",
																	"src": "2358:12:11"
																},
																"nativeSrc": "2358:20:11",
																"nodeType": "YulFunctionCall",
																"src": "2358:20:11"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2349:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "2349:5:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2414:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "2414:5:11"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "2387:26:11",
																	"nodeType": "YulIdentifier",
																	"src": "2387:26:11"
																},
																"nativeSrc": "2387:33:11",
																"nodeType": "YulFunctionCall",
																"src": "2387:33:11"
															},
															"nativeSrc": "2387:33:11",
															"nodeType": "YulExpressionStatement",
															"src": "2387:33:11"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "2287:139:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2317:6:11",
														"nodeType": "YulTypedName",
														"src": "2317:6:11",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2325:3:11",
														"nodeType": "YulTypedName",
														"src": "2325:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "2333:5:11",
														"nodeType": "YulTypedName",
														"src": "2333:5:11",
														"type": ""
													}
												],
												"src": "2287:139:11"
											},
											{
												"body": {
													"nativeSrc": "2515:391:11",
													"nodeType": "YulBlock",
													"src": "2515:391:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "2561:83:11",
																"nodeType": "YulBlock",
																"src": "2561:83:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "2563:77:11",
																				"nodeType": "YulIdentifier",
																				"src": "2563:77:11"
																			},
																			"nativeSrc": "2563:79:11",
																			"nodeType": "YulFunctionCall",
																			"src": "2563:79:11"
																		},
																		"nativeSrc": "2563:79:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "2563:79:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2536:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "2536:7:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2545:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "2545:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2532:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "2532:3:11"
																		},
																		"nativeSrc": "2532:23:11",
																		"nodeType": "YulFunctionCall",
																		"src": "2532:23:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2557:2:11",
																		"nodeType": "YulLiteral",
																		"src": "2557:2:11",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2528:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "2528:3:11"
																},
																"nativeSrc": "2528:32:11",
																"nodeType": "YulFunctionCall",
																"src": "2528:32:11"
															},
															"nativeSrc": "2525:119:11",
															"nodeType": "YulIf",
															"src": "2525:119:11"
														},
														{
															"nativeSrc": "2654:117:11",
															"nodeType": "YulBlock",
															"src": "2654:117:11",
															"statements": [
																{
																	"nativeSrc": "2669:15:11",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2669:15:11",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2683:1:11",
																		"nodeType": "YulLiteral",
																		"src": "2683:1:11",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2673:6:11",
																			"nodeType": "YulTypedName",
																			"src": "2673:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2698:63:11",
																	"nodeType": "YulAssignment",
																	"src": "2698:63:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2733:9:11",
																						"nodeType": "YulIdentifier",
																						"src": "2733:9:11"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2744:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "2744:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2729:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "2729:3:11"
																				},
																				"nativeSrc": "2729:22:11",
																				"nodeType": "YulFunctionCall",
																				"src": "2729:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2753:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "2753:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "2708:20:11",
																			"nodeType": "YulIdentifier",
																			"src": "2708:20:11"
																		},
																		"nativeSrc": "2708:53:11",
																		"nodeType": "YulFunctionCall",
																		"src": "2708:53:11"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "2698:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "2698:6:11"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "2781:118:11",
															"nodeType": "YulBlock",
															"src": "2781:118:11",
															"statements": [
																{
																	"nativeSrc": "2796:16:11",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2796:16:11",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2810:2:11",
																		"nodeType": "YulLiteral",
																		"src": "2810:2:11",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2800:6:11",
																			"nodeType": "YulTypedName",
																			"src": "2800:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2826:63:11",
																	"nodeType": "YulAssignment",
																	"src": "2826:63:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2861:9:11",
																						"nodeType": "YulIdentifier",
																						"src": "2861:9:11"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2872:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "2872:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2857:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "2857:3:11"
																				},
																				"nativeSrc": "2857:22:11",
																				"nodeType": "YulFunctionCall",
																				"src": "2857:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2881:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "2881:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "2836:20:11",
																			"nodeType": "YulIdentifier",
																			"src": "2836:20:11"
																		},
																		"nativeSrc": "2836:53:11",
																		"nodeType": "YulFunctionCall",
																		"src": "2836:53:11"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "2826:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "2826:6:11"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "2432:474:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2477:9:11",
														"nodeType": "YulTypedName",
														"src": "2477:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2488:7:11",
														"nodeType": "YulTypedName",
														"src": "2488:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2500:6:11",
														"nodeType": "YulTypedName",
														"src": "2500:6:11",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2508:6:11",
														"nodeType": "YulTypedName",
														"src": "2508:6:11",
														"type": ""
													}
												],
												"src": "2432:474:11"
											},
											{
												"body": {
													"nativeSrc": "2954:48:11",
													"nodeType": "YulBlock",
													"src": "2954:48:11",
													"statements": [
														{
															"nativeSrc": "2964:32:11",
															"nodeType": "YulAssignment",
															"src": "2964:32:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2989:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "2989:5:11"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "2982:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "2982:6:11"
																		},
																		"nativeSrc": "2982:13:11",
																		"nodeType": "YulFunctionCall",
																		"src": "2982:13:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2975:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "2975:6:11"
																},
																"nativeSrc": "2975:21:11",
																"nodeType": "YulFunctionCall",
																"src": "2975:21:11"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2964:7:11",
																	"nodeType": "YulIdentifier",
																	"src": "2964:7:11"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "2912:90:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2936:5:11",
														"nodeType": "YulTypedName",
														"src": "2936:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2946:7:11",
														"nodeType": "YulTypedName",
														"src": "2946:7:11",
														"type": ""
													}
												],
												"src": "2912:90:11"
											},
											{
												"body": {
													"nativeSrc": "3067:50:11",
													"nodeType": "YulBlock",
													"src": "3067:50:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3084:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "3084:3:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3104:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "3104:5:11"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nativeSrc": "3089:14:11",
																			"nodeType": "YulIdentifier",
																			"src": "3089:14:11"
																		},
																		"nativeSrc": "3089:21:11",
																		"nodeType": "YulFunctionCall",
																		"src": "3089:21:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3077:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "3077:6:11"
																},
																"nativeSrc": "3077:34:11",
																"nodeType": "YulFunctionCall",
																"src": "3077:34:11"
															},
															"nativeSrc": "3077:34:11",
															"nodeType": "YulExpressionStatement",
															"src": "3077:34:11"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nativeSrc": "3008:109:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3055:5:11",
														"nodeType": "YulTypedName",
														"src": "3055:5:11",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3062:3:11",
														"nodeType": "YulTypedName",
														"src": "3062:3:11",
														"type": ""
													}
												],
												"src": "3008:109:11"
											},
											{
												"body": {
													"nativeSrc": "3215:118:11",
													"nodeType": "YulBlock",
													"src": "3215:118:11",
													"statements": [
														{
															"nativeSrc": "3225:26:11",
															"nodeType": "YulAssignment",
															"src": "3225:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3237:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "3237:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3248:2:11",
																		"nodeType": "YulLiteral",
																		"src": "3248:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3233:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "3233:3:11"
																},
																"nativeSrc": "3233:18:11",
																"nodeType": "YulFunctionCall",
																"src": "3233:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3225:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "3225:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3299:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "3299:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3312:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "3312:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3323:1:11",
																				"nodeType": "YulLiteral",
																				"src": "3323:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3308:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "3308:3:11"
																		},
																		"nativeSrc": "3308:17:11",
																		"nodeType": "YulFunctionCall",
																		"src": "3308:17:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "3261:37:11",
																	"nodeType": "YulIdentifier",
																	"src": "3261:37:11"
																},
																"nativeSrc": "3261:65:11",
																"nodeType": "YulFunctionCall",
																"src": "3261:65:11"
															},
															"nativeSrc": "3261:65:11",
															"nodeType": "YulExpressionStatement",
															"src": "3261:65:11"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "3123:210:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3187:9:11",
														"nodeType": "YulTypedName",
														"src": "3187:9:11",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3199:6:11",
														"nodeType": "YulTypedName",
														"src": "3199:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3210:4:11",
														"nodeType": "YulTypedName",
														"src": "3210:4:11",
														"type": ""
													}
												],
												"src": "3123:210:11"
											},
											{
												"body": {
													"nativeSrc": "3404:53:11",
													"nodeType": "YulBlock",
													"src": "3404:53:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3421:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "3421:3:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3444:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "3444:5:11"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "3426:17:11",
																			"nodeType": "YulIdentifier",
																			"src": "3426:17:11"
																		},
																		"nativeSrc": "3426:24:11",
																		"nodeType": "YulFunctionCall",
																		"src": "3426:24:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3414:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "3414:6:11"
																},
																"nativeSrc": "3414:37:11",
																"nodeType": "YulFunctionCall",
																"src": "3414:37:11"
															},
															"nativeSrc": "3414:37:11",
															"nodeType": "YulExpressionStatement",
															"src": "3414:37:11"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "3339:118:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3392:5:11",
														"nodeType": "YulTypedName",
														"src": "3392:5:11",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3399:3:11",
														"nodeType": "YulTypedName",
														"src": "3399:3:11",
														"type": ""
													}
												],
												"src": "3339:118:11"
											},
											{
												"body": {
													"nativeSrc": "3561:124:11",
													"nodeType": "YulBlock",
													"src": "3561:124:11",
													"statements": [
														{
															"nativeSrc": "3571:26:11",
															"nodeType": "YulAssignment",
															"src": "3571:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3583:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "3583:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3594:2:11",
																		"nodeType": "YulLiteral",
																		"src": "3594:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3579:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "3579:3:11"
																},
																"nativeSrc": "3579:18:11",
																"nodeType": "YulFunctionCall",
																"src": "3579:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3571:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "3571:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3651:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "3651:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3664:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "3664:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3675:1:11",
																				"nodeType": "YulLiteral",
																				"src": "3675:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3660:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "3660:3:11"
																		},
																		"nativeSrc": "3660:17:11",
																		"nodeType": "YulFunctionCall",
																		"src": "3660:17:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "3607:43:11",
																	"nodeType": "YulIdentifier",
																	"src": "3607:43:11"
																},
																"nativeSrc": "3607:71:11",
																"nodeType": "YulFunctionCall",
																"src": "3607:71:11"
															},
															"nativeSrc": "3607:71:11",
															"nodeType": "YulExpressionStatement",
															"src": "3607:71:11"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "3463:222:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3533:9:11",
														"nodeType": "YulTypedName",
														"src": "3533:9:11",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3545:6:11",
														"nodeType": "YulTypedName",
														"src": "3545:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3556:4:11",
														"nodeType": "YulTypedName",
														"src": "3556:4:11",
														"type": ""
													}
												],
												"src": "3463:222:11"
											},
											{
												"body": {
													"nativeSrc": "3791:519:11",
													"nodeType": "YulBlock",
													"src": "3791:519:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "3837:83:11",
																"nodeType": "YulBlock",
																"src": "3837:83:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3839:77:11",
																				"nodeType": "YulIdentifier",
																				"src": "3839:77:11"
																			},
																			"nativeSrc": "3839:79:11",
																			"nodeType": "YulFunctionCall",
																			"src": "3839:79:11"
																		},
																		"nativeSrc": "3839:79:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "3839:79:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3812:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "3812:7:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3821:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "3821:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3808:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "3808:3:11"
																		},
																		"nativeSrc": "3808:23:11",
																		"nodeType": "YulFunctionCall",
																		"src": "3808:23:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3833:2:11",
																		"nodeType": "YulLiteral",
																		"src": "3833:2:11",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3804:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "3804:3:11"
																},
																"nativeSrc": "3804:32:11",
																"nodeType": "YulFunctionCall",
																"src": "3804:32:11"
															},
															"nativeSrc": "3801:119:11",
															"nodeType": "YulIf",
															"src": "3801:119:11"
														},
														{
															"nativeSrc": "3930:117:11",
															"nodeType": "YulBlock",
															"src": "3930:117:11",
															"statements": [
																{
																	"nativeSrc": "3945:15:11",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3945:15:11",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3959:1:11",
																		"nodeType": "YulLiteral",
																		"src": "3959:1:11",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3949:6:11",
																			"nodeType": "YulTypedName",
																			"src": "3949:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3974:63:11",
																	"nodeType": "YulAssignment",
																	"src": "3974:63:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4009:9:11",
																						"nodeType": "YulIdentifier",
																						"src": "4009:9:11"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4020:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "4020:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4005:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "4005:3:11"
																				},
																				"nativeSrc": "4005:22:11",
																				"nodeType": "YulFunctionCall",
																				"src": "4005:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4029:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "4029:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "3984:20:11",
																			"nodeType": "YulIdentifier",
																			"src": "3984:20:11"
																		},
																		"nativeSrc": "3984:53:11",
																		"nodeType": "YulFunctionCall",
																		"src": "3984:53:11"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "3974:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "3974:6:11"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4057:118:11",
															"nodeType": "YulBlock",
															"src": "4057:118:11",
															"statements": [
																{
																	"nativeSrc": "4072:16:11",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4072:16:11",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4086:2:11",
																		"nodeType": "YulLiteral",
																		"src": "4086:2:11",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4076:6:11",
																			"nodeType": "YulTypedName",
																			"src": "4076:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4102:63:11",
																	"nodeType": "YulAssignment",
																	"src": "4102:63:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4137:9:11",
																						"nodeType": "YulIdentifier",
																						"src": "4137:9:11"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4148:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "4148:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4133:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "4133:3:11"
																				},
																				"nativeSrc": "4133:22:11",
																				"nodeType": "YulFunctionCall",
																				"src": "4133:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4157:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "4157:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "4112:20:11",
																			"nodeType": "YulIdentifier",
																			"src": "4112:20:11"
																		},
																		"nativeSrc": "4112:53:11",
																		"nodeType": "YulFunctionCall",
																		"src": "4112:53:11"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "4102:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "4102:6:11"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4185:118:11",
															"nodeType": "YulBlock",
															"src": "4185:118:11",
															"statements": [
																{
																	"nativeSrc": "4200:16:11",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4200:16:11",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4214:2:11",
																		"nodeType": "YulLiteral",
																		"src": "4214:2:11",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4204:6:11",
																			"nodeType": "YulTypedName",
																			"src": "4204:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4230:63:11",
																	"nodeType": "YulAssignment",
																	"src": "4230:63:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4265:9:11",
																						"nodeType": "YulIdentifier",
																						"src": "4265:9:11"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4276:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "4276:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4261:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "4261:3:11"
																				},
																				"nativeSrc": "4261:22:11",
																				"nodeType": "YulFunctionCall",
																				"src": "4261:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4285:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "4285:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "4240:20:11",
																			"nodeType": "YulIdentifier",
																			"src": "4240:20:11"
																		},
																		"nativeSrc": "4240:53:11",
																		"nodeType": "YulFunctionCall",
																		"src": "4240:53:11"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "4230:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "4230:6:11"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nativeSrc": "3691:619:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3745:9:11",
														"nodeType": "YulTypedName",
														"src": "3745:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3756:7:11",
														"nodeType": "YulTypedName",
														"src": "3756:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3768:6:11",
														"nodeType": "YulTypedName",
														"src": "3768:6:11",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3776:6:11",
														"nodeType": "YulTypedName",
														"src": "3776:6:11",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "3784:6:11",
														"nodeType": "YulTypedName",
														"src": "3784:6:11",
														"type": ""
													}
												],
												"src": "3691:619:11"
											},
											{
												"body": {
													"nativeSrc": "4359:43:11",
													"nodeType": "YulBlock",
													"src": "4359:43:11",
													"statements": [
														{
															"nativeSrc": "4369:27:11",
															"nodeType": "YulAssignment",
															"src": "4369:27:11",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4384:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "4384:5:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4391:4:11",
																		"nodeType": "YulLiteral",
																		"src": "4391:4:11",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "4380:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "4380:3:11"
																},
																"nativeSrc": "4380:16:11",
																"nodeType": "YulFunctionCall",
																"src": "4380:16:11"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "4369:7:11",
																	"nodeType": "YulIdentifier",
																	"src": "4369:7:11"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint8",
												"nativeSrc": "4316:86:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4341:5:11",
														"nodeType": "YulTypedName",
														"src": "4341:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "4351:7:11",
														"nodeType": "YulTypedName",
														"src": "4351:7:11",
														"type": ""
													}
												],
												"src": "4316:86:11"
											},
											{
												"body": {
													"nativeSrc": "4469:51:11",
													"nodeType": "YulBlock",
													"src": "4469:51:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4486:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "4486:3:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4507:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "4507:5:11"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint8",
																			"nativeSrc": "4491:15:11",
																			"nodeType": "YulIdentifier",
																			"src": "4491:15:11"
																		},
																		"nativeSrc": "4491:22:11",
																		"nodeType": "YulFunctionCall",
																		"src": "4491:22:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4479:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "4479:6:11"
																},
																"nativeSrc": "4479:35:11",
																"nodeType": "YulFunctionCall",
																"src": "4479:35:11"
															},
															"nativeSrc": "4479:35:11",
															"nodeType": "YulExpressionStatement",
															"src": "4479:35:11"
														}
													]
												},
												"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
												"nativeSrc": "4408:112:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4457:5:11",
														"nodeType": "YulTypedName",
														"src": "4457:5:11",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "4464:3:11",
														"nodeType": "YulTypedName",
														"src": "4464:3:11",
														"type": ""
													}
												],
												"src": "4408:112:11"
											},
											{
												"body": {
													"nativeSrc": "4620:120:11",
													"nodeType": "YulBlock",
													"src": "4620:120:11",
													"statements": [
														{
															"nativeSrc": "4630:26:11",
															"nodeType": "YulAssignment",
															"src": "4630:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4642:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "4642:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4653:2:11",
																		"nodeType": "YulLiteral",
																		"src": "4653:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4638:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "4638:3:11"
																},
																"nativeSrc": "4638:18:11",
																"nodeType": "YulFunctionCall",
																"src": "4638:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4630:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "4630:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "4706:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "4706:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4719:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "4719:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4730:1:11",
																				"nodeType": "YulLiteral",
																				"src": "4730:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4715:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "4715:3:11"
																		},
																		"nativeSrc": "4715:17:11",
																		"nodeType": "YulFunctionCall",
																		"src": "4715:17:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
																	"nativeSrc": "4666:39:11",
																	"nodeType": "YulIdentifier",
																	"src": "4666:39:11"
																},
																"nativeSrc": "4666:67:11",
																"nodeType": "YulFunctionCall",
																"src": "4666:67:11"
															},
															"nativeSrc": "4666:67:11",
															"nodeType": "YulExpressionStatement",
															"src": "4666:67:11"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nativeSrc": "4526:214:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4592:9:11",
														"nodeType": "YulTypedName",
														"src": "4592:9:11",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4604:6:11",
														"nodeType": "YulTypedName",
														"src": "4604:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4615:4:11",
														"nodeType": "YulTypedName",
														"src": "4615:4:11",
														"type": ""
													}
												],
												"src": "4526:214:11"
											},
											{
												"body": {
													"nativeSrc": "4812:263:11",
													"nodeType": "YulBlock",
													"src": "4812:263:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "4858:83:11",
																"nodeType": "YulBlock",
																"src": "4858:83:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "4860:77:11",
																				"nodeType": "YulIdentifier",
																				"src": "4860:77:11"
																			},
																			"nativeSrc": "4860:79:11",
																			"nodeType": "YulFunctionCall",
																			"src": "4860:79:11"
																		},
																		"nativeSrc": "4860:79:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "4860:79:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4833:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "4833:7:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4842:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "4842:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4829:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "4829:3:11"
																		},
																		"nativeSrc": "4829:23:11",
																		"nodeType": "YulFunctionCall",
																		"src": "4829:23:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4854:2:11",
																		"nodeType": "YulLiteral",
																		"src": "4854:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4825:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "4825:3:11"
																},
																"nativeSrc": "4825:32:11",
																"nodeType": "YulFunctionCall",
																"src": "4825:32:11"
															},
															"nativeSrc": "4822:119:11",
															"nodeType": "YulIf",
															"src": "4822:119:11"
														},
														{
															"nativeSrc": "4951:117:11",
															"nodeType": "YulBlock",
															"src": "4951:117:11",
															"statements": [
																{
																	"nativeSrc": "4966:15:11",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4966:15:11",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4980:1:11",
																		"nodeType": "YulLiteral",
																		"src": "4980:1:11",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4970:6:11",
																			"nodeType": "YulTypedName",
																			"src": "4970:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4995:63:11",
																	"nodeType": "YulAssignment",
																	"src": "4995:63:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5030:9:11",
																						"nodeType": "YulIdentifier",
																						"src": "5030:9:11"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5041:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "5041:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5026:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "5026:3:11"
																				},
																				"nativeSrc": "5026:22:11",
																				"nodeType": "YulFunctionCall",
																				"src": "5026:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5050:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "5050:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "5005:20:11",
																			"nodeType": "YulIdentifier",
																			"src": "5005:20:11"
																		},
																		"nativeSrc": "5005:53:11",
																		"nodeType": "YulFunctionCall",
																		"src": "5005:53:11"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "4995:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "4995:6:11"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "4746:329:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4782:9:11",
														"nodeType": "YulTypedName",
														"src": "4782:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4793:7:11",
														"nodeType": "YulTypedName",
														"src": "4793:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4805:6:11",
														"nodeType": "YulTypedName",
														"src": "4805:6:11",
														"type": ""
													}
												],
												"src": "4746:329:11"
											},
											{
												"body": {
													"nativeSrc": "5147:263:11",
													"nodeType": "YulBlock",
													"src": "5147:263:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "5193:83:11",
																"nodeType": "YulBlock",
																"src": "5193:83:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "5195:77:11",
																				"nodeType": "YulIdentifier",
																				"src": "5195:77:11"
																			},
																			"nativeSrc": "5195:79:11",
																			"nodeType": "YulFunctionCall",
																			"src": "5195:79:11"
																		},
																		"nativeSrc": "5195:79:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "5195:79:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5168:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "5168:7:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5177:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "5177:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5164:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "5164:3:11"
																		},
																		"nativeSrc": "5164:23:11",
																		"nodeType": "YulFunctionCall",
																		"src": "5164:23:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5189:2:11",
																		"nodeType": "YulLiteral",
																		"src": "5189:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "5160:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "5160:3:11"
																},
																"nativeSrc": "5160:32:11",
																"nodeType": "YulFunctionCall",
																"src": "5160:32:11"
															},
															"nativeSrc": "5157:119:11",
															"nodeType": "YulIf",
															"src": "5157:119:11"
														},
														{
															"nativeSrc": "5286:117:11",
															"nodeType": "YulBlock",
															"src": "5286:117:11",
															"statements": [
																{
																	"nativeSrc": "5301:15:11",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5301:15:11",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5315:1:11",
																		"nodeType": "YulLiteral",
																		"src": "5315:1:11",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5305:6:11",
																			"nodeType": "YulTypedName",
																			"src": "5305:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5330:63:11",
																	"nodeType": "YulAssignment",
																	"src": "5330:63:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5365:9:11",
																						"nodeType": "YulIdentifier",
																						"src": "5365:9:11"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5376:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "5376:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5361:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "5361:3:11"
																				},
																				"nativeSrc": "5361:22:11",
																				"nodeType": "YulFunctionCall",
																				"src": "5361:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5385:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "5385:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "5340:20:11",
																			"nodeType": "YulIdentifier",
																			"src": "5340:20:11"
																		},
																		"nativeSrc": "5340:53:11",
																		"nodeType": "YulFunctionCall",
																		"src": "5340:53:11"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "5330:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "5330:6:11"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "5081:329:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5117:9:11",
														"nodeType": "YulTypedName",
														"src": "5117:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "5128:7:11",
														"nodeType": "YulTypedName",
														"src": "5128:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "5140:6:11",
														"nodeType": "YulTypedName",
														"src": "5140:6:11",
														"type": ""
													}
												],
												"src": "5081:329:11"
											},
											{
												"body": {
													"nativeSrc": "5499:391:11",
													"nodeType": "YulBlock",
													"src": "5499:391:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "5545:83:11",
																"nodeType": "YulBlock",
																"src": "5545:83:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "5547:77:11",
																				"nodeType": "YulIdentifier",
																				"src": "5547:77:11"
																			},
																			"nativeSrc": "5547:79:11",
																			"nodeType": "YulFunctionCall",
																			"src": "5547:79:11"
																		},
																		"nativeSrc": "5547:79:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "5547:79:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5520:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "5520:7:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5529:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "5529:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5516:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "5516:3:11"
																		},
																		"nativeSrc": "5516:23:11",
																		"nodeType": "YulFunctionCall",
																		"src": "5516:23:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5541:2:11",
																		"nodeType": "YulLiteral",
																		"src": "5541:2:11",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "5512:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "5512:3:11"
																},
																"nativeSrc": "5512:32:11",
																"nodeType": "YulFunctionCall",
																"src": "5512:32:11"
															},
															"nativeSrc": "5509:119:11",
															"nodeType": "YulIf",
															"src": "5509:119:11"
														},
														{
															"nativeSrc": "5638:117:11",
															"nodeType": "YulBlock",
															"src": "5638:117:11",
															"statements": [
																{
																	"nativeSrc": "5653:15:11",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5653:15:11",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5667:1:11",
																		"nodeType": "YulLiteral",
																		"src": "5667:1:11",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5657:6:11",
																			"nodeType": "YulTypedName",
																			"src": "5657:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5682:63:11",
																	"nodeType": "YulAssignment",
																	"src": "5682:63:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5717:9:11",
																						"nodeType": "YulIdentifier",
																						"src": "5717:9:11"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5728:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "5728:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5713:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "5713:3:11"
																				},
																				"nativeSrc": "5713:22:11",
																				"nodeType": "YulFunctionCall",
																				"src": "5713:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5737:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "5737:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "5692:20:11",
																			"nodeType": "YulIdentifier",
																			"src": "5692:20:11"
																		},
																		"nativeSrc": "5692:53:11",
																		"nodeType": "YulFunctionCall",
																		"src": "5692:53:11"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "5682:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "5682:6:11"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "5765:118:11",
															"nodeType": "YulBlock",
															"src": "5765:118:11",
															"statements": [
																{
																	"nativeSrc": "5780:16:11",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5780:16:11",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5794:2:11",
																		"nodeType": "YulLiteral",
																		"src": "5794:2:11",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5784:6:11",
																			"nodeType": "YulTypedName",
																			"src": "5784:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5810:63:11",
																	"nodeType": "YulAssignment",
																	"src": "5810:63:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5845:9:11",
																						"nodeType": "YulIdentifier",
																						"src": "5845:9:11"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5856:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "5856:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5841:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "5841:3:11"
																				},
																				"nativeSrc": "5841:22:11",
																				"nodeType": "YulFunctionCall",
																				"src": "5841:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5865:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "5865:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "5820:20:11",
																			"nodeType": "YulIdentifier",
																			"src": "5820:20:11"
																		},
																		"nativeSrc": "5820:53:11",
																		"nodeType": "YulFunctionCall",
																		"src": "5820:53:11"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "5810:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "5810:6:11"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nativeSrc": "5416:474:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5461:9:11",
														"nodeType": "YulTypedName",
														"src": "5461:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "5472:7:11",
														"nodeType": "YulTypedName",
														"src": "5472:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "5484:6:11",
														"nodeType": "YulTypedName",
														"src": "5484:6:11",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "5492:6:11",
														"nodeType": "YulTypedName",
														"src": "5492:6:11",
														"type": ""
													}
												],
												"src": "5416:474:11"
											},
											{
												"body": {
													"nativeSrc": "5924:152:11",
													"nodeType": "YulBlock",
													"src": "5924:152:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5941:1:11",
																		"nodeType": "YulLiteral",
																		"src": "5941:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5944:77:11",
																		"nodeType": "YulLiteral",
																		"src": "5944:77:11",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5934:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "5934:6:11"
																},
																"nativeSrc": "5934:88:11",
																"nodeType": "YulFunctionCall",
																"src": "5934:88:11"
															},
															"nativeSrc": "5934:88:11",
															"nodeType": "YulExpressionStatement",
															"src": "5934:88:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6038:1:11",
																		"nodeType": "YulLiteral",
																		"src": "6038:1:11",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6041:4:11",
																		"nodeType": "YulLiteral",
																		"src": "6041:4:11",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6031:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "6031:6:11"
																},
																"nativeSrc": "6031:15:11",
																"nodeType": "YulFunctionCall",
																"src": "6031:15:11"
															},
															"nativeSrc": "6031:15:11",
															"nodeType": "YulExpressionStatement",
															"src": "6031:15:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6062:1:11",
																		"nodeType": "YulLiteral",
																		"src": "6062:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6065:4:11",
																		"nodeType": "YulLiteral",
																		"src": "6065:4:11",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "6055:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "6055:6:11"
																},
																"nativeSrc": "6055:15:11",
																"nodeType": "YulFunctionCall",
																"src": "6055:15:11"
															},
															"nativeSrc": "6055:15:11",
															"nodeType": "YulExpressionStatement",
															"src": "6055:15:11"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "5896:180:11",
												"nodeType": "YulFunctionDefinition",
												"src": "5896:180:11"
											},
											{
												"body": {
													"nativeSrc": "6133:269:11",
													"nodeType": "YulBlock",
													"src": "6133:269:11",
													"statements": [
														{
															"nativeSrc": "6143:22:11",
															"nodeType": "YulAssignment",
															"src": "6143:22:11",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "6157:4:11",
																		"nodeType": "YulIdentifier",
																		"src": "6157:4:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6163:1:11",
																		"nodeType": "YulLiteral",
																		"src": "6163:1:11",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "6153:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "6153:3:11"
																},
																"nativeSrc": "6153:12:11",
																"nodeType": "YulFunctionCall",
																"src": "6153:12:11"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "6143:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "6143:6:11"
																}
															]
														},
														{
															"nativeSrc": "6174:38:11",
															"nodeType": "YulVariableDeclaration",
															"src": "6174:38:11",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "6204:4:11",
																		"nodeType": "YulIdentifier",
																		"src": "6204:4:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6210:1:11",
																		"nodeType": "YulLiteral",
																		"src": "6210:1:11",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "6200:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "6200:3:11"
																},
																"nativeSrc": "6200:12:11",
																"nodeType": "YulFunctionCall",
																"src": "6200:12:11"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "6178:18:11",
																	"nodeType": "YulTypedName",
																	"src": "6178:18:11",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "6251:51:11",
																"nodeType": "YulBlock",
																"src": "6251:51:11",
																"statements": [
																	{
																		"nativeSrc": "6265:27:11",
																		"nodeType": "YulAssignment",
																		"src": "6265:27:11",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "6279:6:11",
																					"nodeType": "YulIdentifier",
																					"src": "6279:6:11"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6287:4:11",
																					"nodeType": "YulLiteral",
																					"src": "6287:4:11",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "6275:3:11",
																				"nodeType": "YulIdentifier",
																				"src": "6275:3:11"
																			},
																			"nativeSrc": "6275:17:11",
																			"nodeType": "YulFunctionCall",
																			"src": "6275:17:11"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "6265:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "6265:6:11"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "6231:18:11",
																		"nodeType": "YulIdentifier",
																		"src": "6231:18:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "6224:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "6224:6:11"
																},
																"nativeSrc": "6224:26:11",
																"nodeType": "YulFunctionCall",
																"src": "6224:26:11"
															},
															"nativeSrc": "6221:81:11",
															"nodeType": "YulIf",
															"src": "6221:81:11"
														},
														{
															"body": {
																"nativeSrc": "6354:42:11",
																"nodeType": "YulBlock",
																"src": "6354:42:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "6368:16:11",
																				"nodeType": "YulIdentifier",
																				"src": "6368:16:11"
																			},
																			"nativeSrc": "6368:18:11",
																			"nodeType": "YulFunctionCall",
																			"src": "6368:18:11"
																		},
																		"nativeSrc": "6368:18:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "6368:18:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "6318:18:11",
																		"nodeType": "YulIdentifier",
																		"src": "6318:18:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "6341:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "6341:6:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6349:2:11",
																				"nodeType": "YulLiteral",
																				"src": "6349:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "6338:2:11",
																			"nodeType": "YulIdentifier",
																			"src": "6338:2:11"
																		},
																		"nativeSrc": "6338:14:11",
																		"nodeType": "YulFunctionCall",
																		"src": "6338:14:11"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "6315:2:11",
																	"nodeType": "YulIdentifier",
																	"src": "6315:2:11"
																},
																"nativeSrc": "6315:38:11",
																"nodeType": "YulFunctionCall",
																"src": "6315:38:11"
															},
															"nativeSrc": "6312:84:11",
															"nodeType": "YulIf",
															"src": "6312:84:11"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "6082:320:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "6117:4:11",
														"nodeType": "YulTypedName",
														"src": "6117:4:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "6126:6:11",
														"nodeType": "YulTypedName",
														"src": "6126:6:11",
														"type": ""
													}
												],
												"src": "6082:320:11"
											},
											{
												"body": {
													"nativeSrc": "6473:53:11",
													"nodeType": "YulBlock",
													"src": "6473:53:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6490:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "6490:3:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "6513:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "6513:5:11"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "6495:17:11",
																			"nodeType": "YulIdentifier",
																			"src": "6495:17:11"
																		},
																		"nativeSrc": "6495:24:11",
																		"nodeType": "YulFunctionCall",
																		"src": "6495:24:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6483:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "6483:6:11"
																},
																"nativeSrc": "6483:37:11",
																"nodeType": "YulFunctionCall",
																"src": "6483:37:11"
															},
															"nativeSrc": "6483:37:11",
															"nodeType": "YulExpressionStatement",
															"src": "6483:37:11"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "6408:118:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6461:5:11",
														"nodeType": "YulTypedName",
														"src": "6461:5:11",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "6468:3:11",
														"nodeType": "YulTypedName",
														"src": "6468:3:11",
														"type": ""
													}
												],
												"src": "6408:118:11"
											},
											{
												"body": {
													"nativeSrc": "6686:288:11",
													"nodeType": "YulBlock",
													"src": "6686:288:11",
													"statements": [
														{
															"nativeSrc": "6696:26:11",
															"nodeType": "YulAssignment",
															"src": "6696:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6708:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "6708:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6719:2:11",
																		"nodeType": "YulLiteral",
																		"src": "6719:2:11",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6704:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "6704:3:11"
																},
																"nativeSrc": "6704:18:11",
																"nodeType": "YulFunctionCall",
																"src": "6704:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6696:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "6696:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "6776:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "6776:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6789:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "6789:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6800:1:11",
																				"nodeType": "YulLiteral",
																				"src": "6800:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6785:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "6785:3:11"
																		},
																		"nativeSrc": "6785:17:11",
																		"nodeType": "YulFunctionCall",
																		"src": "6785:17:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "6732:43:11",
																	"nodeType": "YulIdentifier",
																	"src": "6732:43:11"
																},
																"nativeSrc": "6732:71:11",
																"nodeType": "YulFunctionCall",
																"src": "6732:71:11"
															},
															"nativeSrc": "6732:71:11",
															"nodeType": "YulExpressionStatement",
															"src": "6732:71:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "6857:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "6857:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6870:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "6870:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6881:2:11",
																				"nodeType": "YulLiteral",
																				"src": "6881:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6866:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "6866:3:11"
																		},
																		"nativeSrc": "6866:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "6866:18:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "6813:43:11",
																	"nodeType": "YulIdentifier",
																	"src": "6813:43:11"
																},
																"nativeSrc": "6813:72:11",
																"nodeType": "YulFunctionCall",
																"src": "6813:72:11"
															},
															"nativeSrc": "6813:72:11",
															"nodeType": "YulExpressionStatement",
															"src": "6813:72:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "6939:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "6939:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6952:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "6952:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6963:2:11",
																				"nodeType": "YulLiteral",
																				"src": "6963:2:11",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6948:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "6948:3:11"
																		},
																		"nativeSrc": "6948:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "6948:18:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "6895:43:11",
																	"nodeType": "YulIdentifier",
																	"src": "6895:43:11"
																},
																"nativeSrc": "6895:72:11",
																"nodeType": "YulFunctionCall",
																"src": "6895:72:11"
															},
															"nativeSrc": "6895:72:11",
															"nodeType": "YulExpressionStatement",
															"src": "6895:72:11"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "6532:442:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6642:9:11",
														"nodeType": "YulTypedName",
														"src": "6642:9:11",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "6654:6:11",
														"nodeType": "YulTypedName",
														"src": "6654:6:11",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "6662:6:11",
														"nodeType": "YulTypedName",
														"src": "6662:6:11",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "6670:6:11",
														"nodeType": "YulTypedName",
														"src": "6670:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6681:4:11",
														"nodeType": "YulTypedName",
														"src": "6681:4:11",
														"type": ""
													}
												],
												"src": "6532:442:11"
											},
											{
												"body": {
													"nativeSrc": "7078:124:11",
													"nodeType": "YulBlock",
													"src": "7078:124:11",
													"statements": [
														{
															"nativeSrc": "7088:26:11",
															"nodeType": "YulAssignment",
															"src": "7088:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7100:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "7100:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7111:2:11",
																		"nodeType": "YulLiteral",
																		"src": "7111:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7096:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "7096:3:11"
																},
																"nativeSrc": "7096:18:11",
																"nodeType": "YulFunctionCall",
																"src": "7096:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7088:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "7088:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "7168:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "7168:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7181:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "7181:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7192:1:11",
																				"nodeType": "YulLiteral",
																				"src": "7192:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7177:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "7177:3:11"
																		},
																		"nativeSrc": "7177:17:11",
																		"nodeType": "YulFunctionCall",
																		"src": "7177:17:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "7124:43:11",
																	"nodeType": "YulIdentifier",
																	"src": "7124:43:11"
																},
																"nativeSrc": "7124:71:11",
																"nodeType": "YulFunctionCall",
																"src": "7124:71:11"
															},
															"nativeSrc": "7124:71:11",
															"nodeType": "YulExpressionStatement",
															"src": "7124:71:11"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "6980:222:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7050:9:11",
														"nodeType": "YulTypedName",
														"src": "7050:9:11",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "7062:6:11",
														"nodeType": "YulTypedName",
														"src": "7062:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7073:4:11",
														"nodeType": "YulTypedName",
														"src": "7073:4:11",
														"type": ""
													}
												],
												"src": "6980:222:11"
											},
											{
												"body": {
													"nativeSrc": "7236:152:11",
													"nodeType": "YulBlock",
													"src": "7236:152:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7253:1:11",
																		"nodeType": "YulLiteral",
																		"src": "7253:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7256:77:11",
																		"nodeType": "YulLiteral",
																		"src": "7256:77:11",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7246:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "7246:6:11"
																},
																"nativeSrc": "7246:88:11",
																"nodeType": "YulFunctionCall",
																"src": "7246:88:11"
															},
															"nativeSrc": "7246:88:11",
															"nodeType": "YulExpressionStatement",
															"src": "7246:88:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7350:1:11",
																		"nodeType": "YulLiteral",
																		"src": "7350:1:11",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7353:4:11",
																		"nodeType": "YulLiteral",
																		"src": "7353:4:11",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7343:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "7343:6:11"
																},
																"nativeSrc": "7343:15:11",
																"nodeType": "YulFunctionCall",
																"src": "7343:15:11"
															},
															"nativeSrc": "7343:15:11",
															"nodeType": "YulExpressionStatement",
															"src": "7343:15:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7374:1:11",
																		"nodeType": "YulLiteral",
																		"src": "7374:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7377:4:11",
																		"nodeType": "YulLiteral",
																		"src": "7377:4:11",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "7367:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "7367:6:11"
																},
																"nativeSrc": "7367:15:11",
																"nodeType": "YulFunctionCall",
																"src": "7367:15:11"
															},
															"nativeSrc": "7367:15:11",
															"nodeType": "YulExpressionStatement",
															"src": "7367:15:11"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "7208:180:11",
												"nodeType": "YulFunctionDefinition",
												"src": "7208:180:11"
											},
											{
												"body": {
													"nativeSrc": "7438:147:11",
													"nodeType": "YulBlock",
													"src": "7438:147:11",
													"statements": [
														{
															"nativeSrc": "7448:25:11",
															"nodeType": "YulAssignment",
															"src": "7448:25:11",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "7471:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "7471:1:11"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "7453:17:11",
																	"nodeType": "YulIdentifier",
																	"src": "7453:17:11"
																},
																"nativeSrc": "7453:20:11",
																"nodeType": "YulFunctionCall",
																"src": "7453:20:11"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "7448:1:11",
																	"nodeType": "YulIdentifier",
																	"src": "7448:1:11"
																}
															]
														},
														{
															"nativeSrc": "7482:25:11",
															"nodeType": "YulAssignment",
															"src": "7482:25:11",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "7505:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "7505:1:11"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "7487:17:11",
																	"nodeType": "YulIdentifier",
																	"src": "7487:17:11"
																},
																"nativeSrc": "7487:20:11",
																"nodeType": "YulFunctionCall",
																"src": "7487:20:11"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "7482:1:11",
																	"nodeType": "YulIdentifier",
																	"src": "7482:1:11"
																}
															]
														},
														{
															"nativeSrc": "7516:16:11",
															"nodeType": "YulAssignment",
															"src": "7516:16:11",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "7527:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "7527:1:11"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "7530:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "7530:1:11"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7523:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "7523:3:11"
																},
																"nativeSrc": "7523:9:11",
																"nodeType": "YulFunctionCall",
																"src": "7523:9:11"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "7516:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "7516:3:11"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "7556:22:11",
																"nodeType": "YulBlock",
																"src": "7556:22:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "7558:16:11",
																				"nodeType": "YulIdentifier",
																				"src": "7558:16:11"
																			},
																			"nativeSrc": "7558:18:11",
																			"nodeType": "YulFunctionCall",
																			"src": "7558:18:11"
																		},
																		"nativeSrc": "7558:18:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "7558:18:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "7548:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "7548:1:11"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "7551:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "7551:3:11"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "7545:2:11",
																	"nodeType": "YulIdentifier",
																	"src": "7545:2:11"
																},
																"nativeSrc": "7545:10:11",
																"nodeType": "YulFunctionCall",
																"src": "7545:10:11"
															},
															"nativeSrc": "7542:36:11",
															"nodeType": "YulIf",
															"src": "7542:36:11"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "7394:191:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "7425:1:11",
														"nodeType": "YulTypedName",
														"src": "7425:1:11",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "7428:1:11",
														"nodeType": "YulTypedName",
														"src": "7428:1:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "7434:3:11",
														"nodeType": "YulTypedName",
														"src": "7434:3:11",
														"type": ""
													}
												],
												"src": "7394:191:11"
											}
										]
									},
									"contents": "{\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n\n        mcopy(dst, src, length)\n        mstore(add(dst, length), 0)\n\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n}\n",
									"id": 11,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b506004361061009c575f3560e01c806370a082311161006457806370a082311461015a57806395d89b411461018a578063a0712d68146101a8578063a9059cbb146101c4578063dd62ed3e146101f45761009c565b806306fdde03146100a0578063095ea7b3146100be57806318160ddd146100ee57806323b872dd1461010c578063313ce5671461013c575b5f80fd5b6100a8610224565b6040516100b59190610b0d565b60405180910390f35b6100d860048036038101906100d39190610bbe565b6102b4565b6040516100e59190610c16565b60405180910390f35b6100f66102d6565b6040516101039190610c3e565b60405180910390f35b61012660048036038101906101219190610c57565b6102df565b6040516101339190610c16565b60405180910390f35b61014461030d565b6040516101519190610cc2565b60405180910390f35b610174600480360381019061016f9190610cdb565b610315565b6040516101819190610c3e565b60405180910390f35b61019261035a565b60405161019f9190610b0d565b60405180910390f35b6101c260048036038101906101bd9190610d06565b6103ea565b005b6101de60048036038101906101d99190610bbe565b6103f7565b6040516101eb9190610c16565b60405180910390f35b61020e60048036038101906102099190610d31565b610419565b60405161021b9190610c3e565b60405180910390f35b60606003805461023390610d9c565b80601f016020809104026020016040519081016040528092919081815260200182805461025f90610d9c565b80156102aa5780601f10610281576101008083540402835291602001916102aa565b820191905f5260205f20905b81548152906001019060200180831161028d57829003601f168201915b5050505050905090565b5f806102be61049b565b90506102cb8185856104a2565b600191505092915050565b5f600254905090565b5f806102e961049b565b90506102f68582856104b4565b610301858585610546565b60019150509392505050565b5f6012905090565b5f805f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b60606004805461036990610d9c565b80601f016020809104026020016040519081016040528092919081815260200182805461039590610d9c565b80156103e05780601f106103b7576101008083540402835291602001916103e0565b820191905f5260205f20905b8154815290600101906020018083116103c357829003601f168201915b5050505050905090565b6103f43382610636565b50565b5f8061040161049b565b905061040e818585610546565b600191505092915050565b5f60015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905092915050565b5f33905090565b6104af83838360016106b5565b505050565b5f6104bf8484610419565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146105405781811015610531578281836040517ffb8f41b200000000000000000000000000000000000000000000000000000000815260040161052893929190610ddb565b60405180910390fd5b61053f84848484035f6106b5565b5b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036105b6575f6040517f96c6fd1e0000000000000000000000000000000000000000000000000000000081526004016105ad9190610e10565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610626575f6040517fec442f0500000000000000000000000000000000000000000000000000000000815260040161061d9190610e10565b60405180910390fd5b610631838383610884565b505050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036106a6575f6040517fec442f0500000000000000000000000000000000000000000000000000000000815260040161069d9190610e10565b60405180910390fd5b6106b15f8383610884565b5050565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603610725575f6040517fe602df0500000000000000000000000000000000000000000000000000000000815260040161071c9190610e10565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610795575f6040517f94280d6200000000000000000000000000000000000000000000000000000000815260040161078c9190610e10565b60405180910390fd5b8160015f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550801561087e578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040516108759190610c3e565b60405180910390a35b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036108d4578060025f8282546108c89190610e56565b925050819055506109a2565b5f805f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205490508181101561095d578381836040517fe450d38c00000000000000000000000000000000000000000000000000000000815260040161095493929190610ddb565b60405180910390fd5b8181035f808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036109e9578060025f8282540392505081905550610a33565b805f808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051610a909190610c3e565b60405180910390a3505050565b5f81519050919050565b5f82825260208201905092915050565b8281835e5f83830152505050565b5f601f19601f8301169050919050565b5f610adf82610a9d565b610ae98185610aa7565b9350610af9818560208601610ab7565b610b0281610ac5565b840191505092915050565b5f6020820190508181035f830152610b258184610ad5565b905092915050565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f610b5a82610b31565b9050919050565b610b6a81610b50565b8114610b74575f80fd5b50565b5f81359050610b8581610b61565b92915050565b5f819050919050565b610b9d81610b8b565b8114610ba7575f80fd5b50565b5f81359050610bb881610b94565b92915050565b5f8060408385031215610bd457610bd3610b2d565b5b5f610be185828601610b77565b9250506020610bf285828601610baa565b9150509250929050565b5f8115159050919050565b610c1081610bfc565b82525050565b5f602082019050610c295f830184610c07565b92915050565b610c3881610b8b565b82525050565b5f602082019050610c515f830184610c2f565b92915050565b5f805f60608486031215610c6e57610c6d610b2d565b5b5f610c7b86828701610b77565b9350506020610c8c86828701610b77565b9250506040610c9d86828701610baa565b9150509250925092565b5f60ff82169050919050565b610cbc81610ca7565b82525050565b5f602082019050610cd55f830184610cb3565b92915050565b5f60208284031215610cf057610cef610b2d565b5b5f610cfd84828501610b77565b91505092915050565b5f60208284031215610d1b57610d1a610b2d565b5b5f610d2884828501610baa565b91505092915050565b5f8060408385031215610d4757610d46610b2d565b5b5f610d5485828601610b77565b9250506020610d6585828601610b77565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f6002820490506001821680610db357607f821691505b602082108103610dc657610dc5610d6f565b5b50919050565b610dd581610b50565b82525050565b5f606082019050610dee5f830186610dcc565b610dfb6020830185610c2f565b610e086040830184610c2f565b949350505050565b5f602082019050610e235f830184610dcc565b92915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f610e6082610b8b565b9150610e6b83610b8b565b9250828201905080821115610e8357610e82610e29565b5b9291505056fea264697066735822122028b976fd646428bda1fda284fd6b383f35620a345acbff012c2a45f875bc980f64736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x9C JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0x64 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x15A JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x18A JUMPI DUP1 PUSH4 0xA0712D68 EQ PUSH2 0x1A8 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x1C4 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x1F4 JUMPI PUSH2 0x9C JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xA0 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xBE JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xEE JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x10C JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x13C JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xA8 PUSH2 0x224 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xB5 SWAP2 SWAP1 PUSH2 0xB0D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xD8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xD3 SWAP2 SWAP1 PUSH2 0xBBE JUMP JUMPDEST PUSH2 0x2B4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE5 SWAP2 SWAP1 PUSH2 0xC16 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xF6 PUSH2 0x2D6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x103 SWAP2 SWAP1 PUSH2 0xC3E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x126 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x121 SWAP2 SWAP1 PUSH2 0xC57 JUMP JUMPDEST PUSH2 0x2DF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x133 SWAP2 SWAP1 PUSH2 0xC16 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x144 PUSH2 0x30D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x151 SWAP2 SWAP1 PUSH2 0xCC2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x174 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x16F SWAP2 SWAP1 PUSH2 0xCDB JUMP JUMPDEST PUSH2 0x315 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x181 SWAP2 SWAP1 PUSH2 0xC3E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x192 PUSH2 0x35A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x19F SWAP2 SWAP1 PUSH2 0xB0D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1C2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1BD SWAP2 SWAP1 PUSH2 0xD06 JUMP JUMPDEST PUSH2 0x3EA JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1DE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1D9 SWAP2 SWAP1 PUSH2 0xBBE JUMP JUMPDEST PUSH2 0x3F7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1EB SWAP2 SWAP1 PUSH2 0xC16 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x20E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x209 SWAP2 SWAP1 PUSH2 0xD31 JUMP JUMPDEST PUSH2 0x419 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x21B SWAP2 SWAP1 PUSH2 0xC3E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x233 SWAP1 PUSH2 0xD9C JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x25F SWAP1 PUSH2 0xD9C JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2AA JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x281 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2AA JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x28D JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x2BE PUSH2 0x49B JUMP JUMPDEST SWAP1 POP PUSH2 0x2CB DUP2 DUP6 DUP6 PUSH2 0x4A2 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x2E9 PUSH2 0x49B JUMP JUMPDEST SWAP1 POP PUSH2 0x2F6 DUP6 DUP3 DUP6 PUSH2 0x4B4 JUMP JUMPDEST PUSH2 0x301 DUP6 DUP6 DUP6 PUSH2 0x546 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x369 SWAP1 PUSH2 0xD9C JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x395 SWAP1 PUSH2 0xD9C JUMP JUMPDEST DUP1 ISZERO PUSH2 0x3E0 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x3B7 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x3E0 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x3C3 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x3F4 CALLER DUP3 PUSH2 0x636 JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x401 PUSH2 0x49B JUMP JUMPDEST SWAP1 POP PUSH2 0x40E DUP2 DUP6 DUP6 PUSH2 0x546 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x4AF DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x6B5 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x4BF DUP5 DUP5 PUSH2 0x419 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0x540 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x531 JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x528 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xDDB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x53F DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0x6B5 JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x5B6 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5AD SWAP2 SWAP1 PUSH2 0xE10 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x626 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x61D SWAP2 SWAP1 PUSH2 0xE10 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x631 DUP4 DUP4 DUP4 PUSH2 0x884 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x6A6 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x69D SWAP2 SWAP1 PUSH2 0xE10 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x6B1 PUSH0 DUP4 DUP4 PUSH2 0x884 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x725 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x71C SWAP2 SWAP1 PUSH2 0xE10 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x795 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x78C SWAP2 SWAP1 PUSH2 0xE10 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0x87E JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x875 SWAP2 SWAP1 PUSH2 0xC3E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x8D4 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x8C8 SWAP2 SWAP1 PUSH2 0xE56 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x9A2 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x95D JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x954 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xDDB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x9E9 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0xA33 JUMP JUMPDEST DUP1 PUSH0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0xA90 SWAP2 SWAP1 PUSH2 0xC3E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xADF DUP3 PUSH2 0xA9D JUMP JUMPDEST PUSH2 0xAE9 DUP2 DUP6 PUSH2 0xAA7 JUMP JUMPDEST SWAP4 POP PUSH2 0xAF9 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xAB7 JUMP JUMPDEST PUSH2 0xB02 DUP2 PUSH2 0xAC5 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xB25 DUP2 DUP5 PUSH2 0xAD5 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xB5A DUP3 PUSH2 0xB31 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB6A DUP2 PUSH2 0xB50 JUMP JUMPDEST DUP2 EQ PUSH2 0xB74 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xB85 DUP2 PUSH2 0xB61 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB9D DUP2 PUSH2 0xB8B JUMP JUMPDEST DUP2 EQ PUSH2 0xBA7 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xBB8 DUP2 PUSH2 0xB94 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xBD4 JUMPI PUSH2 0xBD3 PUSH2 0xB2D JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xBE1 DUP6 DUP3 DUP7 ADD PUSH2 0xB77 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xBF2 DUP6 DUP3 DUP7 ADD PUSH2 0xBAA JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xC10 DUP2 PUSH2 0xBFC JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xC29 PUSH0 DUP4 ADD DUP5 PUSH2 0xC07 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xC38 DUP2 PUSH2 0xB8B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xC51 PUSH0 DUP4 ADD DUP5 PUSH2 0xC2F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xC6E JUMPI PUSH2 0xC6D PUSH2 0xB2D JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xC7B DUP7 DUP3 DUP8 ADD PUSH2 0xB77 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0xC8C DUP7 DUP3 DUP8 ADD PUSH2 0xB77 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0xC9D DUP7 DUP3 DUP8 ADD PUSH2 0xBAA JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xCBC DUP2 PUSH2 0xCA7 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xCD5 PUSH0 DUP4 ADD DUP5 PUSH2 0xCB3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xCF0 JUMPI PUSH2 0xCEF PUSH2 0xB2D JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xCFD DUP5 DUP3 DUP6 ADD PUSH2 0xB77 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD1B JUMPI PUSH2 0xD1A PUSH2 0xB2D JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xD28 DUP5 DUP3 DUP6 ADD PUSH2 0xBAA JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xD47 JUMPI PUSH2 0xD46 PUSH2 0xB2D JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xD54 DUP6 DUP3 DUP7 ADD PUSH2 0xB77 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xD65 DUP6 DUP3 DUP7 ADD PUSH2 0xB77 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0xDB3 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0xDC6 JUMPI PUSH2 0xDC5 PUSH2 0xD6F JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xDD5 DUP2 PUSH2 0xB50 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0xDEE PUSH0 DUP4 ADD DUP7 PUSH2 0xDCC JUMP JUMPDEST PUSH2 0xDFB PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0xC2F JUMP JUMPDEST PUSH2 0xE08 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xC2F JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xE23 PUSH0 DUP4 ADD DUP5 PUSH2 0xDCC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0xE60 DUP3 PUSH2 0xB8B JUMP JUMPDEST SWAP2 POP PUSH2 0xE6B DUP4 PUSH2 0xB8B JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0xE83 JUMPI PUSH2 0xE82 PUSH2 0xE29 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x28 0xB9 PUSH23 0xFD646428BDA1FDA284FD6B383F35620A345ACBFF012C2A GASLIMIT 0xF8 PUSH22 0xBC980F64736F6C634300081A00330000000000000000 ",
							"sourceMap": "118:163:9:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1779:89:4;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3998:186;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2849:97;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4776:244;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2707:82;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3004:116;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1981:93;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;202:76:9;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3315:178:4;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3551:140;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1779:89;1824:13;1856:5;1849:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1779:89;:::o;3998:186::-;4071:4;4087:13;4103:12;:10;:12::i;:::-;4087:28;;4125:31;4134:5;4141:7;4150:5;4125:8;:31::i;:::-;4173:4;4166:11;;;3998:186;;;;:::o;2849:97::-;2901:7;2927:12;;2920:19;;2849:97;:::o;4776:244::-;4863:4;4879:15;4897:12;:10;:12::i;:::-;4879:30;;4919:37;4935:4;4941:7;4950:5;4919:15;:37::i;:::-;4966:26;4976:4;4982:2;4986:5;4966:9;:26::i;:::-;5009:4;5002:11;;;4776:244;;;;;:::o;2707:82::-;2756:5;2780:2;2773:9;;2707:82;:::o;3004:116::-;3069:7;3095:9;:18;3105:7;3095:18;;;;;;;;;;;;;;;;3088:25;;3004:116;;;:::o;1981:93::-;2028:13;2060:7;2053:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1981:93;:::o;202:76:9:-;246:24;252:10;263:6;246:5;:24::i;:::-;202:76;:::o;3315:178:4:-;3384:4;3400:13;3416:12;:10;:12::i;:::-;3400:28;;3438:27;3448:5;3455:2;3459:5;3438:9;:27::i;:::-;3482:4;3475:11;;;3315:178;;;;:::o;3551:140::-;3631:7;3657:11;:18;3669:5;3657:18;;;;;;;;;;;;;;;:27;3676:7;3657:27;;;;;;;;;;;;;;;;3650:34;;3551:140;;;;:::o;656:96:7:-;709:7;735:10;728:17;;656:96;:::o;8726:128:4:-;8810:37;8819:5;8826:7;8835:5;8842:4;8810:8;:37::i;:::-;8726:128;;;:::o;10415:477::-;10514:24;10541:25;10551:5;10558:7;10541:9;:25::i;:::-;10514:52;;10600:17;10580:16;:37;10576:310;;10656:5;10637:16;:24;10633:130;;;10715:7;10724:16;10742:5;10688:60;;;;;;;;;;;;;:::i;:::-;;;;;;;;10633:130;10804:57;10813:5;10820:7;10848:5;10829:16;:24;10855:5;10804:8;:57::i;:::-;10576:310;10504:388;10415:477;;;:::o;5393:300::-;5492:1;5476:18;;:4;:18;;;5472:86;;5544:1;5517:30;;;;;;;;;;;:::i;:::-;;;;;;;;5472:86;5585:1;5571:16;;:2;:16;;;5567:86;;5639:1;5610:32;;;;;;;;;;;:::i;:::-;;;;;;;;5567:86;5662:24;5670:4;5676:2;5680:5;5662:7;:24::i;:::-;5393:300;;;:::o;7458:208::-;7547:1;7528:21;;:7;:21;;;7524:91;;7601:1;7572:32;;;;;;;;;;;:::i;:::-;;;;;;;;7524:91;7624:35;7640:1;7644:7;7653:5;7624:7;:35::i;:::-;7458:208;;:::o;9701:432::-;9830:1;9813:19;;:5;:19;;;9809:89;;9884:1;9855:32;;;;;;;;;;;:::i;:::-;;;;;;;;9809:89;9930:1;9911:21;;:7;:21;;;9907:90;;9983:1;9955:31;;;;;;;;;;;:::i;:::-;;;;;;;;9907:90;10036:5;10006:11;:18;10018:5;10006:18;;;;;;;;;;;;;;;:27;10025:7;10006:27;;;;;;;;;;;;;;;:35;;;;10055:9;10051:76;;;10101:7;10085:31;;10094:5;10085:31;;;10110:5;10085:31;;;;;;:::i;:::-;;;;;;;;10051:76;9701:432;;;;:::o;6008:1107::-;6113:1;6097:18;;:4;:18;;;6093:540;;6249:5;6233:12;;:21;;;;;;;:::i;:::-;;;;;;;;6093:540;;;6285:19;6307:9;:15;6317:4;6307:15;;;;;;;;;;;;;;;;6285:37;;6354:5;6340:11;:19;6336:115;;;6411:4;6417:11;6430:5;6386:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;6336:115;6603:5;6589:11;:19;6571:9;:15;6581:4;6571:15;;;;;;;;;;;;;;;:37;;;;6271:362;6093:540;6661:1;6647:16;;:2;:16;;;6643:425;;6826:5;6810:12;;:21;;;;;;;;;;;6643:425;;;7038:5;7021:9;:13;7031:2;7021:13;;;;;;;;;;;;;;;;:22;;;;;;;;;;;6643:425;7098:2;7083:25;;7092:4;7083:25;;;7102:5;7083:25;;;;;;:::i;:::-;;;;;;;;6008:1107;;;:::o;7:99:11:-;59:6;93:5;87:12;77:22;;7:99;;;:::o;112:169::-;196:11;230:6;225:3;218:19;270:4;265:3;261:14;246:29;;112:169;;;;:::o;287:139::-;376:6;371:3;366;360:23;417:1;408:6;403:3;399:16;392:27;287:139;;;:::o;432:102::-;473:6;524:2;520:7;515:2;508:5;504:14;500:28;490:38;;432:102;;;:::o;540:377::-;628:3;656:39;689:5;656:39;:::i;:::-;711:71;775:6;770:3;711:71;:::i;:::-;704:78;;791:65;849:6;844:3;837:4;830:5;826:16;791:65;:::i;:::-;881:29;903:6;881:29;:::i;:::-;876:3;872:39;865:46;;632:285;540:377;;;;:::o;923:313::-;1036:4;1074:2;1063:9;1059:18;1051:26;;1123:9;1117:4;1113:20;1109:1;1098:9;1094:17;1087:47;1151:78;1224:4;1215:6;1151:78;:::i;:::-;1143:86;;923:313;;;;:::o;1323:117::-;1432:1;1429;1422:12;1569:126;1606:7;1646:42;1639:5;1635:54;1624:65;;1569:126;;;:::o;1701:96::-;1738:7;1767:24;1785:5;1767:24;:::i;:::-;1756:35;;1701:96;;;:::o;1803:122::-;1876:24;1894:5;1876:24;:::i;:::-;1869:5;1866:35;1856:63;;1915:1;1912;1905:12;1856:63;1803:122;:::o;1931:139::-;1977:5;2015:6;2002:20;1993:29;;2031:33;2058:5;2031:33;:::i;:::-;1931:139;;;;:::o;2076:77::-;2113:7;2142:5;2131:16;;2076:77;;;:::o;2159:122::-;2232:24;2250:5;2232:24;:::i;:::-;2225:5;2222:35;2212:63;;2271:1;2268;2261:12;2212:63;2159:122;:::o;2287:139::-;2333:5;2371:6;2358:20;2349:29;;2387:33;2414:5;2387:33;:::i;:::-;2287:139;;;;:::o;2432:474::-;2500:6;2508;2557:2;2545:9;2536:7;2532:23;2528:32;2525:119;;;2563:79;;:::i;:::-;2525:119;2683:1;2708:53;2753:7;2744:6;2733:9;2729:22;2708:53;:::i;:::-;2698:63;;2654:117;2810:2;2836:53;2881:7;2872:6;2861:9;2857:22;2836:53;:::i;:::-;2826:63;;2781:118;2432:474;;;;;:::o;2912:90::-;2946:7;2989:5;2982:13;2975:21;2964:32;;2912:90;;;:::o;3008:109::-;3089:21;3104:5;3089:21;:::i;:::-;3084:3;3077:34;3008:109;;:::o;3123:210::-;3210:4;3248:2;3237:9;3233:18;3225:26;;3261:65;3323:1;3312:9;3308:17;3299:6;3261:65;:::i;:::-;3123:210;;;;:::o;3339:118::-;3426:24;3444:5;3426:24;:::i;:::-;3421:3;3414:37;3339:118;;:::o;3463:222::-;3556:4;3594:2;3583:9;3579:18;3571:26;;3607:71;3675:1;3664:9;3660:17;3651:6;3607:71;:::i;:::-;3463:222;;;;:::o;3691:619::-;3768:6;3776;3784;3833:2;3821:9;3812:7;3808:23;3804:32;3801:119;;;3839:79;;:::i;:::-;3801:119;3959:1;3984:53;4029:7;4020:6;4009:9;4005:22;3984:53;:::i;:::-;3974:63;;3930:117;4086:2;4112:53;4157:7;4148:6;4137:9;4133:22;4112:53;:::i;:::-;4102:63;;4057:118;4214:2;4240:53;4285:7;4276:6;4265:9;4261:22;4240:53;:::i;:::-;4230:63;;4185:118;3691:619;;;;;:::o;4316:86::-;4351:7;4391:4;4384:5;4380:16;4369:27;;4316:86;;;:::o;4408:112::-;4491:22;4507:5;4491:22;:::i;:::-;4486:3;4479:35;4408:112;;:::o;4526:214::-;4615:4;4653:2;4642:9;4638:18;4630:26;;4666:67;4730:1;4719:9;4715:17;4706:6;4666:67;:::i;:::-;4526:214;;;;:::o;4746:329::-;4805:6;4854:2;4842:9;4833:7;4829:23;4825:32;4822:119;;;4860:79;;:::i;:::-;4822:119;4980:1;5005:53;5050:7;5041:6;5030:9;5026:22;5005:53;:::i;:::-;4995:63;;4951:117;4746:329;;;;:::o;5081:::-;5140:6;5189:2;5177:9;5168:7;5164:23;5160:32;5157:119;;;5195:79;;:::i;:::-;5157:119;5315:1;5340:53;5385:7;5376:6;5365:9;5361:22;5340:53;:::i;:::-;5330:63;;5286:117;5081:329;;;;:::o;5416:474::-;5484:6;5492;5541:2;5529:9;5520:7;5516:23;5512:32;5509:119;;;5547:79;;:::i;:::-;5509:119;5667:1;5692:53;5737:7;5728:6;5717:9;5713:22;5692:53;:::i;:::-;5682:63;;5638:117;5794:2;5820:53;5865:7;5856:6;5845:9;5841:22;5820:53;:::i;:::-;5810:63;;5765:118;5416:474;;;;;:::o;5896:180::-;5944:77;5941:1;5934:88;6041:4;6038:1;6031:15;6065:4;6062:1;6055:15;6082:320;6126:6;6163:1;6157:4;6153:12;6143:22;;6210:1;6204:4;6200:12;6231:18;6221:81;;6287:4;6279:6;6275:17;6265:27;;6221:81;6349:2;6341:6;6338:14;6318:18;6315:38;6312:84;;6368:18;;:::i;:::-;6312:84;6133:269;6082:320;;;:::o;6408:118::-;6495:24;6513:5;6495:24;:::i;:::-;6490:3;6483:37;6408:118;;:::o;6532:442::-;6681:4;6719:2;6708:9;6704:18;6696:26;;6732:71;6800:1;6789:9;6785:17;6776:6;6732:71;:::i;:::-;6813:72;6881:2;6870:9;6866:18;6857:6;6813:72;:::i;:::-;6895;6963:2;6952:9;6948:18;6939:6;6895:72;:::i;:::-;6532:442;;;;;;:::o;6980:222::-;7073:4;7111:2;7100:9;7096:18;7088:26;;7124:71;7192:1;7181:9;7177:17;7168:6;7124:71;:::i;:::-;6980:222;;;;:::o;7208:180::-;7256:77;7253:1;7246:88;7353:4;7350:1;7343:15;7377:4;7374:1;7367:15;7394:191;7434:3;7453:20;7471:1;7453:20;:::i;:::-;7448:25;;7487:20;7505:1;7487:20;:::i;:::-;7482:25;;7530:1;7527;7523:9;7516:16;;7551:3;7548:1;7545:10;7542:36;;;7558:18;;:::i;:::-;7542:36;7394:191;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "755000",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "2829",
								"decimals()": "427",
								"mint(uint256)": "infinite",
								"name()": "infinite",
								"symbol()": "infinite",
								"totalSupply()": "2477",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 118,
									"end": 281,
									"name": "PUSH",
									"source": 9,
									"value": "80"
								},
								{
									"begin": 118,
									"end": 281,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 118,
									"end": 281,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 153,
									"end": 194,
									"name": "CALLVALUE",
									"source": 9
								},
								{
									"begin": 153,
									"end": 194,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 153,
									"end": 194,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 153,
									"end": 194,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 153,
									"end": 194,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 153,
									"end": 194,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 153,
									"end": 194,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 153,
									"end": 194,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 153,
									"end": 194,
									"name": "tag",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 153,
									"end": 194,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 153,
									"end": 194,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 4,
									"value": "A"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 4,
									"value": "5374616B65546F6B656E00000000000000000000000000000000000000000000"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 4,
									"value": "3"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 4,
									"value": "53544B0000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1675,
									"end": 1680,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1667,
									"end": 1672,
									"name": "PUSH",
									"source": 4,
									"value": "3"
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "5"
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "6"
								},
								{
									"begin": 1667,
									"end": 1680,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "tag",
									"source": 4,
									"value": "5"
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1700,
									"end": 1707,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1690,
									"end": 1697,
									"name": "PUSH",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "7"
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "6"
								},
								{
									"begin": 1690,
									"end": 1707,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "tag",
									"source": 4,
									"value": "7"
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 118,
									"end": 281,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "9"
								},
								{
									"begin": 118,
									"end": 281,
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 7,
									"end": 106,
									"name": "tag",
									"source": 11,
									"value": "10"
								},
								{
									"begin": 7,
									"end": 106,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 59,
									"end": 65,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 93,
									"end": 98,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 87,
									"end": 99,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 77,
									"end": 99,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 77,
									"end": 99,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 7,
									"end": 106,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 7,
									"end": 106,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 7,
									"end": 106,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 7,
									"end": 106,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 112,
									"end": 292,
									"name": "tag",
									"source": 11,
									"value": "11"
								},
								{
									"begin": 112,
									"end": 292,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 160,
									"end": 237,
									"name": "PUSH",
									"source": 11,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 157,
									"end": 158,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 150,
									"end": 238,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 257,
									"end": 261,
									"name": "PUSH",
									"source": 11,
									"value": "41"
								},
								{
									"begin": 254,
									"end": 255,
									"name": "PUSH",
									"source": 11,
									"value": "4"
								},
								{
									"begin": 247,
									"end": 262,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 281,
									"end": 285,
									"name": "PUSH",
									"source": 11,
									"value": "24"
								},
								{
									"begin": 278,
									"end": 279,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 271,
									"end": 286,
									"name": "REVERT",
									"source": 11
								},
								{
									"begin": 298,
									"end": 478,
									"name": "tag",
									"source": 11,
									"value": "12"
								},
								{
									"begin": 298,
									"end": 478,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 346,
									"end": 423,
									"name": "PUSH",
									"source": 11,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 343,
									"end": 344,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 336,
									"end": 424,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 443,
									"end": 447,
									"name": "PUSH",
									"source": 11,
									"value": "22"
								},
								{
									"begin": 440,
									"end": 441,
									"name": "PUSH",
									"source": 11,
									"value": "4"
								},
								{
									"begin": 433,
									"end": 448,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 467,
									"end": 471,
									"name": "PUSH",
									"source": 11,
									"value": "24"
								},
								{
									"begin": 464,
									"end": 465,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 457,
									"end": 472,
									"name": "REVERT",
									"source": 11
								},
								{
									"begin": 484,
									"end": 804,
									"name": "tag",
									"source": 11,
									"value": "13"
								},
								{
									"begin": 484,
									"end": 804,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 528,
									"end": 534,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 565,
									"end": 566,
									"name": "PUSH",
									"source": 11,
									"value": "2"
								},
								{
									"begin": 559,
									"end": 563,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 555,
									"end": 567,
									"name": "DIV",
									"source": 11
								},
								{
									"begin": 545,
									"end": 567,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 545,
									"end": 567,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 612,
									"end": 613,
									"name": "PUSH",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 606,
									"end": 610,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 602,
									"end": 614,
									"name": "AND",
									"source": 11
								},
								{
									"begin": 633,
									"end": 651,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 623,
									"end": 704,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "35"
								},
								{
									"begin": 623,
									"end": 704,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 689,
									"end": 693,
									"name": "PUSH",
									"source": 11,
									"value": "7F"
								},
								{
									"begin": 681,
									"end": 687,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 677,
									"end": 694,
									"name": "AND",
									"source": 11
								},
								{
									"begin": 667,
									"end": 694,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 667,
									"end": 694,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 623,
									"end": 704,
									"name": "tag",
									"source": 11,
									"value": "35"
								},
								{
									"begin": 623,
									"end": 704,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 751,
									"end": 753,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 743,
									"end": 749,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 740,
									"end": 754,
									"name": "LT",
									"source": 11
								},
								{
									"begin": 720,
									"end": 738,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 717,
									"end": 755,
									"name": "SUB",
									"source": 11
								},
								{
									"begin": 714,
									"end": 798,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "36"
								},
								{
									"begin": 714,
									"end": 798,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 770,
									"end": 788,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "37"
								},
								{
									"begin": 770,
									"end": 788,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "12"
								},
								{
									"begin": 770,
									"end": 788,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 770,
									"end": 788,
									"name": "tag",
									"source": 11,
									"value": "37"
								},
								{
									"begin": 770,
									"end": 788,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 714,
									"end": 798,
									"name": "tag",
									"source": 11,
									"value": "36"
								},
								{
									"begin": 714,
									"end": 798,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 535,
									"end": 804,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 484,
									"end": 804,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 484,
									"end": 804,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 484,
									"end": 804,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 484,
									"end": 804,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 810,
									"end": 951,
									"name": "tag",
									"source": 11,
									"value": "14"
								},
								{
									"begin": 810,
									"end": 951,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 859,
									"end": 863,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 882,
									"end": 885,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 874,
									"end": 885,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 874,
									"end": 885,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 905,
									"end": 908,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 902,
									"end": 903,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 895,
									"end": 909,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 939,
									"end": 943,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 936,
									"end": 937,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 926,
									"end": 944,
									"name": "KECCAK256",
									"source": 11
								},
								{
									"begin": 918,
									"end": 944,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 918,
									"end": 944,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 810,
									"end": 951,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 810,
									"end": 951,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 810,
									"end": 951,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 810,
									"end": 951,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "tag",
									"source": 11,
									"value": "15"
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 994,
									"end": 1000,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 1041,
									"end": 1043,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 1036,
									"end": 1038,
									"name": "PUSH",
									"source": 11,
									"value": "1F"
								},
								{
									"begin": 1029,
									"end": 1034,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 1025,
									"end": 1039,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 1021,
									"end": 1044,
									"name": "DIV",
									"source": 11
								},
								{
									"begin": 1011,
									"end": 1044,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 1011,
									"end": 1044,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 957,
									"end": 1050,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "tag",
									"source": 11,
									"value": "16"
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1100,
									"end": 1108,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 1150,
									"end": 1155,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 1144,
									"end": 1148,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 1140,
									"end": 1156,
									"name": "SHL",
									"source": 11
								},
								{
									"begin": 1119,
									"end": 1156,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 1119,
									"end": 1156,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "SWAP3",
									"source": 11
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1056,
									"end": 1163,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "tag",
									"source": 11,
									"value": "17"
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1238,
									"end": 1244,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 1288,
									"end": 1289,
									"name": "PUSH",
									"source": 11,
									"value": "8"
								},
								{
									"begin": 1276,
									"end": 1286,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 1272,
									"end": 1290,
									"name": "MUL",
									"source": 11
								},
								{
									"begin": 1311,
									"end": 1408,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "42"
								},
								{
									"begin": 1341,
									"end": 1407,
									"name": "PUSH",
									"source": 11,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1330,
									"end": 1339,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 1311,
									"end": 1408,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "16"
								},
								{
									"begin": 1311,
									"end": 1408,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 1311,
									"end": 1408,
									"name": "tag",
									"source": 11,
									"value": "42"
								},
								{
									"begin": 1311,
									"end": 1408,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1429,
									"end": 1468,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "43"
								},
								{
									"begin": 1459,
									"end": 1467,
									"name": "DUP7",
									"source": 11
								},
								{
									"begin": 1448,
									"end": 1457,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 1429,
									"end": 1468,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "16"
								},
								{
									"begin": 1429,
									"end": 1468,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 1429,
									"end": 1468,
									"name": "tag",
									"source": 11,
									"value": "43"
								},
								{
									"begin": 1429,
									"end": 1468,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1417,
									"end": 1468,
									"name": "SWAP6",
									"source": 11
								},
								{
									"begin": 1417,
									"end": 1468,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1501,
									"end": 1505,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 1497,
									"end": 1506,
									"name": "NOT",
									"source": 11
								},
								{
									"begin": 1490,
									"end": 1495,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 1486,
									"end": 1507,
									"name": "AND",
									"source": 11
								},
								{
									"begin": 1477,
									"end": 1507,
									"name": "SWAP4",
									"source": 11
								},
								{
									"begin": 1477,
									"end": 1507,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1550,
									"end": 1554,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 1540,
									"end": 1548,
									"name": "DUP7",
									"source": 11
								},
								{
									"begin": 1536,
									"end": 1555,
									"name": "AND",
									"source": 11
								},
								{
									"begin": 1529,
									"end": 1534,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 1526,
									"end": 1556,
									"name": "OR",
									"source": 11
								},
								{
									"begin": 1516,
									"end": 1556,
									"name": "SWAP3",
									"source": 11
								},
								{
									"begin": 1516,
									"end": 1556,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1245,
									"end": 1562,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1245,
									"end": 1562,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "SWAP4",
									"source": 11
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "SWAP3",
									"source": 11
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1169,
									"end": 1562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "tag",
									"source": 11,
									"value": "18"
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1605,
									"end": 1612,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 1634,
									"end": 1639,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 1623,
									"end": 1639,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 1623,
									"end": 1639,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1568,
									"end": 1645,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "tag",
									"source": 11,
									"value": "19"
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1679,
									"end": 1682,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 1700,
									"end": 1705,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 1693,
									"end": 1705,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 1693,
									"end": 1705,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1651,
									"end": 1711,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "tag",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1767,
									"end": 1776,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 1800,
									"end": 1853,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "47"
								},
								{
									"begin": 1818,
									"end": 1852,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "48"
								},
								{
									"begin": 1827,
									"end": 1851,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "49"
								},
								{
									"begin": 1845,
									"end": 1850,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 1827,
									"end": 1851,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "18"
								},
								{
									"begin": 1827,
									"end": 1851,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 1827,
									"end": 1851,
									"name": "tag",
									"source": 11,
									"value": "49"
								},
								{
									"begin": 1827,
									"end": 1851,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1818,
									"end": 1852,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "19"
								},
								{
									"begin": 1818,
									"end": 1852,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 1818,
									"end": 1852,
									"name": "tag",
									"source": 11,
									"value": "48"
								},
								{
									"begin": 1818,
									"end": 1852,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1800,
									"end": 1853,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "18"
								},
								{
									"begin": 1800,
									"end": 1853,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 1800,
									"end": 1853,
									"name": "tag",
									"source": 11,
									"value": "47"
								},
								{
									"begin": 1800,
									"end": 1853,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1787,
									"end": 1853,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 1787,
									"end": 1853,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1717,
									"end": 1859,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "tag",
									"source": 11,
									"value": "21"
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1908,
									"end": 1911,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 1929,
									"end": 1934,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 1922,
									"end": 1934,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 1922,
									"end": 1934,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1865,
									"end": 1940,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "tag",
									"source": 11,
									"value": "22"
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 2056,
									"end": 2095,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "52"
								},
								{
									"begin": 2087,
									"end": 2094,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 2056,
									"end": 2095,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 2056,
									"end": 2095,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 2056,
									"end": 2095,
									"name": "tag",
									"source": 11,
									"value": "52"
								},
								{
									"begin": 2056,
									"end": 2095,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 2117,
									"end": 2208,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "53"
								},
								{
									"begin": 2166,
									"end": 2207,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "54"
								},
								{
									"begin": 2190,
									"end": 2206,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 2166,
									"end": 2207,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "21"
								},
								{
									"begin": 2166,
									"end": 2207,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 2166,
									"end": 2207,
									"name": "tag",
									"source": 11,
									"value": "54"
								},
								{
									"begin": 2166,
									"end": 2207,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 2158,
									"end": 2164,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 2151,
									"end": 2155,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 2145,
									"end": 2156,
									"name": "SLOAD",
									"source": 11
								},
								{
									"begin": 2117,
									"end": 2208,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "17"
								},
								{
									"begin": 2117,
									"end": 2208,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 2117,
									"end": 2208,
									"name": "tag",
									"source": 11,
									"value": "53"
								},
								{
									"begin": 2117,
									"end": 2208,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 2111,
									"end": 2115,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 2104,
									"end": 2209,
									"name": "SSTORE",
									"source": 11
								},
								{
									"begin": 2022,
									"end": 2215,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1946,
									"end": 2215,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 2221,
									"end": 2294,
									"name": "tag",
									"source": 11,
									"value": "23"
								},
								{
									"begin": 2221,
									"end": 2294,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 2266,
									"end": 2269,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 2221,
									"end": 2294,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 2221,
									"end": 2294,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 2300,
									"end": 2489,
									"name": "tag",
									"source": 11,
									"value": "24"
								},
								{
									"begin": 2300,
									"end": 2489,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 2377,
									"end": 2409,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "57"
								},
								{
									"begin": 2377,
									"end": 2409,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "23"
								},
								{
									"begin": 2377,
									"end": 2409,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 2377,
									"end": 2409,
									"name": "tag",
									"source": 11,
									"value": "57"
								},
								{
									"begin": 2377,
									"end": 2409,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 2418,
									"end": 2483,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "58"
								},
								{
									"begin": 2476,
									"end": 2482,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 2468,
									"end": 2474,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 2462,
									"end": 2466,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 2418,
									"end": 2483,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "22"
								},
								{
									"begin": 2418,
									"end": 2483,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 2418,
									"end": 2483,
									"name": "tag",
									"source": 11,
									"value": "58"
								},
								{
									"begin": 2418,
									"end": 2483,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 2353,
									"end": 2489,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 2300,
									"end": 2489,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 2300,
									"end": 2489,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 2300,
									"end": 2489,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 2495,
									"end": 2681,
									"name": "tag",
									"source": 11,
									"value": "25"
								},
								{
									"begin": 2495,
									"end": 2681,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "tag",
									"source": 11,
									"value": "60"
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 2572,
									"end": 2575,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 2565,
									"end": 2570,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 2562,
									"end": 2576,
									"name": "LT",
									"source": 11
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "62"
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 2626,
									"end": 2665,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "63"
								},
								{
									"begin": 2663,
									"end": 2664,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 2656,
									"end": 2661,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 2626,
									"end": 2665,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "24"
								},
								{
									"begin": 2626,
									"end": 2665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 2626,
									"end": 2665,
									"name": "tag",
									"source": 11,
									"value": "63"
								},
								{
									"begin": 2626,
									"end": 2665,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 2599,
									"end": 2600,
									"name": "PUSH",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 2592,
									"end": 2597,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 2588,
									"end": 2601,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 2579,
									"end": 2601,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 2579,
									"end": 2601,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "60"
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "tag",
									"source": 11,
									"value": "62"
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 2495,
									"end": 2681,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 2495,
									"end": 2681,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 2495,
									"end": 2681,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "tag",
									"source": 11,
									"value": "26"
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 2788,
									"end": 2790,
									"name": "PUSH",
									"source": 11,
									"value": "1F"
								},
								{
									"begin": 2783,
									"end": 2786,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 2780,
									"end": 2791,
									"name": "GT",
									"source": 11
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "65"
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 2822,
									"end": 2860,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "66"
								},
								{
									"begin": 2854,
									"end": 2859,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 2822,
									"end": 2860,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "14"
								},
								{
									"begin": 2822,
									"end": 2860,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 2822,
									"end": 2860,
									"name": "tag",
									"source": 11,
									"value": "66"
								},
								{
									"begin": 2822,
									"end": 2860,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 2906,
									"end": 2935,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "67"
								},
								{
									"begin": 2924,
									"end": 2934,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 2906,
									"end": 2935,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "15"
								},
								{
									"begin": 2906,
									"end": 2935,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 2906,
									"end": 2935,
									"name": "tag",
									"source": 11,
									"value": "67"
								},
								{
									"begin": 2906,
									"end": 2935,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 2896,
									"end": 2904,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 2892,
									"end": 2936,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 3089,
									"end": 3091,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 3077,
									"end": 3087,
									"name": "DUP6",
									"source": 11
								},
								{
									"begin": 3074,
									"end": 3092,
									"name": "LT",
									"source": 11
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "68"
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 3110,
									"end": 3118,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 3095,
									"end": 3118,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 3095,
									"end": 3118,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "tag",
									"source": 11,
									"value": "68"
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 3133,
									"end": 3213,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "69"
								},
								{
									"begin": 3189,
									"end": 3211,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "70"
								},
								{
									"begin": 3207,
									"end": 3210,
									"name": "DUP6",
									"source": 11
								},
								{
									"begin": 3189,
									"end": 3211,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "15"
								},
								{
									"begin": 3189,
									"end": 3211,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 3189,
									"end": 3211,
									"name": "tag",
									"source": 11,
									"value": "70"
								},
								{
									"begin": 3189,
									"end": 3211,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 3179,
									"end": 3187,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 3175,
									"end": 3212,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 3162,
									"end": 3173,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 3133,
									"end": 3213,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "25"
								},
								{
									"begin": 3133,
									"end": 3213,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 3133,
									"end": 3213,
									"name": "tag",
									"source": 11,
									"value": "69"
								},
								{
									"begin": 3133,
									"end": 3213,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 2792,
									"end": 3223,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 2792,
									"end": 3223,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "tag",
									"source": 11,
									"value": "65"
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 2687,
									"end": 3230,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "tag",
									"source": 11,
									"value": "27"
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 3290,
									"end": 3298,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 3340,
									"end": 3345,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 3334,
									"end": 3338,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 3330,
									"end": 3346,
									"name": "SHR",
									"source": 11
								},
								{
									"begin": 3309,
									"end": 3346,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 3309,
									"end": 3346,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "SWAP3",
									"source": 11
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 3236,
									"end": 3353,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "tag",
									"source": 11,
									"value": "28"
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 3403,
									"end": 3409,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 3436,
									"end": 3487,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "73"
								},
								{
									"begin": 3484,
									"end": 3485,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 3480,
									"end": 3486,
									"name": "NOT",
									"source": 11
								},
								{
									"begin": 3472,
									"end": 3477,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 3469,
									"end": 3470,
									"name": "PUSH",
									"source": 11,
									"value": "8"
								},
								{
									"begin": 3465,
									"end": 3478,
									"name": "MUL",
									"source": 11
								},
								{
									"begin": 3436,
									"end": 3487,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "27"
								},
								{
									"begin": 3436,
									"end": 3487,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 3436,
									"end": 3487,
									"name": "tag",
									"source": 11,
									"value": "73"
								},
								{
									"begin": 3436,
									"end": 3487,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 3432,
									"end": 3488,
									"name": "NOT",
									"source": 11
								},
								{
									"begin": 3517,
									"end": 3521,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 3511,
									"end": 3515,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 3507,
									"end": 3522,
									"name": "AND",
									"source": 11
								},
								{
									"begin": 3497,
									"end": 3522,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 3497,
									"end": 3522,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 3410,
									"end": 3528,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "SWAP3",
									"source": 11
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 3359,
									"end": 3528,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "tag",
									"source": 11,
									"value": "29"
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 3609,
									"end": 3613,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 3755,
									"end": 3784,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "75"
								},
								{
									"begin": 3780,
									"end": 3783,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 3774,
									"end": 3778,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 3755,
									"end": 3784,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "28"
								},
								{
									"begin": 3755,
									"end": 3784,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 3755,
									"end": 3784,
									"name": "tag",
									"source": 11,
									"value": "75"
								},
								{
									"begin": 3755,
									"end": 3784,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 3747,
									"end": 3784,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 3747,
									"end": 3784,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 3817,
									"end": 3820,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 3814,
									"end": 3815,
									"name": "PUSH",
									"source": 11,
									"value": "2"
								},
								{
									"begin": 3810,
									"end": 3821,
									"name": "MUL",
									"source": 11
								},
								{
									"begin": 3804,
									"end": 3808,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 3801,
									"end": 3822,
									"name": "OR",
									"source": 11
								},
								{
									"begin": 3793,
									"end": 3822,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 3793,
									"end": 3822,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "SWAP3",
									"source": 11
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 3533,
									"end": 3828,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 3833,
									"end": 5228,
									"name": "tag",
									"source": 11,
									"value": "6"
								},
								{
									"begin": 3833,
									"end": 5228,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 3950,
									"end": 3987,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "77"
								},
								{
									"begin": 3983,
									"end": 3986,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 3950,
									"end": 3987,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "10"
								},
								{
									"begin": 3950,
									"end": 3987,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 3950,
									"end": 3987,
									"name": "tag",
									"source": 11,
									"value": "77"
								},
								{
									"begin": 3950,
									"end": 3987,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 4052,
									"end": 4070,
									"name": "PUSH",
									"source": 11,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 4044,
									"end": 4050,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 4041,
									"end": 4071,
									"name": "GT",
									"source": 11
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "78"
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 4074,
									"end": 4092,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "79"
								},
								{
									"begin": 4074,
									"end": 4092,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "11"
								},
								{
									"begin": 4074,
									"end": 4092,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 4074,
									"end": 4092,
									"name": "tag",
									"source": 11,
									"value": "79"
								},
								{
									"begin": 4074,
									"end": 4092,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "tag",
									"source": 11,
									"value": "78"
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 4118,
									"end": 4156,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "80"
								},
								{
									"begin": 4150,
									"end": 4154,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 4144,
									"end": 4155,
									"name": "SLOAD",
									"source": 11
								},
								{
									"begin": 4118,
									"end": 4156,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "13"
								},
								{
									"begin": 4118,
									"end": 4156,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 4118,
									"end": 4156,
									"name": "tag",
									"source": 11,
									"value": "80"
								},
								{
									"begin": 4118,
									"end": 4156,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 4203,
									"end": 4270,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "81"
								},
								{
									"begin": 4263,
									"end": 4269,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 4255,
									"end": 4261,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 4249,
									"end": 4253,
									"name": "DUP6",
									"source": 11
								},
								{
									"begin": 4203,
									"end": 4270,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "26"
								},
								{
									"begin": 4203,
									"end": 4270,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 4203,
									"end": 4270,
									"name": "tag",
									"source": 11,
									"value": "81"
								},
								{
									"begin": 4203,
									"end": 4270,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 4297,
									"end": 4298,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 4321,
									"end": 4325,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 4308,
									"end": 4325,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 4308,
									"end": 4325,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 4353,
									"end": 4355,
									"name": "PUSH",
									"source": 11,
									"value": "1F"
								},
								{
									"begin": 4345,
									"end": 4351,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 4342,
									"end": 4356,
									"name": "GT",
									"source": 11
								},
								{
									"begin": 4370,
									"end": 4371,
									"name": "PUSH",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "EQ",
									"source": 11
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "83"
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 5027,
									"end": 5028,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 5044,
									"end": 5050,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "84"
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 5093,
									"end": 5102,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 5088,
									"end": 5091,
									"name": "DUP8",
									"source": 11
								},
								{
									"begin": 5084,
									"end": 5103,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 5078,
									"end": 5104,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 5069,
									"end": 5104,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 5069,
									"end": 5104,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "tag",
									"source": 11,
									"value": "84"
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 5144,
									"end": 5211,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "85"
								},
								{
									"begin": 5204,
									"end": 5210,
									"name": "DUP6",
									"source": 11
								},
								{
									"begin": 5197,
									"end": 5202,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 5144,
									"end": 5211,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "29"
								},
								{
									"begin": 5144,
									"end": 5211,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 5144,
									"end": 5211,
									"name": "tag",
									"source": 11,
									"value": "85"
								},
								{
									"begin": 5144,
									"end": 5211,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 5138,
									"end": 5142,
									"name": "DUP7",
									"source": 11
								},
								{
									"begin": 5131,
									"end": 5212,
									"name": "SSTORE",
									"source": 11
								},
								{
									"begin": 5000,
									"end": 5222,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "82"
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "tag",
									"source": 11,
									"value": "83"
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 4417,
									"end": 4421,
									"name": "PUSH",
									"source": 11,
									"value": "1F"
								},
								{
									"begin": 4413,
									"end": 4422,
									"name": "NOT",
									"source": 11
								},
								{
									"begin": 4405,
									"end": 4411,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 4401,
									"end": 4423,
									"name": "AND",
									"source": 11
								},
								{
									"begin": 4451,
									"end": 4488,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "86"
								},
								{
									"begin": 4483,
									"end": 4487,
									"name": "DUP7",
									"source": 11
								},
								{
									"begin": 4451,
									"end": 4488,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "14"
								},
								{
									"begin": 4451,
									"end": 4488,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 4451,
									"end": 4488,
									"name": "tag",
									"source": 11,
									"value": "86"
								},
								{
									"begin": 4451,
									"end": 4488,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 4510,
									"end": 4511,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "tag",
									"source": 11,
									"value": "87"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 4538,
									"end": 4545,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 4535,
									"end": 4536,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 4532,
									"end": 4546,
									"name": "LT",
									"source": 11
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "89"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 4617,
									"end": 4626,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 4612,
									"end": 4615,
									"name": "DUP10",
									"source": 11
								},
								{
									"begin": 4608,
									"end": 4627,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 4602,
									"end": 4628,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 4594,
									"end": 4600,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 4587,
									"end": 4629,
									"name": "SSTORE",
									"source": 11
								},
								{
									"begin": 4668,
									"end": 4669,
									"name": "PUSH",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 4660,
									"end": 4666,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 4656,
									"end": 4670,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 4646,
									"end": 4670,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 4646,
									"end": 4670,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 4715,
									"end": 4717,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 4704,
									"end": 4713,
									"name": "DUP6",
									"source": 11
								},
								{
									"begin": 4700,
									"end": 4718,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 4687,
									"end": 4718,
									"name": "SWAP5",
									"source": 11
								},
								{
									"begin": 4687,
									"end": 4718,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 4561,
									"end": 4565,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 4558,
									"end": 4559,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 4554,
									"end": 4566,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 4549,
									"end": 4566,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 4549,
									"end": 4566,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "87"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "tag",
									"source": 11,
									"value": "89"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 4760,
									"end": 4766,
									"name": "DUP7",
									"source": 11
								},
								{
									"begin": 4751,
									"end": 4758,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 4748,
									"end": 4767,
									"name": "LT",
									"source": 11
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "90"
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 4818,
									"end": 4827,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 4813,
									"end": 4816,
									"name": "DUP10",
									"source": 11
								},
								{
									"begin": 4809,
									"end": 4828,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 4803,
									"end": 4829,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 4861,
									"end": 4909,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "91"
								},
								{
									"begin": 4903,
									"end": 4907,
									"name": "PUSH",
									"source": 11,
									"value": "1F"
								},
								{
									"begin": 4895,
									"end": 4901,
									"name": "DUP10",
									"source": 11
								},
								{
									"begin": 4891,
									"end": 4908,
									"name": "AND",
									"source": 11
								},
								{
									"begin": 4880,
									"end": 4889,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 4861,
									"end": 4909,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "28"
								},
								{
									"begin": 4861,
									"end": 4909,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 4861,
									"end": 4909,
									"name": "tag",
									"source": 11,
									"value": "91"
								},
								{
									"begin": 4861,
									"end": 4909,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 4853,
									"end": 4859,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 4846,
									"end": 4910,
									"name": "SSTORE",
									"source": 11
								},
								{
									"begin": 4768,
									"end": 4924,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "tag",
									"source": 11,
									"value": "90"
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 4970,
									"end": 4971,
									"name": "PUSH",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 4966,
									"end": 4967,
									"name": "PUSH",
									"source": 11,
									"value": "2"
								},
								{
									"begin": 4958,
									"end": 4964,
									"name": "DUP9",
									"source": 11
								},
								{
									"begin": 4954,
									"end": 4968,
									"name": "MUL",
									"source": 11
								},
								{
									"begin": 4950,
									"end": 4972,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 4944,
									"end": 4948,
									"name": "DUP9",
									"source": 11
								},
								{
									"begin": 4937,
									"end": 4973,
									"name": "SSTORE",
									"source": 11
								},
								{
									"begin": 4372,
									"end": 4983,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 4372,
									"end": 4983,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 4372,
									"end": 4983,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "tag",
									"source": 11,
									"value": "82"
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 3925,
									"end": 5228,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 3925,
									"end": 5228,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 3925,
									"end": 5228,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 3833,
									"end": 5228,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 3833,
									"end": 5228,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 3833,
									"end": 5228,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 118,
									"end": 281,
									"name": "tag",
									"source": 9,
									"value": "9"
								},
								{
									"begin": 118,
									"end": 281,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 118,
									"end": 281,
									"name": "PUSH #[$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 118,
									"end": 281,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 118,
									"end": 281,
									"name": "PUSH [$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 118,
									"end": 281,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 118,
									"end": 281,
									"name": "CODECOPY",
									"source": 9
								},
								{
									"begin": 118,
									"end": 281,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 118,
									"end": 281,
									"name": "RETURN",
									"source": 9
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122028b976fd646428bda1fda284fd6b383f35620a345acbff012c2a45f875bc980f64736f6c634300081a0033",
									".code": [
										{
											"begin": 118,
											"end": 281,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 118,
											"end": 281,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 118,
											"end": 281,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 118,
											"end": 281,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 118,
											"end": 281,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 118,
											"end": 281,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 118,
											"end": 281,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 118,
											"end": 281,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 118,
											"end": 281,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 118,
											"end": 281,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 118,
											"end": 281,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 118,
											"end": 281,
											"name": "tag",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 118,
											"end": 281,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 118,
											"end": 281,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 118,
											"end": 281,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 118,
											"end": 281,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 118,
											"end": 281,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 118,
											"end": 281,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 118,
											"end": 281,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 118,
											"end": 281,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 118,
											"end": 281,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 118,
											"end": 281,
											"name": "PUSH",
											"source": 9,
											"value": "E0"
										},
										{
											"begin": 118,
											"end": 281,
											"name": "SHR",
											"source": 9
										},
										{
											"begin": 118,
											"end": 281,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 118,
											"end": 281,
											"name": "PUSH",
											"source": 9,
											"value": "70A08231"
										},
										{
											"begin": 118,
											"end": 281,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 118,
											"end": 281,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "13"
										},
										{
											"begin": 118,
											"end": 281,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 118,
											"end": 281,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 118,
											"end": 281,
											"name": "PUSH",
											"source": 9,
											"value": "70A08231"
										},
										{
											"begin": 118,
											"end": 281,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 118,
											"end": 281,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "8"
										},
										{
											"begin": 118,
											"end": 281,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 118,
											"end": 281,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 118,
											"end": 281,
											"name": "PUSH",
											"source": 9,
											"value": "95D89B41"
										},
										{
											"begin": 118,
											"end": 281,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 118,
											"end": 281,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "9"
										},
										{
											"begin": 118,
											"end": 281,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 118,
											"end": 281,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 118,
											"end": 281,
											"name": "PUSH",
											"source": 9,
											"value": "A0712D68"
										},
										{
											"begin": 118,
											"end": 281,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 118,
											"end": 281,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "10"
										},
										{
											"begin": 118,
											"end": 281,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 118,
											"end": 281,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 118,
											"end": 281,
											"name": "PUSH",
											"source": 9,
											"value": "A9059CBB"
										},
										{
											"begin": 118,
											"end": 281,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 118,
											"end": 281,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "11"
										},
										{
											"begin": 118,
											"end": 281,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 118,
											"end": 281,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 118,
											"end": 281,
											"name": "PUSH",
											"source": 9,
											"value": "DD62ED3E"
										},
										{
											"begin": 118,
											"end": 281,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 118,
											"end": 281,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "12"
										},
										{
											"begin": 118,
											"end": 281,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 118,
											"end": 281,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 118,
											"end": 281,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 118,
											"end": 281,
											"name": "tag",
											"source": 9,
											"value": "13"
										},
										{
											"begin": 118,
											"end": 281,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 118,
											"end": 281,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 118,
											"end": 281,
											"name": "PUSH",
											"source": 9,
											"value": "6FDDE03"
										},
										{
											"begin": 118,
											"end": 281,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 118,
											"end": 281,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 118,
											"end": 281,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 118,
											"end": 281,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 118,
											"end": 281,
											"name": "PUSH",
											"source": 9,
											"value": "95EA7B3"
										},
										{
											"begin": 118,
											"end": 281,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 118,
											"end": 281,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 118,
											"end": 281,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 118,
											"end": 281,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 118,
											"end": 281,
											"name": "PUSH",
											"source": 9,
											"value": "18160DDD"
										},
										{
											"begin": 118,
											"end": 281,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 118,
											"end": 281,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 118,
											"end": 281,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 118,
											"end": 281,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 118,
											"end": 281,
											"name": "PUSH",
											"source": 9,
											"value": "23B872DD"
										},
										{
											"begin": 118,
											"end": 281,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 118,
											"end": 281,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 118,
											"end": 281,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 118,
											"end": 281,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 118,
											"end": 281,
											"name": "PUSH",
											"source": 9,
											"value": "313CE567"
										},
										{
											"begin": 118,
											"end": 281,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 118,
											"end": 281,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "7"
										},
										{
											"begin": 118,
											"end": 281,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 118,
											"end": 281,
											"name": "tag",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 118,
											"end": 281,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 118,
											"end": 281,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 118,
											"end": 281,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 118,
											"end": 281,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "tag",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "14"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "15"
										},
										{
											"begin": 1779,
											"end": 1868,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "tag",
											"source": 4,
											"value": "14"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "16"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "17"
										},
										{
											"begin": 1779,
											"end": 1868,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "tag",
											"source": 4,
											"value": "16"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "tag",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "18"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "19"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3998,
											"end": 4184,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "tag",
											"source": 4,
											"value": "19"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "21"
										},
										{
											"begin": 3998,
											"end": 4184,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "tag",
											"source": 4,
											"value": "18"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "22"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "23"
										},
										{
											"begin": 3998,
											"end": 4184,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "tag",
											"source": 4,
											"value": "22"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "tag",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "25"
										},
										{
											"begin": 2849,
											"end": 2946,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "tag",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "26"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "27"
										},
										{
											"begin": 2849,
											"end": 2946,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "tag",
											"source": 4,
											"value": "26"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "tag",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "28"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "29"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "30"
										},
										{
											"begin": 4776,
											"end": 5020,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "tag",
											"source": 4,
											"value": "29"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "31"
										},
										{
											"begin": 4776,
											"end": 5020,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "tag",
											"source": 4,
											"value": "28"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "32"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "23"
										},
										{
											"begin": 4776,
											"end": 5020,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "tag",
											"source": 4,
											"value": "32"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "tag",
											"source": 4,
											"value": "7"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "33"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "34"
										},
										{
											"begin": 2707,
											"end": 2789,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "tag",
											"source": 4,
											"value": "33"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "35"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "36"
										},
										{
											"begin": 2707,
											"end": 2789,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "tag",
											"source": 4,
											"value": "35"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "tag",
											"source": 4,
											"value": "8"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "37"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "38"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "39"
										},
										{
											"begin": 3004,
											"end": 3120,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "tag",
											"source": 4,
											"value": "38"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3004,
											"end": 3120,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "tag",
											"source": 4,
											"value": "37"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "41"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "27"
										},
										{
											"begin": 3004,
											"end": 3120,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "tag",
											"source": 4,
											"value": "41"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "tag",
											"source": 4,
											"value": "9"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "42"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "43"
										},
										{
											"begin": 1981,
											"end": 2074,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "tag",
											"source": 4,
											"value": "42"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "17"
										},
										{
											"begin": 1981,
											"end": 2074,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "tag",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 202,
											"end": 278,
											"name": "tag",
											"source": 9,
											"value": "10"
										},
										{
											"begin": 202,
											"end": 278,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 202,
											"end": 278,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "45"
										},
										{
											"begin": 202,
											"end": 278,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 202,
											"end": 278,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 202,
											"end": 278,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 202,
											"end": 278,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 202,
											"end": 278,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 202,
											"end": 278,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 202,
											"end": 278,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 202,
											"end": 278,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "46"
										},
										{
											"begin": 202,
											"end": 278,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 202,
											"end": 278,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 202,
											"end": 278,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "47"
										},
										{
											"begin": 202,
											"end": 278,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 202,
											"end": 278,
											"name": "tag",
											"source": 9,
											"value": "46"
										},
										{
											"begin": 202,
											"end": 278,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 202,
											"end": 278,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "48"
										},
										{
											"begin": 202,
											"end": 278,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 202,
											"end": 278,
											"name": "tag",
											"source": 9,
											"value": "45"
										},
										{
											"begin": 202,
											"end": 278,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 202,
											"end": 278,
											"name": "STOP",
											"source": 9
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "tag",
											"source": 4,
											"value": "11"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "49"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "50"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3315,
											"end": 3493,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "tag",
											"source": 4,
											"value": "50"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "51"
										},
										{
											"begin": 3315,
											"end": 3493,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "tag",
											"source": 4,
											"value": "49"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "52"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "23"
										},
										{
											"begin": 3315,
											"end": 3493,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "tag",
											"source": 4,
											"value": "52"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "tag",
											"source": 4,
											"value": "12"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "53"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "54"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "55"
										},
										{
											"begin": 3551,
											"end": 3691,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "tag",
											"source": 4,
											"value": "54"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "56"
										},
										{
											"begin": 3551,
											"end": 3691,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "tag",
											"source": 4,
											"value": "53"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "57"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "27"
										},
										{
											"begin": 3551,
											"end": 3691,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "tag",
											"source": 4,
											"value": "57"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "tag",
											"source": 4,
											"value": "15"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1824,
											"end": 1837,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 1856,
											"end": 1861,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "59"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 1849,
											"end": 1861,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "tag",
											"source": 4,
											"value": "59"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "61"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 1849,
											"end": 1861,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "tag",
											"source": 4,
											"value": "61"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "62"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "63"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "62"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "tag",
											"source": 4,
											"value": "63"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "tag",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "tag",
											"source": 4,
											"value": "62"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1779,
											"end": 1868,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "tag",
											"source": 4,
											"value": "21"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4071,
											"end": 4075,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4087,
											"end": 4100,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4103,
											"end": 4115,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "66"
										},
										{
											"begin": 4103,
											"end": 4113,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "67"
										},
										{
											"begin": 4103,
											"end": 4115,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4103,
											"end": 4115,
											"name": "tag",
											"source": 4,
											"value": "66"
										},
										{
											"begin": 4103,
											"end": 4115,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4087,
											"end": 4115,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4087,
											"end": 4115,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4125,
											"end": 4156,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "68"
										},
										{
											"begin": 4134,
											"end": 4139,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4141,
											"end": 4148,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 4150,
											"end": 4155,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 4125,
											"end": 4133,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "69"
										},
										{
											"begin": 4125,
											"end": 4156,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4125,
											"end": 4156,
											"name": "tag",
											"source": 4,
											"value": "68"
										},
										{
											"begin": 4125,
											"end": 4156,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4173,
											"end": 4177,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 4166,
											"end": 4177,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4166,
											"end": 4177,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4166,
											"end": 4177,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3998,
											"end": 4184,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "tag",
											"source": 4,
											"value": "25"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2901,
											"end": 2908,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2927,
											"end": 2939,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 2927,
											"end": 2939,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2920,
											"end": 2939,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2920,
											"end": 2939,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2849,
											"end": 2946,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "tag",
											"source": 4,
											"value": "31"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4863,
											"end": 4867,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4879,
											"end": 4894,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4897,
											"end": 4909,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "72"
										},
										{
											"begin": 4897,
											"end": 4907,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "67"
										},
										{
											"begin": 4897,
											"end": 4909,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4897,
											"end": 4909,
											"name": "tag",
											"source": 4,
											"value": "72"
										},
										{
											"begin": 4897,
											"end": 4909,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4879,
											"end": 4909,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4879,
											"end": 4909,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4919,
											"end": 4956,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "73"
										},
										{
											"begin": 4935,
											"end": 4939,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 4941,
											"end": 4948,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4950,
											"end": 4955,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 4919,
											"end": 4934,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "74"
										},
										{
											"begin": 4919,
											"end": 4956,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4919,
											"end": 4956,
											"name": "tag",
											"source": 4,
											"value": "73"
										},
										{
											"begin": 4919,
											"end": 4956,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4966,
											"end": 4992,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "75"
										},
										{
											"begin": 4976,
											"end": 4980,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 4982,
											"end": 4984,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 4986,
											"end": 4991,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 4966,
											"end": 4975,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "76"
										},
										{
											"begin": 4966,
											"end": 4992,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4966,
											"end": 4992,
											"name": "tag",
											"source": 4,
											"value": "75"
										},
										{
											"begin": 4966,
											"end": 4992,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5009,
											"end": 5013,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 5002,
											"end": 5013,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5002,
											"end": 5013,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5002,
											"end": 5013,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4776,
											"end": 5020,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "tag",
											"source": 4,
											"value": "34"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2756,
											"end": 2761,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2780,
											"end": 2782,
											"name": "PUSH",
											"source": 4,
											"value": "12"
										},
										{
											"begin": 2773,
											"end": 2782,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2773,
											"end": 2782,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2707,
											"end": 2789,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "tag",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3069,
											"end": 3076,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3095,
											"end": 3104,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3105,
											"end": 3112,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 3088,
											"end": 3113,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3088,
											"end": 3113,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3004,
											"end": 3120,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "tag",
											"source": 4,
											"value": "43"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2028,
											"end": 2041,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 2060,
											"end": 2067,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 2053,
											"end": 2067,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "tag",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "81"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 2053,
											"end": 2067,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "tag",
											"source": 4,
											"value": "81"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "82"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "83"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "82"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "tag",
											"source": 4,
											"value": "83"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "tag",
											"source": 4,
											"value": "84"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "84"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "tag",
											"source": 4,
											"value": "82"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1981,
											"end": 2074,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 202,
											"end": 278,
											"name": "tag",
											"source": 9,
											"value": "48"
										},
										{
											"begin": 202,
											"end": 278,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 246,
											"end": 270,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "86"
										},
										{
											"begin": 252,
											"end": 262,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 263,
											"end": 269,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 246,
											"end": 251,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "87"
										},
										{
											"begin": 246,
											"end": 270,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 246,
											"end": 270,
											"name": "tag",
											"source": 9,
											"value": "86"
										},
										{
											"begin": 246,
											"end": 270,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 202,
											"end": 278,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 202,
											"end": 278,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "tag",
											"source": 4,
											"value": "51"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3384,
											"end": 3388,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3400,
											"end": 3413,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3416,
											"end": 3428,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "89"
										},
										{
											"begin": 3416,
											"end": 3426,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "67"
										},
										{
											"begin": 3416,
											"end": 3428,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3416,
											"end": 3428,
											"name": "tag",
											"source": 4,
											"value": "89"
										},
										{
											"begin": 3416,
											"end": 3428,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3400,
											"end": 3428,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3400,
											"end": 3428,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3438,
											"end": 3465,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "90"
										},
										{
											"begin": 3448,
											"end": 3453,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3455,
											"end": 3457,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 3459,
											"end": 3464,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 3438,
											"end": 3447,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "76"
										},
										{
											"begin": 3438,
											"end": 3465,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3438,
											"end": 3465,
											"name": "tag",
											"source": 4,
											"value": "90"
										},
										{
											"begin": 3438,
											"end": 3465,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3482,
											"end": 3486,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 3475,
											"end": 3486,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3475,
											"end": 3486,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3475,
											"end": 3486,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3315,
											"end": 3493,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "tag",
											"source": 4,
											"value": "56"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3631,
											"end": 3638,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3657,
											"end": 3668,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3669,
											"end": 3674,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3676,
											"end": 3683,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 3650,
											"end": 3684,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3650,
											"end": 3684,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3551,
											"end": 3691,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 656,
											"end": 752,
											"name": "tag",
											"source": 7,
											"value": "67"
										},
										{
											"begin": 656,
											"end": 752,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 709,
											"end": 716,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 728,
											"end": 745,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 728,
											"end": 745,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 656,
											"end": 752,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 656,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8726,
											"end": 8854,
											"name": "tag",
											"source": 4,
											"value": "69"
										},
										{
											"begin": 8726,
											"end": 8854,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8810,
											"end": 8847,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "94"
										},
										{
											"begin": 8819,
											"end": 8824,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 8826,
											"end": 8833,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 8835,
											"end": 8840,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 8842,
											"end": 8846,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 8810,
											"end": 8818,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "95"
										},
										{
											"begin": 8810,
											"end": 8847,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 8810,
											"end": 8847,
											"name": "tag",
											"source": 4,
											"value": "94"
										},
										{
											"begin": 8810,
											"end": 8847,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8726,
											"end": 8854,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8726,
											"end": 8854,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8726,
											"end": 8854,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8726,
											"end": 8854,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 10415,
											"end": 10892,
											"name": "tag",
											"source": 4,
											"value": "74"
										},
										{
											"begin": 10415,
											"end": 10892,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10514,
											"end": 10538,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10541,
											"end": 10566,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "97"
										},
										{
											"begin": 10551,
											"end": 10556,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 10558,
											"end": 10565,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 10541,
											"end": 10550,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "56"
										},
										{
											"begin": 10541,
											"end": 10566,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 10541,
											"end": 10566,
											"name": "tag",
											"source": 4,
											"value": "97"
										},
										{
											"begin": 10541,
											"end": 10566,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10514,
											"end": 10566,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10514,
											"end": 10566,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10600,
											"end": 10617,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10580,
											"end": 10596,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10580,
											"end": 10617,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 10576,
											"end": 10886,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "98"
										},
										{
											"begin": 10576,
											"end": 10886,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 10656,
											"end": 10661,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10637,
											"end": 10653,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10637,
											"end": 10661,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 10633,
											"end": 10763,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 10633,
											"end": 10763,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "99"
										},
										{
											"begin": 10633,
											"end": 10763,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 10715,
											"end": 10722,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 10724,
											"end": 10740,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10742,
											"end": 10747,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "PUSH",
											"source": 4,
											"value": "FB8F41B200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "101"
										},
										{
											"begin": 10688,
											"end": 10748,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "tag",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 10633,
											"end": 10763,
											"name": "tag",
											"source": 4,
											"value": "99"
										},
										{
											"begin": 10633,
											"end": 10763,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10804,
											"end": 10861,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "102"
										},
										{
											"begin": 10813,
											"end": 10818,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 10820,
											"end": 10827,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 10848,
											"end": 10853,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 10829,
											"end": 10845,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 10829,
											"end": 10853,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 10855,
											"end": 10860,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10804,
											"end": 10812,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "95"
										},
										{
											"begin": 10804,
											"end": 10861,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 10804,
											"end": 10861,
											"name": "tag",
											"source": 4,
											"value": "102"
										},
										{
											"begin": 10804,
											"end": 10861,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10576,
											"end": 10886,
											"name": "tag",
											"source": 4,
											"value": "98"
										},
										{
											"begin": 10576,
											"end": 10886,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10504,
											"end": 10892,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10415,
											"end": 10892,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10415,
											"end": 10892,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10415,
											"end": 10892,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10415,
											"end": 10892,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5393,
											"end": 5693,
											"name": "tag",
											"source": 4,
											"value": "76"
										},
										{
											"begin": 5393,
											"end": 5693,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5492,
											"end": 5493,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5476,
											"end": 5494,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5476,
											"end": 5494,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5476,
											"end": 5480,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 5476,
											"end": 5494,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5476,
											"end": 5494,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5476,
											"end": 5494,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 5472,
											"end": 5558,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "104"
										},
										{
											"begin": 5472,
											"end": 5558,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 5544,
											"end": 5545,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "PUSH",
											"source": 4,
											"value": "96C6FD1E00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "105"
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "106"
										},
										{
											"begin": 5517,
											"end": 5547,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "tag",
											"source": 4,
											"value": "105"
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 5472,
											"end": 5558,
											"name": "tag",
											"source": 4,
											"value": "104"
										},
										{
											"begin": 5472,
											"end": 5558,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5585,
											"end": 5586,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5571,
											"end": 5587,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5571,
											"end": 5587,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5571,
											"end": 5573,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5571,
											"end": 5587,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5571,
											"end": 5587,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5571,
											"end": 5587,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 5567,
											"end": 5653,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "107"
										},
										{
											"begin": 5567,
											"end": 5653,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 5639,
											"end": 5640,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "PUSH",
											"source": 4,
											"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "108"
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "106"
										},
										{
											"begin": 5610,
											"end": 5642,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "tag",
											"source": 4,
											"value": "108"
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 5567,
											"end": 5653,
											"name": "tag",
											"source": 4,
											"value": "107"
										},
										{
											"begin": 5567,
											"end": 5653,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5662,
											"end": 5686,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "109"
										},
										{
											"begin": 5670,
											"end": 5674,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 5676,
											"end": 5678,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 5680,
											"end": 5685,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 5662,
											"end": 5669,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "110"
										},
										{
											"begin": 5662,
											"end": 5686,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5662,
											"end": 5686,
											"name": "tag",
											"source": 4,
											"value": "109"
										},
										{
											"begin": 5662,
											"end": 5686,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5393,
											"end": 5693,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5393,
											"end": 5693,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5393,
											"end": 5693,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5393,
											"end": 5693,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7458,
											"end": 7666,
											"name": "tag",
											"source": 4,
											"value": "87"
										},
										{
											"begin": 7458,
											"end": 7666,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7547,
											"end": 7548,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7528,
											"end": 7549,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7528,
											"end": 7549,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7528,
											"end": 7535,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7528,
											"end": 7549,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7528,
											"end": 7549,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7528,
											"end": 7549,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 7524,
											"end": 7615,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "112"
										},
										{
											"begin": 7524,
											"end": 7615,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 7601,
											"end": 7602,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "PUSH",
											"source": 4,
											"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "113"
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "106"
										},
										{
											"begin": 7572,
											"end": 7604,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "tag",
											"source": 4,
											"value": "113"
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 7524,
											"end": 7615,
											"name": "tag",
											"source": 4,
											"value": "112"
										},
										{
											"begin": 7524,
											"end": 7615,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7624,
											"end": 7659,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "114"
										},
										{
											"begin": 7640,
											"end": 7641,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7644,
											"end": 7651,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 7653,
											"end": 7658,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 7624,
											"end": 7631,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "110"
										},
										{
											"begin": 7624,
											"end": 7659,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7624,
											"end": 7659,
											"name": "tag",
											"source": 4,
											"value": "114"
										},
										{
											"begin": 7624,
											"end": 7659,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7458,
											"end": 7666,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7458,
											"end": 7666,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7458,
											"end": 7666,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 9701,
											"end": 10133,
											"name": "tag",
											"source": 4,
											"value": "95"
										},
										{
											"begin": 9701,
											"end": 10133,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9830,
											"end": 9831,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9813,
											"end": 9832,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9813,
											"end": 9832,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9813,
											"end": 9818,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 9813,
											"end": 9832,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9813,
											"end": 9832,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9813,
											"end": 9832,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 9809,
											"end": 9898,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "116"
										},
										{
											"begin": 9809,
											"end": 9898,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 9884,
											"end": 9885,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "PUSH",
											"source": 4,
											"value": "E602DF0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "117"
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "106"
										},
										{
											"begin": 9855,
											"end": 9887,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "tag",
											"source": 4,
											"value": "117"
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 9809,
											"end": 9898,
											"name": "tag",
											"source": 4,
											"value": "116"
										},
										{
											"begin": 9809,
											"end": 9898,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9930,
											"end": 9931,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9911,
											"end": 9932,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9911,
											"end": 9932,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9911,
											"end": 9918,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 9911,
											"end": 9932,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9911,
											"end": 9932,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9911,
											"end": 9932,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 9907,
											"end": 9997,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "118"
										},
										{
											"begin": 9907,
											"end": 9997,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 9983,
											"end": 9984,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "PUSH",
											"source": 4,
											"value": "94280D6200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "119"
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "106"
										},
										{
											"begin": 9955,
											"end": 9986,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "tag",
											"source": 4,
											"value": "119"
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 9907,
											"end": 9997,
											"name": "tag",
											"source": 4,
											"value": "118"
										},
										{
											"begin": 9907,
											"end": 9997,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10036,
											"end": 10041,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10006,
											"end": 10017,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10018,
											"end": 10023,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10025,
											"end": 10032,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 10006,
											"end": 10041,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10006,
											"end": 10041,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10006,
											"end": 10041,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 10006,
											"end": 10041,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10055,
											"end": 10064,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 10051,
											"end": 10127,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 10051,
											"end": 10127,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "120"
										},
										{
											"begin": 10051,
											"end": 10127,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 10101,
											"end": 10108,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 10094,
											"end": 10099,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "PUSH",
											"source": 4,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 10110,
											"end": 10115,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "121"
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "27"
										},
										{
											"begin": 10085,
											"end": 10116,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "tag",
											"source": 4,
											"value": "121"
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "LOG3",
											"source": 4
										},
										{
											"begin": 10051,
											"end": 10127,
											"name": "tag",
											"source": 4,
											"value": "120"
										},
										{
											"begin": 10051,
											"end": 10127,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9701,
											"end": 10133,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9701,
											"end": 10133,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9701,
											"end": 10133,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9701,
											"end": 10133,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9701,
											"end": 10133,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6008,
											"end": 7115,
											"name": "tag",
											"source": 4,
											"value": "110"
										},
										{
											"begin": 6008,
											"end": 7115,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6113,
											"end": 6114,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6097,
											"end": 6115,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6097,
											"end": 6115,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6097,
											"end": 6101,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 6097,
											"end": 6115,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6097,
											"end": 6115,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6097,
											"end": 6115,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "123"
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 6249,
											"end": 6254,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6233,
											"end": 6245,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 6233,
											"end": 6245,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "124"
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "125"
										},
										{
											"begin": 6233,
											"end": 6254,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "tag",
											"source": 4,
											"value": "124"
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "126"
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "tag",
											"source": 4,
											"value": "123"
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6285,
											"end": 6304,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6307,
											"end": 6316,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6317,
											"end": 6321,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 6285,
											"end": 6322,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6285,
											"end": 6322,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6354,
											"end": 6359,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6340,
											"end": 6351,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6340,
											"end": 6359,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 6336,
											"end": 6451,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 6336,
											"end": 6451,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "127"
										},
										{
											"begin": 6336,
											"end": 6451,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 6411,
											"end": 6415,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 6417,
											"end": 6428,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6430,
											"end": 6435,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "PUSH",
											"source": 4,
											"value": "E450D38C00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "128"
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "101"
										},
										{
											"begin": 6386,
											"end": 6436,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "tag",
											"source": 4,
											"value": "128"
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 6336,
											"end": 6451,
											"name": "tag",
											"source": 4,
											"value": "127"
										},
										{
											"begin": 6336,
											"end": 6451,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6603,
											"end": 6608,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6589,
											"end": 6600,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6589,
											"end": 6608,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 6571,
											"end": 6580,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6581,
											"end": 6585,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 6571,
											"end": 6608,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6571,
											"end": 6608,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6571,
											"end": 6608,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 6571,
											"end": 6608,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6271,
											"end": 6633,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "tag",
											"source": 4,
											"value": "126"
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6661,
											"end": 6662,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6647,
											"end": 6663,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6647,
											"end": 6663,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6647,
											"end": 6649,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6647,
											"end": 6663,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6647,
											"end": 6663,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6647,
											"end": 6663,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "129"
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 6826,
											"end": 6831,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6810,
											"end": 6822,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 6810,
											"end": 6822,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "130"
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "tag",
											"source": 4,
											"value": "129"
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7038,
											"end": 7043,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7021,
											"end": 7030,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7031,
											"end": 7033,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "tag",
											"source": 4,
											"value": "130"
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7098,
											"end": 7100,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7092,
											"end": 7096,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "PUSH",
											"source": 4,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 7102,
											"end": 7107,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "131"
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "27"
										},
										{
											"begin": 7083,
											"end": 7108,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "tag",
											"source": 4,
											"value": "131"
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "LOG3",
											"source": 4
										},
										{
											"begin": 6008,
											"end": 7115,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6008,
											"end": 7115,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6008,
											"end": 7115,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6008,
											"end": 7115,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7,
											"end": 106,
											"name": "tag",
											"source": 11,
											"value": "132"
										},
										{
											"begin": 7,
											"end": 106,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 59,
											"end": 65,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 93,
											"end": 98,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 87,
											"end": 99,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 77,
											"end": 99,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 77,
											"end": 99,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7,
											"end": 106,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 7,
											"end": 106,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7,
											"end": 106,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7,
											"end": 106,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 112,
											"end": 281,
											"name": "tag",
											"source": 11,
											"value": "133"
										},
										{
											"begin": 112,
											"end": 281,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 196,
											"end": 207,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 230,
											"end": 236,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 225,
											"end": 228,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 218,
											"end": 237,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 270,
											"end": 274,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 265,
											"end": 268,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 261,
											"end": 275,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 246,
											"end": 275,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 246,
											"end": 275,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 112,
											"end": 281,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 112,
											"end": 281,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 112,
											"end": 281,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 112,
											"end": 281,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 112,
											"end": 281,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 287,
											"end": 426,
											"name": "tag",
											"source": 11,
											"value": "134"
										},
										{
											"begin": 287,
											"end": 426,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 376,
											"end": 382,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 371,
											"end": 374,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 366,
											"end": 369,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 360,
											"end": 383,
											"name": "MCOPY",
											"source": 11
										},
										{
											"begin": 417,
											"end": 418,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 408,
											"end": 414,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 403,
											"end": 406,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 399,
											"end": 415,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 392,
											"end": 419,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 287,
											"end": 426,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 287,
											"end": 426,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 287,
											"end": 426,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 287,
											"end": 426,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 432,
											"end": 534,
											"name": "tag",
											"source": 11,
											"value": "135"
										},
										{
											"begin": 432,
											"end": 534,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 473,
											"end": 479,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 524,
											"end": 526,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 520,
											"end": 527,
											"name": "NOT",
											"source": 11
										},
										{
											"begin": 515,
											"end": 517,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 508,
											"end": 513,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 504,
											"end": 518,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 500,
											"end": 528,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 490,
											"end": 528,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 490,
											"end": 528,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 432,
											"end": 534,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 432,
											"end": 534,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 432,
											"end": 534,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 432,
											"end": 534,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 540,
											"end": 917,
											"name": "tag",
											"source": 11,
											"value": "136"
										},
										{
											"begin": 540,
											"end": 917,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 628,
											"end": 631,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 656,
											"end": 695,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "161"
										},
										{
											"begin": 689,
											"end": 694,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 656,
											"end": 695,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "132"
										},
										{
											"begin": 656,
											"end": 695,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 656,
											"end": 695,
											"name": "tag",
											"source": 11,
											"value": "161"
										},
										{
											"begin": 656,
											"end": 695,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 711,
											"end": 782,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "162"
										},
										{
											"begin": 775,
											"end": 781,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 770,
											"end": 773,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 711,
											"end": 782,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "133"
										},
										{
											"begin": 711,
											"end": 782,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 711,
											"end": 782,
											"name": "tag",
											"source": 11,
											"value": "162"
										},
										{
											"begin": 711,
											"end": 782,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 704,
											"end": 782,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 704,
											"end": 782,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 791,
											"end": 856,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "163"
										},
										{
											"begin": 849,
											"end": 855,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 844,
											"end": 847,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 837,
											"end": 841,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 830,
											"end": 835,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 826,
											"end": 842,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 791,
											"end": 856,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "134"
										},
										{
											"begin": 791,
											"end": 856,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 791,
											"end": 856,
											"name": "tag",
											"source": 11,
											"value": "163"
										},
										{
											"begin": 791,
											"end": 856,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 881,
											"end": 910,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "164"
										},
										{
											"begin": 903,
											"end": 909,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 881,
											"end": 910,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "135"
										},
										{
											"begin": 881,
											"end": 910,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 881,
											"end": 910,
											"name": "tag",
											"source": 11,
											"value": "164"
										},
										{
											"begin": 881,
											"end": 910,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 876,
											"end": 879,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 872,
											"end": 911,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 865,
											"end": 911,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 865,
											"end": 911,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 632,
											"end": 917,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 540,
											"end": 917,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 540,
											"end": 917,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 540,
											"end": 917,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 540,
											"end": 917,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 540,
											"end": 917,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "tag",
											"source": 11,
											"value": "17"
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1036,
											"end": 1040,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1074,
											"end": 1076,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1063,
											"end": 1072,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1059,
											"end": 1077,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1051,
											"end": 1077,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1051,
											"end": 1077,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1123,
											"end": 1132,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1117,
											"end": 1121,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1113,
											"end": 1133,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 1109,
											"end": 1110,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1098,
											"end": 1107,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 1094,
											"end": 1111,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1087,
											"end": 1134,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1151,
											"end": 1229,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "166"
										},
										{
											"begin": 1224,
											"end": 1228,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1215,
											"end": 1221,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 1151,
											"end": 1229,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "136"
										},
										{
											"begin": 1151,
											"end": 1229,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1151,
											"end": 1229,
											"name": "tag",
											"source": 11,
											"value": "166"
										},
										{
											"begin": 1151,
											"end": 1229,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1143,
											"end": 1229,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1143,
											"end": 1229,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 923,
											"end": 1236,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1323,
											"end": 1440,
											"name": "tag",
											"source": 11,
											"value": "138"
										},
										{
											"begin": 1323,
											"end": 1440,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1432,
											"end": 1433,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1429,
											"end": 1430,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1422,
											"end": 1434,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "tag",
											"source": 11,
											"value": "140"
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1606,
											"end": 1613,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1646,
											"end": 1688,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1639,
											"end": 1644,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1635,
											"end": 1689,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1624,
											"end": 1689,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1624,
											"end": 1689,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1569,
											"end": 1695,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "tag",
											"source": 11,
											"value": "141"
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1738,
											"end": 1745,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1767,
											"end": 1791,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "172"
										},
										{
											"begin": 1785,
											"end": 1790,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1767,
											"end": 1791,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "140"
										},
										{
											"begin": 1767,
											"end": 1791,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1767,
											"end": 1791,
											"name": "tag",
											"source": 11,
											"value": "172"
										},
										{
											"begin": 1767,
											"end": 1791,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1756,
											"end": 1791,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1756,
											"end": 1791,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1701,
											"end": 1797,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1803,
											"end": 1925,
											"name": "tag",
											"source": 11,
											"value": "142"
										},
										{
											"begin": 1803,
											"end": 1925,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1876,
											"end": 1900,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "174"
										},
										{
											"begin": 1894,
											"end": 1899,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1876,
											"end": 1900,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "141"
										},
										{
											"begin": 1876,
											"end": 1900,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1876,
											"end": 1900,
											"name": "tag",
											"source": 11,
											"value": "174"
										},
										{
											"begin": 1876,
											"end": 1900,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1869,
											"end": 1874,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1866,
											"end": 1901,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 1856,
											"end": 1919,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "175"
										},
										{
											"begin": 1856,
											"end": 1919,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1915,
											"end": 1916,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1912,
											"end": 1913,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1905,
											"end": 1917,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 1856,
											"end": 1919,
											"name": "tag",
											"source": 11,
											"value": "175"
										},
										{
											"begin": 1856,
											"end": 1919,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1803,
											"end": 1925,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1803,
											"end": 1925,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "tag",
											"source": 11,
											"value": "143"
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1977,
											"end": 1982,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2015,
											"end": 2021,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2002,
											"end": 2022,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 1993,
											"end": 2022,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1993,
											"end": 2022,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2031,
											"end": 2064,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "177"
										},
										{
											"begin": 2058,
											"end": 2063,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2031,
											"end": 2064,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "142"
										},
										{
											"begin": 2031,
											"end": 2064,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2031,
											"end": 2064,
											"name": "tag",
											"source": 11,
											"value": "177"
										},
										{
											"begin": 2031,
											"end": 2064,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1931,
											"end": 2070,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "tag",
											"source": 11,
											"value": "144"
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2113,
											"end": 2120,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2142,
											"end": 2147,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2131,
											"end": 2147,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2131,
											"end": 2147,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2076,
											"end": 2153,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2159,
											"end": 2281,
											"name": "tag",
											"source": 11,
											"value": "145"
										},
										{
											"begin": 2159,
											"end": 2281,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2232,
											"end": 2256,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "180"
										},
										{
											"begin": 2250,
											"end": 2255,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2232,
											"end": 2256,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "144"
										},
										{
											"begin": 2232,
											"end": 2256,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2232,
											"end": 2256,
											"name": "tag",
											"source": 11,
											"value": "180"
										},
										{
											"begin": 2232,
											"end": 2256,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2225,
											"end": 2230,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2222,
											"end": 2257,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 2212,
											"end": 2275,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "181"
										},
										{
											"begin": 2212,
											"end": 2275,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 2271,
											"end": 2272,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2268,
											"end": 2269,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2261,
											"end": 2273,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 2212,
											"end": 2275,
											"name": "tag",
											"source": 11,
											"value": "181"
										},
										{
											"begin": 2212,
											"end": 2275,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2159,
											"end": 2281,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2159,
											"end": 2281,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "tag",
											"source": 11,
											"value": "146"
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2333,
											"end": 2338,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2371,
											"end": 2377,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2358,
											"end": 2378,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 2349,
											"end": 2378,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2349,
											"end": 2378,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2387,
											"end": 2420,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "183"
										},
										{
											"begin": 2414,
											"end": 2419,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2387,
											"end": 2420,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "145"
										},
										{
											"begin": 2387,
											"end": 2420,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2387,
											"end": 2420,
											"name": "tag",
											"source": 11,
											"value": "183"
										},
										{
											"begin": 2387,
											"end": 2420,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2287,
											"end": 2426,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "tag",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2500,
											"end": 2506,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2508,
											"end": 2514,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2557,
											"end": 2559,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2545,
											"end": 2554,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 2536,
											"end": 2543,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 2532,
											"end": 2555,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 2528,
											"end": 2560,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "185"
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 2563,
											"end": 2642,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "186"
										},
										{
											"begin": 2563,
											"end": 2642,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "138"
										},
										{
											"begin": 2563,
											"end": 2642,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2563,
											"end": 2642,
											"name": "tag",
											"source": 11,
											"value": "186"
										},
										{
											"begin": 2563,
											"end": 2642,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "tag",
											"source": 11,
											"value": "185"
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2683,
											"end": 2684,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2708,
											"end": 2761,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "187"
										},
										{
											"begin": 2753,
											"end": 2760,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 2744,
											"end": 2750,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2733,
											"end": 2742,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 2729,
											"end": 2751,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2708,
											"end": 2761,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "143"
										},
										{
											"begin": 2708,
											"end": 2761,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2708,
											"end": 2761,
											"name": "tag",
											"source": 11,
											"value": "187"
										},
										{
											"begin": 2708,
											"end": 2761,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2698,
											"end": 2761,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 2698,
											"end": 2761,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2654,
											"end": 2771,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2810,
											"end": 2812,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 2836,
											"end": 2889,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "188"
										},
										{
											"begin": 2881,
											"end": 2888,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 2872,
											"end": 2878,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2861,
											"end": 2870,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 2857,
											"end": 2879,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2836,
											"end": 2889,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "146"
										},
										{
											"begin": 2836,
											"end": 2889,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2836,
											"end": 2889,
											"name": "tag",
											"source": 11,
											"value": "188"
										},
										{
											"begin": 2836,
											"end": 2889,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2826,
											"end": 2889,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2826,
											"end": 2889,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2781,
											"end": 2899,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2432,
											"end": 2906,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "tag",
											"source": 11,
											"value": "147"
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2946,
											"end": 2953,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2989,
											"end": 2994,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2982,
											"end": 2995,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 2975,
											"end": 2996,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 2964,
											"end": 2996,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2964,
											"end": 2996,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2912,
											"end": 3002,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3008,
											"end": 3117,
											"name": "tag",
											"source": 11,
											"value": "148"
										},
										{
											"begin": 3008,
											"end": 3117,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3089,
											"end": 3110,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "191"
										},
										{
											"begin": 3104,
											"end": 3109,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3089,
											"end": 3110,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "147"
										},
										{
											"begin": 3089,
											"end": 3110,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3089,
											"end": 3110,
											"name": "tag",
											"source": 11,
											"value": "191"
										},
										{
											"begin": 3089,
											"end": 3110,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3084,
											"end": 3087,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3077,
											"end": 3111,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3008,
											"end": 3117,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3008,
											"end": 3117,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3008,
											"end": 3117,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "tag",
											"source": 11,
											"value": "23"
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3210,
											"end": 3214,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3248,
											"end": 3250,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 3237,
											"end": 3246,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3233,
											"end": 3251,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3225,
											"end": 3251,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3225,
											"end": 3251,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3261,
											"end": 3326,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "193"
										},
										{
											"begin": 3323,
											"end": 3324,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3312,
											"end": 3321,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 3308,
											"end": 3325,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3299,
											"end": 3305,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 3261,
											"end": 3326,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "148"
										},
										{
											"begin": 3261,
											"end": 3326,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3261,
											"end": 3326,
											"name": "tag",
											"source": 11,
											"value": "193"
										},
										{
											"begin": 3261,
											"end": 3326,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3123,
											"end": 3333,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3339,
											"end": 3457,
											"name": "tag",
											"source": 11,
											"value": "149"
										},
										{
											"begin": 3339,
											"end": 3457,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3426,
											"end": 3450,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "195"
										},
										{
											"begin": 3444,
											"end": 3449,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3426,
											"end": 3450,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "144"
										},
										{
											"begin": 3426,
											"end": 3450,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3426,
											"end": 3450,
											"name": "tag",
											"source": 11,
											"value": "195"
										},
										{
											"begin": 3426,
											"end": 3450,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3421,
											"end": 3424,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3414,
											"end": 3451,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3339,
											"end": 3457,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3339,
											"end": 3457,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3339,
											"end": 3457,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "tag",
											"source": 11,
											"value": "27"
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3556,
											"end": 3560,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3594,
											"end": 3596,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 3583,
											"end": 3592,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3579,
											"end": 3597,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3571,
											"end": 3597,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3571,
											"end": 3597,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3607,
											"end": 3678,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "197"
										},
										{
											"begin": 3675,
											"end": 3676,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3664,
											"end": 3673,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 3660,
											"end": 3677,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3651,
											"end": 3657,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 3607,
											"end": 3678,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "149"
										},
										{
											"begin": 3607,
											"end": 3678,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3607,
											"end": 3678,
											"name": "tag",
											"source": 11,
											"value": "197"
										},
										{
											"begin": 3607,
											"end": 3678,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3463,
											"end": 3685,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "tag",
											"source": 11,
											"value": "30"
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3768,
											"end": 3774,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3776,
											"end": 3782,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3784,
											"end": 3790,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3833,
											"end": 3835,
											"name": "PUSH",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 3821,
											"end": 3830,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 3812,
											"end": 3819,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 3808,
											"end": 3831,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 3804,
											"end": 3836,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 3801,
											"end": 3920,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 3801,
											"end": 3920,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "199"
										},
										{
											"begin": 3801,
											"end": 3920,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 3839,
											"end": 3918,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "200"
										},
										{
											"begin": 3839,
											"end": 3918,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "138"
										},
										{
											"begin": 3839,
											"end": 3918,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3839,
											"end": 3918,
											"name": "tag",
											"source": 11,
											"value": "200"
										},
										{
											"begin": 3839,
											"end": 3918,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3801,
											"end": 3920,
											"name": "tag",
											"source": 11,
											"value": "199"
										},
										{
											"begin": 3801,
											"end": 3920,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3959,
											"end": 3960,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3984,
											"end": 4037,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "201"
										},
										{
											"begin": 4029,
											"end": 4036,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 4020,
											"end": 4026,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4009,
											"end": 4018,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 4005,
											"end": 4027,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3984,
											"end": 4037,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "143"
										},
										{
											"begin": 3984,
											"end": 4037,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3984,
											"end": 4037,
											"name": "tag",
											"source": 11,
											"value": "201"
										},
										{
											"begin": 3984,
											"end": 4037,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3974,
											"end": 4037,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 3974,
											"end": 4037,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3930,
											"end": 4047,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4086,
											"end": 4088,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 4112,
											"end": 4165,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "202"
										},
										{
											"begin": 4157,
											"end": 4164,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 4148,
											"end": 4154,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4137,
											"end": 4146,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 4133,
											"end": 4155,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4112,
											"end": 4165,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "143"
										},
										{
											"begin": 4112,
											"end": 4165,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4112,
											"end": 4165,
											"name": "tag",
											"source": 11,
											"value": "202"
										},
										{
											"begin": 4112,
											"end": 4165,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4102,
											"end": 4165,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 4102,
											"end": 4165,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4057,
											"end": 4175,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4214,
											"end": 4216,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 4240,
											"end": 4293,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "203"
										},
										{
											"begin": 4285,
											"end": 4292,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 4276,
											"end": 4282,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4265,
											"end": 4274,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 4261,
											"end": 4283,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4240,
											"end": 4293,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "146"
										},
										{
											"begin": 4240,
											"end": 4293,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4240,
											"end": 4293,
											"name": "tag",
											"source": 11,
											"value": "203"
										},
										{
											"begin": 4240,
											"end": 4293,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4230,
											"end": 4293,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4230,
											"end": 4293,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4185,
											"end": 4303,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 3691,
											"end": 4310,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4316,
											"end": 4402,
											"name": "tag",
											"source": 11,
											"value": "150"
										},
										{
											"begin": 4316,
											"end": 4402,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4351,
											"end": 4358,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4391,
											"end": 4395,
											"name": "PUSH",
											"source": 11,
											"value": "FF"
										},
										{
											"begin": 4384,
											"end": 4389,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4380,
											"end": 4396,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 4369,
											"end": 4396,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4369,
											"end": 4396,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4316,
											"end": 4402,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4316,
											"end": 4402,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4316,
											"end": 4402,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4316,
											"end": 4402,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4408,
											"end": 4520,
											"name": "tag",
											"source": 11,
											"value": "151"
										},
										{
											"begin": 4408,
											"end": 4520,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4491,
											"end": 4513,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "206"
										},
										{
											"begin": 4507,
											"end": 4512,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4491,
											"end": 4513,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "150"
										},
										{
											"begin": 4491,
											"end": 4513,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4491,
											"end": 4513,
											"name": "tag",
											"source": 11,
											"value": "206"
										},
										{
											"begin": 4491,
											"end": 4513,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4486,
											"end": 4489,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4479,
											"end": 4514,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 4408,
											"end": 4520,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4408,
											"end": 4520,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4408,
											"end": 4520,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4526,
											"end": 4740,
											"name": "tag",
											"source": 11,
											"value": "36"
										},
										{
											"begin": 4526,
											"end": 4740,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4615,
											"end": 4619,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4653,
											"end": 4655,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 4642,
											"end": 4651,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4638,
											"end": 4656,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4630,
											"end": 4656,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4630,
											"end": 4656,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4666,
											"end": 4733,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "208"
										},
										{
											"begin": 4730,
											"end": 4731,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4719,
											"end": 4728,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 4715,
											"end": 4732,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4706,
											"end": 4712,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 4666,
											"end": 4733,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "151"
										},
										{
											"begin": 4666,
											"end": 4733,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4666,
											"end": 4733,
											"name": "tag",
											"source": 11,
											"value": "208"
										},
										{
											"begin": 4666,
											"end": 4733,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4526,
											"end": 4740,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 4526,
											"end": 4740,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4526,
											"end": 4740,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4526,
											"end": 4740,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4526,
											"end": 4740,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4746,
											"end": 5075,
											"name": "tag",
											"source": 11,
											"value": "39"
										},
										{
											"begin": 4746,
											"end": 5075,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4805,
											"end": 4811,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4854,
											"end": 4856,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 4842,
											"end": 4851,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4833,
											"end": 4840,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 4829,
											"end": 4852,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 4825,
											"end": 4857,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 4822,
											"end": 4941,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 4822,
											"end": 4941,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "210"
										},
										{
											"begin": 4822,
											"end": 4941,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 4860,
											"end": 4939,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "211"
										},
										{
											"begin": 4860,
											"end": 4939,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "138"
										},
										{
											"begin": 4860,
											"end": 4939,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4860,
											"end": 4939,
											"name": "tag",
											"source": 11,
											"value": "211"
										},
										{
											"begin": 4860,
											"end": 4939,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4822,
											"end": 4941,
											"name": "tag",
											"source": 11,
											"value": "210"
										},
										{
											"begin": 4822,
											"end": 4941,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4980,
											"end": 4981,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5005,
											"end": 5058,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "212"
										},
										{
											"begin": 5050,
											"end": 5057,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 5041,
											"end": 5047,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5030,
											"end": 5039,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 5026,
											"end": 5048,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5005,
											"end": 5058,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "143"
										},
										{
											"begin": 5005,
											"end": 5058,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5005,
											"end": 5058,
											"name": "tag",
											"source": 11,
											"value": "212"
										},
										{
											"begin": 5005,
											"end": 5058,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4995,
											"end": 5058,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4995,
											"end": 5058,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4951,
											"end": 5068,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4746,
											"end": 5075,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 4746,
											"end": 5075,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4746,
											"end": 5075,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4746,
											"end": 5075,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4746,
											"end": 5075,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5081,
											"end": 5410,
											"name": "tag",
											"source": 11,
											"value": "47"
										},
										{
											"begin": 5081,
											"end": 5410,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5140,
											"end": 5146,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5189,
											"end": 5191,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 5177,
											"end": 5186,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5168,
											"end": 5175,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 5164,
											"end": 5187,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 5160,
											"end": 5192,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 5157,
											"end": 5276,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 5157,
											"end": 5276,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "214"
										},
										{
											"begin": 5157,
											"end": 5276,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 5195,
											"end": 5274,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "215"
										},
										{
											"begin": 5195,
											"end": 5274,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "138"
										},
										{
											"begin": 5195,
											"end": 5274,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5195,
											"end": 5274,
											"name": "tag",
											"source": 11,
											"value": "215"
										},
										{
											"begin": 5195,
											"end": 5274,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5157,
											"end": 5276,
											"name": "tag",
											"source": 11,
											"value": "214"
										},
										{
											"begin": 5157,
											"end": 5276,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5315,
											"end": 5316,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5340,
											"end": 5393,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "216"
										},
										{
											"begin": 5385,
											"end": 5392,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 5376,
											"end": 5382,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5365,
											"end": 5374,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 5361,
											"end": 5383,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5340,
											"end": 5393,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "146"
										},
										{
											"begin": 5340,
											"end": 5393,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5340,
											"end": 5393,
											"name": "tag",
											"source": 11,
											"value": "216"
										},
										{
											"begin": 5340,
											"end": 5393,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5330,
											"end": 5393,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5330,
											"end": 5393,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5286,
											"end": 5403,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5081,
											"end": 5410,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 5081,
											"end": 5410,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5081,
											"end": 5410,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5081,
											"end": 5410,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5081,
											"end": 5410,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5416,
											"end": 5890,
											"name": "tag",
											"source": 11,
											"value": "55"
										},
										{
											"begin": 5416,
											"end": 5890,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5484,
											"end": 5490,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5492,
											"end": 5498,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 5541,
											"end": 5543,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 5529,
											"end": 5538,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 5520,
											"end": 5527,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 5516,
											"end": 5539,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 5512,
											"end": 5544,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 5509,
											"end": 5628,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 5509,
											"end": 5628,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "218"
										},
										{
											"begin": 5509,
											"end": 5628,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 5547,
											"end": 5626,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "219"
										},
										{
											"begin": 5547,
											"end": 5626,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "138"
										},
										{
											"begin": 5547,
											"end": 5626,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5547,
											"end": 5626,
											"name": "tag",
											"source": 11,
											"value": "219"
										},
										{
											"begin": 5547,
											"end": 5626,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5509,
											"end": 5628,
											"name": "tag",
											"source": 11,
											"value": "218"
										},
										{
											"begin": 5509,
											"end": 5628,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5667,
											"end": 5668,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5692,
											"end": 5745,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "220"
										},
										{
											"begin": 5737,
											"end": 5744,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 5728,
											"end": 5734,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5717,
											"end": 5726,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 5713,
											"end": 5735,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5692,
											"end": 5745,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "143"
										},
										{
											"begin": 5692,
											"end": 5745,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5692,
											"end": 5745,
											"name": "tag",
											"source": 11,
											"value": "220"
										},
										{
											"begin": 5692,
											"end": 5745,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5682,
											"end": 5745,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 5682,
											"end": 5745,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5638,
											"end": 5755,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5794,
											"end": 5796,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 5820,
											"end": 5873,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "221"
										},
										{
											"begin": 5865,
											"end": 5872,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 5856,
											"end": 5862,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5845,
											"end": 5854,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 5841,
											"end": 5863,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5820,
											"end": 5873,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "143"
										},
										{
											"begin": 5820,
											"end": 5873,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5820,
											"end": 5873,
											"name": "tag",
											"source": 11,
											"value": "221"
										},
										{
											"begin": 5820,
											"end": 5873,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5810,
											"end": 5873,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5810,
											"end": 5873,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5765,
											"end": 5883,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5416,
											"end": 5890,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 5416,
											"end": 5890,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5416,
											"end": 5890,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 5416,
											"end": 5890,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5416,
											"end": 5890,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5416,
											"end": 5890,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5896,
											"end": 6076,
											"name": "tag",
											"source": 11,
											"value": "152"
										},
										{
											"begin": 5896,
											"end": 6076,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5944,
											"end": 6021,
											"name": "PUSH",
											"source": 11,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5941,
											"end": 5942,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5934,
											"end": 6022,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 6041,
											"end": 6045,
											"name": "PUSH",
											"source": 11,
											"value": "22"
										},
										{
											"begin": 6038,
											"end": 6039,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 6031,
											"end": 6046,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 6065,
											"end": 6069,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 6062,
											"end": 6063,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6055,
											"end": 6070,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 6082,
											"end": 6402,
											"name": "tag",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 6082,
											"end": 6402,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6126,
											"end": 6132,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6163,
											"end": 6164,
											"name": "PUSH",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 6157,
											"end": 6161,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 6153,
											"end": 6165,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 6143,
											"end": 6165,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6143,
											"end": 6165,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6210,
											"end": 6211,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 6204,
											"end": 6208,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 6200,
											"end": 6212,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 6231,
											"end": 6249,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 6221,
											"end": 6302,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "224"
										},
										{
											"begin": 6221,
											"end": 6302,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 6287,
											"end": 6291,
											"name": "PUSH",
											"source": 11,
											"value": "7F"
										},
										{
											"begin": 6279,
											"end": 6285,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 6275,
											"end": 6292,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 6265,
											"end": 6292,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 6265,
											"end": 6292,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6221,
											"end": 6302,
											"name": "tag",
											"source": 11,
											"value": "224"
										},
										{
											"begin": 6221,
											"end": 6302,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6349,
											"end": 6351,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 6341,
											"end": 6347,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 6338,
											"end": 6352,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 6318,
											"end": 6336,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6315,
											"end": 6353,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 6312,
											"end": 6396,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "225"
										},
										{
											"begin": 6312,
											"end": 6396,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 6368,
											"end": 6386,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "226"
										},
										{
											"begin": 6368,
											"end": 6386,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "152"
										},
										{
											"begin": 6368,
											"end": 6386,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6368,
											"end": 6386,
											"name": "tag",
											"source": 11,
											"value": "226"
										},
										{
											"begin": 6368,
											"end": 6386,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6312,
											"end": 6396,
											"name": "tag",
											"source": 11,
											"value": "225"
										},
										{
											"begin": 6312,
											"end": 6396,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6133,
											"end": 6402,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6082,
											"end": 6402,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 6082,
											"end": 6402,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6082,
											"end": 6402,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6082,
											"end": 6402,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6408,
											"end": 6526,
											"name": "tag",
											"source": 11,
											"value": "153"
										},
										{
											"begin": 6408,
											"end": 6526,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6495,
											"end": 6519,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "228"
										},
										{
											"begin": 6513,
											"end": 6518,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6495,
											"end": 6519,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "141"
										},
										{
											"begin": 6495,
											"end": 6519,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6495,
											"end": 6519,
											"name": "tag",
											"source": 11,
											"value": "228"
										},
										{
											"begin": 6495,
											"end": 6519,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6490,
											"end": 6493,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 6483,
											"end": 6520,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 6408,
											"end": 6526,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6408,
											"end": 6526,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6408,
											"end": 6526,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6532,
											"end": 6974,
											"name": "tag",
											"source": 11,
											"value": "101"
										},
										{
											"begin": 6532,
											"end": 6974,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6681,
											"end": 6685,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6719,
											"end": 6721,
											"name": "PUSH",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 6708,
											"end": 6717,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 6704,
											"end": 6722,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6696,
											"end": 6722,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6696,
											"end": 6722,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6732,
											"end": 6803,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "230"
										},
										{
											"begin": 6800,
											"end": 6801,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6789,
											"end": 6798,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 6785,
											"end": 6802,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6776,
											"end": 6782,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 6732,
											"end": 6803,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "153"
										},
										{
											"begin": 6732,
											"end": 6803,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6732,
											"end": 6803,
											"name": "tag",
											"source": 11,
											"value": "230"
										},
										{
											"begin": 6732,
											"end": 6803,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6813,
											"end": 6885,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "231"
										},
										{
											"begin": 6881,
											"end": 6883,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 6870,
											"end": 6879,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 6866,
											"end": 6884,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6857,
											"end": 6863,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 6813,
											"end": 6885,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "149"
										},
										{
											"begin": 6813,
											"end": 6885,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6813,
											"end": 6885,
											"name": "tag",
											"source": 11,
											"value": "231"
										},
										{
											"begin": 6813,
											"end": 6885,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6895,
											"end": 6967,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "232"
										},
										{
											"begin": 6963,
											"end": 6965,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 6952,
											"end": 6961,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 6948,
											"end": 6966,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6939,
											"end": 6945,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 6895,
											"end": 6967,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "149"
										},
										{
											"begin": 6895,
											"end": 6967,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6895,
											"end": 6967,
											"name": "tag",
											"source": 11,
											"value": "232"
										},
										{
											"begin": 6895,
											"end": 6967,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6532,
											"end": 6974,
											"name": "SWAP5",
											"source": 11
										},
										{
											"begin": 6532,
											"end": 6974,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 6532,
											"end": 6974,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6532,
											"end": 6974,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6532,
											"end": 6974,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6532,
											"end": 6974,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6532,
											"end": 6974,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6980,
											"end": 7202,
											"name": "tag",
											"source": 11,
											"value": "106"
										},
										{
											"begin": 6980,
											"end": 7202,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7073,
											"end": 7077,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 7111,
											"end": 7113,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 7100,
											"end": 7109,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 7096,
											"end": 7114,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 7088,
											"end": 7114,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7088,
											"end": 7114,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7124,
											"end": 7195,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "234"
										},
										{
											"begin": 7192,
											"end": 7193,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 7181,
											"end": 7190,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 7177,
											"end": 7194,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 7168,
											"end": 7174,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 7124,
											"end": 7195,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "153"
										},
										{
											"begin": 7124,
											"end": 7195,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7124,
											"end": 7195,
											"name": "tag",
											"source": 11,
											"value": "234"
										},
										{
											"begin": 7124,
											"end": 7195,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6980,
											"end": 7202,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 6980,
											"end": 7202,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 6980,
											"end": 7202,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6980,
											"end": 7202,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6980,
											"end": 7202,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7208,
											"end": 7388,
											"name": "tag",
											"source": 11,
											"value": "154"
										},
										{
											"begin": 7208,
											"end": 7388,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7256,
											"end": 7333,
											"name": "PUSH",
											"source": 11,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7253,
											"end": 7254,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 7246,
											"end": 7334,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 7353,
											"end": 7357,
											"name": "PUSH",
											"source": 11,
											"value": "11"
										},
										{
											"begin": 7350,
											"end": 7351,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 7343,
											"end": 7358,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 7377,
											"end": 7381,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 7374,
											"end": 7375,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 7367,
											"end": 7382,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 7394,
											"end": 7585,
											"name": "tag",
											"source": 11,
											"value": "125"
										},
										{
											"begin": 7394,
											"end": 7585,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7434,
											"end": 7437,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 7453,
											"end": 7473,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "237"
										},
										{
											"begin": 7471,
											"end": 7472,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 7453,
											"end": 7473,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "144"
										},
										{
											"begin": 7453,
											"end": 7473,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7453,
											"end": 7473,
											"name": "tag",
											"source": 11,
											"value": "237"
										},
										{
											"begin": 7453,
											"end": 7473,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7448,
											"end": 7473,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 7448,
											"end": 7473,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7487,
											"end": 7507,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "238"
										},
										{
											"begin": 7505,
											"end": 7506,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 7487,
											"end": 7507,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "144"
										},
										{
											"begin": 7487,
											"end": 7507,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7487,
											"end": 7507,
											"name": "tag",
											"source": 11,
											"value": "238"
										},
										{
											"begin": 7487,
											"end": 7507,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7482,
											"end": 7507,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 7482,
											"end": 7507,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7530,
											"end": 7531,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 7527,
											"end": 7528,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 7523,
											"end": 7532,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 7516,
											"end": 7532,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7516,
											"end": 7532,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7551,
											"end": 7554,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 7548,
											"end": 7549,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 7545,
											"end": 7555,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 7542,
											"end": 7578,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 7542,
											"end": 7578,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "239"
										},
										{
											"begin": 7542,
											"end": 7578,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 7558,
											"end": 7576,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "240"
										},
										{
											"begin": 7558,
											"end": 7576,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "154"
										},
										{
											"begin": 7558,
											"end": 7576,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7558,
											"end": 7576,
											"name": "tag",
											"source": 11,
											"value": "240"
										},
										{
											"begin": 7558,
											"end": 7576,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7542,
											"end": 7578,
											"name": "tag",
											"source": 11,
											"value": "239"
										},
										{
											"begin": 7542,
											"end": 7578,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7394,
											"end": 7585,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 7394,
											"end": 7585,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 7394,
											"end": 7585,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7394,
											"end": 7585,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7394,
											"end": 7585,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
								"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"contracts/RewardToken.sol",
								"contracts/StakeToken.sol",
								"contracts/StakingUpgrade.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"mint(uint256)": "a0712d68",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/StakeToken.sol\":\"StakeToken\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xbf61ab2ae1d575a17ea58fbb99ca232baddcc4e0eeea180e84cbc74b0c348b31\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4e0968705bad99747a8e5288aa008678c2be2f471f919dce3925a3cc4f1dee09\",\"dweb:/ipfs/QmbAFnCQfo4tw6ssfQSjhA5LzwHWNNryXN8bX7ty8jiqqn\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"contracts/StakeToken.sol\":{\"keccak256\":\"0x80faa1ce7d6e7ebd7464c1c16a1cf10e5bf99a0c5aac8bf27dc835b212c79cdf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://283c65360c789447e66d27cfb7a3cd07634abe28439a4c279314f803411f74a7\",\"dweb:/ipfs/QmcuxeG2WtK3V8UqpWgxNWrLorYUDYZ6dLc9GByrHjLZcu\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 654,
								"contract": "contracts/StakeToken.sol:StakeToken",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 660,
								"contract": "contracts/StakeToken.sol:StakeToken",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 662,
								"contract": "contracts/StakeToken.sol:StakeToken",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 664,
								"contract": "contracts/StakeToken.sol:StakeToken",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 666,
								"contract": "contracts/StakeToken.sol:StakeToken",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/StakingUpgrade.sol": {
				"StakingUpgrade": {
					"abi": [
						{
							"inputs": [],
							"name": "InvalidInitialization",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotInitializing",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint64",
									"name": "version",
									"type": "uint64"
								}
							],
							"name": "Initialized",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "RewardsClaimed",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "Staked",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "Withdraw",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "calculateTotalRewards",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "claimRewards",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "rewardToken",
							"outputs": [
								{
									"internalType": "contract RewardToken",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "stake",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "stakeToken",
							"outputs": [
								{
									"internalType": "contract StakeToken",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "userRewards",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "userStaked",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "withdraw",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"InvalidInitialization()": [
								{
									"details": "The contract is already initialized."
								}
							],
							"NotInitializing()": [
								{
									"details": "The contract is not initializing."
								}
							],
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"events": {
							"Initialized(uint64)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							}
						},
						"kind": "dev",
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/StakingUpgrade.sol\":272:3486  contract StakingUpgrade is Initializable,OwnableUpgradeable{... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/StakingUpgrade.sol\":272:3486  contract StakingUpgrade is Initializable,OwnableUpgradeable{... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x8da5cb5b\n      gt\n      tag_14\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_8\n      jumpi\n      dup1\n      0xa694fc3a\n      eq\n      tag_9\n      jumpi\n      dup1\n      0xacc3a939\n      eq\n      tag_10\n      jumpi\n      dup1\n      0xba5a5319\n      eq\n      tag_11\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xf7c618c1\n      eq\n      tag_13\n      jumpi\n      jump(tag_2)\n    tag_14:\n      dup1\n      0x0660f1e8\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x2e1a7d4d\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x372500ab\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x51ed6a30\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/StakingUpgrade.sol\":1156:1197  mapping(address=>uint) public userRewards */\n    tag_3:\n      tag_15\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_16\n      swap2\n      swap1\n      tag_17\n      jump\t// in\n    tag_16:\n      tag_18\n      jump\t// in\n    tag_15:\n      mload(0x40)\n      tag_19\n      swap2\n      swap1\n      tag_20\n      jump\t// in\n    tag_19:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/StakingUpgrade.sol\":2230:2627  function withdraw(uint amount) public{... */\n    tag_4:\n      tag_21\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_22\n      swap2\n      swap1\n      tag_23\n      jump\t// in\n    tag_22:\n      tag_24\n      jump\t// in\n    tag_21:\n      stop\n        /* \"contracts/StakingUpgrade.sol\":3165:3483  function claimRewards() public{... */\n    tag_5:\n      tag_25\n      tag_26\n      jump\t// in\n    tag_25:\n      stop\n        /* \"contracts/StakingUpgrade.sol\":338:366  StakeToken public stakeToken */\n    tag_6:\n      tag_27\n      tag_28\n      jump\t// in\n    tag_27:\n      mload(0x40)\n      tag_29\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_29:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3155:3256  function renounceOwnership() public virtual onlyOwner {... */\n    tag_7:\n      tag_31\n      tag_32\n      jump\t// in\n    tag_31:\n      stop\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2441:2585  function owner() public view virtual returns (address) {... */\n    tag_8:\n      tag_33\n      tag_34\n      jump\t// in\n    tag_33:\n      mload(0x40)\n      tag_35\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_35:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/StakingUpgrade.sol\":1448:2183  function stake(uint amount) public{... */\n    tag_9:\n      tag_37\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_38\n      swap2\n      swap1\n      tag_23\n      jump\t// in\n    tag_38:\n      tag_39\n      jump\t// in\n    tag_37:\n      stop\n        /* \"contracts/StakingUpgrade.sol\":1109:1149  mapping(address=>uint) public userStaked */\n    tag_10:\n      tag_40\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_41\n      swap2\n      swap1\n      tag_17\n      jump\t// in\n    tag_41:\n      tag_42\n      jump\t// in\n    tag_40:\n      mload(0x40)\n      tag_43\n      swap2\n      swap1\n      tag_20\n      jump\t// in\n    tag_43:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/StakingUpgrade.sol\":2724:3118  function calculateTotalRewards() public{... */\n    tag_11:\n      tag_44\n      tag_45\n      jump\t// in\n    tag_44:\n      stop\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3405:3620  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_12:\n      tag_46\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_47\n      swap2\n      swap1\n      tag_17\n      jump\t// in\n    tag_47:\n      tag_48\n      jump\t// in\n    tag_46:\n      stop\n        /* \"contracts/StakingUpgrade.sol\":373:403  RewardToken public rewardToken */\n    tag_13:\n      tag_49\n      tag_50\n      jump\t// in\n    tag_49:\n      mload(0x40)\n      tag_51\n      swap2\n      swap1\n      tag_52\n      jump\t// in\n    tag_51:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/StakingUpgrade.sol\":1156:1197  mapping(address=>uint) public userRewards */\n    tag_18:\n      mstore(0x20, 0x04)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"contracts/StakingUpgrade.sol\":2230:2627  function withdraw(uint amount) public{... */\n    tag_24:\n        /* \"contracts/StakingUpgrade.sol\":2309:2310  0 */\n      0x00\n        /* \"contracts/StakingUpgrade.sol\":2286:2296  userStaked */\n      0x03\n        /* \"contracts/StakingUpgrade.sol\":2286:2308  userStaked[msg.sender] */\n      0x00\n        /* \"contracts/StakingUpgrade.sol\":2297:2307  msg.sender */\n      caller\n        /* \"contracts/StakingUpgrade.sol\":2286:2308  userStaked[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/StakingUpgrade.sol\":2286:2310  userStaked[msg.sender]>0 */\n      gt\n        /* \"contracts/StakingUpgrade.sol\":2278:2341  require(userStaked[msg.sender]>0,\"Insufficient staked balance\") */\n      tag_54\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_55\n      swap1\n      tag_56\n      jump\t// in\n    tag_55:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_54:\n        /* \"contracts/StakingUpgrade.sol\":2352:2375  calculateTotalRewards() */\n      tag_57\n        /* \"contracts/StakingUpgrade.sol\":2352:2373  calculateTotalRewards */\n      tag_45\n        /* \"contracts/StakingUpgrade.sol\":2352:2375  calculateTotalRewards() */\n      jump\t// in\n    tag_57:\n        /* \"contracts/StakingUpgrade.sol\":2432:2438  amount */\n      dup1\n        /* \"contracts/StakingUpgrade.sol\":2409:2419  userStaked */\n      0x03\n        /* \"contracts/StakingUpgrade.sol\":2409:2431  userStaked[msg.sender] */\n      0x00\n        /* \"contracts/StakingUpgrade.sol\":2420:2430  msg.sender */\n      caller\n        /* \"contracts/StakingUpgrade.sol\":2409:2431  userStaked[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/StakingUpgrade.sol\":2409:2438  userStaked[msg.sender]-amount */\n      tag_58\n      swap2\n      swap1\n      tag_59\n      jump\t// in\n    tag_58:\n        /* \"contracts/StakingUpgrade.sol\":2386:2396  userStaked */\n      0x03\n        /* \"contracts/StakingUpgrade.sol\":2386:2408  userStaked[msg.sender] */\n      0x00\n        /* \"contracts/StakingUpgrade.sol\":2397:2407  msg.sender */\n      caller\n        /* \"contracts/StakingUpgrade.sol\":2386:2408  userStaked[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/StakingUpgrade.sol\":2386:2438  userStaked[msg.sender]=userStaked[msg.sender]-amount */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/StakingUpgrade.sol\":2449:2459  stakeToken */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/StakingUpgrade.sol\":2449:2468  stakeToken.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb\n        /* \"contracts/StakingUpgrade.sol\":2469:2479  msg.sender */\n      caller\n        /* \"contracts/StakingUpgrade.sol\":2480:2486  amount */\n      dup4\n        /* \"contracts/StakingUpgrade.sol\":2449:2487  stakeToken.transfer(msg.sender,amount) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_60\n      swap3\n      swap2\n      swap1\n      tag_61\n      jump\t// in\n    tag_60:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_63\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_63:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_64\n      swap2\n      swap1\n      tag_65\n      jump\t// in\n    tag_64:\n      pop\n        /* \"contracts/StakingUpgrade.sol\":2514:2529  block.timestamp */\n      timestamp\n        /* \"contracts/StakingUpgrade.sol\":2498:2513  lastUpdatedTime */\n      0x02\n        /* \"contracts/StakingUpgrade.sol\":2498:2529  lastUpdatedTime=block.timestamp */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/StakingUpgrade.sol\":2601:2611  msg.sender */\n      caller\n        /* \"contracts/StakingUpgrade.sol\":2592:2619  Withdraw(msg.sender,amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x884edad9ce6fa2440d8a54cc123490eb96d2768479d49ff9c7366125a9424364\n        /* \"contracts/StakingUpgrade.sol\":2612:2618  amount */\n      dup3\n        /* \"contracts/StakingUpgrade.sol\":2592:2619  Withdraw(msg.sender,amount) */\n      mload(0x40)\n      tag_66\n      swap2\n      swap1\n      tag_20\n      jump\t// in\n    tag_66:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/StakingUpgrade.sol\":2230:2627  function withdraw(uint amount) public{... */\n      pop\n      jump\t// out\n        /* \"contracts/StakingUpgrade.sol\":3165:3483  function claimRewards() public{... */\n    tag_26:\n        /* \"contracts/StakingUpgrade.sol\":3238:3239  0 */\n      0x00\n        /* \"contracts/StakingUpgrade.sol\":3214:3225  userRewards */\n      0x04\n        /* \"contracts/StakingUpgrade.sol\":3214:3237  userRewards[msg.sender] */\n      0x00\n        /* \"contracts/StakingUpgrade.sol\":3226:3236  msg.sender */\n      caller\n        /* \"contracts/StakingUpgrade.sol\":3214:3237  userRewards[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/StakingUpgrade.sol\":3214:3239  userRewards[msg.sender]>0 */\n      gt\n        /* \"contracts/StakingUpgrade.sol\":3206:3262  require(userRewards[msg.sender]>0,\"No rewards to claim\") */\n      tag_68\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_69\n      swap1\n      tag_70\n      jump\t// in\n    tag_69:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_68:\n        /* \"contracts/StakingUpgrade.sol\":3273:3284  rewardToken */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/StakingUpgrade.sol\":3273:3293  rewardToken.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb\n        /* \"contracts/StakingUpgrade.sol\":3294:3304  msg.sender */\n      caller\n        /* \"contracts/StakingUpgrade.sol\":3305:3316  userRewards */\n      0x04\n        /* \"contracts/StakingUpgrade.sol\":3305:3328  userRewards[msg.sender] */\n      0x00\n        /* \"contracts/StakingUpgrade.sol\":3317:3327  msg.sender */\n      caller\n        /* \"contracts/StakingUpgrade.sol\":3305:3328  userRewards[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/StakingUpgrade.sol\":3273:3329  rewardToken.transfer(msg.sender,userRewards[msg.sender]) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_71\n      swap3\n      swap2\n      swap1\n      tag_61\n      jump\t// in\n    tag_71:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_73\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_73:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_74\n      swap2\n      swap1\n      tag_65\n      jump\t// in\n    tag_74:\n      pop\n        /* \"contracts/StakingUpgrade.sol\":3404:3414  msg.sender */\n      caller\n        /* \"contracts/StakingUpgrade.sol\":3389:3439  RewardsClaimed(msg.sender,userRewards[msg.sender]) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xfc30cddea38e2bf4d6ea7d3f9ed3b6ad7f176419f4963bd81318067a4aee73fe\n        /* \"contracts/StakingUpgrade.sol\":3415:3426  userRewards */\n      0x04\n        /* \"contracts/StakingUpgrade.sol\":3415:3438  userRewards[msg.sender] */\n      0x00\n        /* \"contracts/StakingUpgrade.sol\":3427:3437  msg.sender */\n      caller\n        /* \"contracts/StakingUpgrade.sol\":3415:3438  userRewards[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/StakingUpgrade.sol\":3389:3439  RewardsClaimed(msg.sender,userRewards[msg.sender]) */\n      mload(0x40)\n      tag_75\n      swap2\n      swap1\n      tag_20\n      jump\t// in\n    tag_75:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/StakingUpgrade.sol\":3474:3475  0 */\n      0x00\n        /* \"contracts/StakingUpgrade.sol\":3450:3461  userRewards */\n      0x04\n        /* \"contracts/StakingUpgrade.sol\":3450:3473  userRewards[msg.sender] */\n      0x00\n        /* \"contracts/StakingUpgrade.sol\":3462:3472  msg.sender */\n      caller\n        /* \"contracts/StakingUpgrade.sol\":3450:3473  userRewards[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/StakingUpgrade.sol\":3450:3475  userRewards[msg.sender]=0 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/StakingUpgrade.sol\":3165:3483  function claimRewards() public{... */\n      jump\t// out\n        /* \"contracts/StakingUpgrade.sol\":338:366  StakeToken public stakeToken */\n    tag_28:\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3155:3256  function renounceOwnership() public virtual onlyOwner {... */\n    tag_32:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      tag_77\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2345  _checkOwner */\n      tag_78\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      jump\t// in\n    tag_77:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3219:3249  _transferOwnership(address(0)) */\n      tag_80\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3246:3247  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3219:3237  _transferOwnership */\n      tag_81\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3219:3249  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_80:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3155:3256  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2441:2585  function owner() public view virtual returns (address) {... */\n    tag_34:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2487:2494  address */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2506:2530  OwnableStorage storage $ */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2533:2553  _getOwnableStorage() */\n      tag_83\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2533:2551  _getOwnableStorage */\n      tag_84\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2533:2553  _getOwnableStorage() */\n      jump\t// in\n    tag_83:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2506:2553  OwnableStorage storage $ = _getOwnableStorage() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2570:2571  $ */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2570:2578  $._owner */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2563:2578  return $._owner */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2441:2585  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/StakingUpgrade.sol\":1448:2183  function stake(uint amount) public{... */\n    tag_39:\n        /* \"contracts/StakingUpgrade.sol\":1508:1509  0 */\n      0x00\n        /* \"contracts/StakingUpgrade.sol\":1501:1507  amount */\n      dup2\n        /* \"contracts/StakingUpgrade.sol\":1501:1509  amount>0 */\n      gt\n        /* \"contracts/StakingUpgrade.sol\":1493:1558  require(amount>0,\"The amount should be always greater than zero\") */\n      tag_86\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_87\n      swap1\n      tag_88\n      jump\t// in\n    tag_87:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_86:\n        /* \"contracts/StakingUpgrade.sol\":1668:1674  amount */\n      dup1\n        /* \"contracts/StakingUpgrade.sol\":1620:1630  stakeToken */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/StakingUpgrade.sol\":1620:1640  stakeToken.allowance */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xdd62ed3e\n        /* \"contracts/StakingUpgrade.sol\":1641:1651  msg.sender */\n      caller\n        /* \"contracts/StakingUpgrade.sol\":1660:1664  this */\n      address\n        /* \"contracts/StakingUpgrade.sol\":1620:1666  stakeToken.allowance(msg.sender,address(this)) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_89\n      swap3\n      swap2\n      swap1\n      tag_90\n      jump\t// in\n    tag_89:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_92\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_92:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_93\n      swap2\n      swap1\n      tag_94\n      jump\t// in\n    tag_93:\n        /* \"contracts/StakingUpgrade.sol\":1620:1674  stakeToken.allowance(msg.sender,address(this))>=amount */\n      lt\n      iszero\n        /* \"contracts/StakingUpgrade.sol\":1612:1717  require(stakeToken.allowance(msg.sender,address(this))>=amount,\"Not set the enough amount for allowance\") */\n      tag_95\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_96\n      swap1\n      tag_97\n      jump\t// in\n    tag_96:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_95:\n        /* \"contracts/StakingUpgrade.sol\":1770:1780  stakeToken */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/StakingUpgrade.sol\":1770:1793  stakeToken.transferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x23b872dd\n        /* \"contracts/StakingUpgrade.sol\":1794:1804  msg.sender */\n      caller\n        /* \"contracts/StakingUpgrade.sol\":1813:1817  this */\n      address\n        /* \"contracts/StakingUpgrade.sol\":1819:1825  amount */\n      dup5\n        /* \"contracts/StakingUpgrade.sol\":1770:1826  stakeToken.transferFrom(msg.sender,address(this),amount) */\n      mload(0x40)\n      dup5\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_98\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_99\n      jump\t// in\n    tag_98:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_101\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_101:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_102\n      swap2\n      swap1\n      tag_65\n      jump\t// in\n    tag_102:\n      pop\n        /* \"contracts/StakingUpgrade.sol\":1932:1933  0 */\n      0x00\n        /* \"contracts/StakingUpgrade.sol\":1915:1930  lastUpdatedTime */\n      sload(0x02)\n        /* \"contracts/StakingUpgrade.sol\":1915:1933  lastUpdatedTime!=0 */\n      eq\n        /* \"contracts/StakingUpgrade.sol\":1912:1984  if(lastUpdatedTime!=0){... */\n      tag_103\n      jumpi\n        /* \"contracts/StakingUpgrade.sol\":1949:1972  calculateTotalRewards() */\n      tag_104\n        /* \"contracts/StakingUpgrade.sol\":1949:1970  calculateTotalRewards */\n      tag_45\n        /* \"contracts/StakingUpgrade.sol\":1949:1972  calculateTotalRewards() */\n      jump\t// in\n    tag_104:\n        /* \"contracts/StakingUpgrade.sol\":1912:1984  if(lastUpdatedTime!=0){... */\n    tag_103:\n        /* \"contracts/StakingUpgrade.sol\":2042:2048  amount */\n      dup1\n        /* \"contracts/StakingUpgrade.sol\":2019:2029  userStaked */\n      0x03\n        /* \"contracts/StakingUpgrade.sol\":2019:2041  userStaked[msg.sender] */\n      0x00\n        /* \"contracts/StakingUpgrade.sol\":2030:2040  msg.sender */\n      caller\n        /* \"contracts/StakingUpgrade.sol\":2019:2041  userStaked[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/StakingUpgrade.sol\":2019:2048  userStaked[msg.sender]+amount */\n      tag_105\n      swap2\n      swap1\n      tag_106\n      jump\t// in\n    tag_105:\n        /* \"contracts/StakingUpgrade.sol\":1996:2006  userStaked */\n      0x03\n        /* \"contracts/StakingUpgrade.sol\":1996:2018  userStaked[msg.sender] */\n      0x00\n        /* \"contracts/StakingUpgrade.sol\":2007:2017  msg.sender */\n      caller\n        /* \"contracts/StakingUpgrade.sol\":1996:2018  userStaked[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/StakingUpgrade.sol\":1996:2048  userStaked[msg.sender]=userStaked[msg.sender]+amount */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/StakingUpgrade.sol\":2075:2090  block.timestamp */\n      timestamp\n        /* \"contracts/StakingUpgrade.sol\":2059:2074  lastUpdatedTime */\n      0x02\n        /* \"contracts/StakingUpgrade.sol\":2059:2090  lastUpdatedTime=block.timestamp */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/StakingUpgrade.sol\":2157:2167  msg.sender */\n      caller\n        /* \"contracts/StakingUpgrade.sol\":2150:2175  Staked(msg.sender,amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x9e71bc8eea02a63969f509818f2dafb9254532904319f9dbda79b67bd34a5f3d\n        /* \"contracts/StakingUpgrade.sol\":2168:2174  amount */\n      dup3\n        /* \"contracts/StakingUpgrade.sol\":2150:2175  Staked(msg.sender,amount) */\n      mload(0x40)\n      tag_107\n      swap2\n      swap1\n      tag_20\n      jump\t// in\n    tag_107:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/StakingUpgrade.sol\":1448:2183  function stake(uint amount) public{... */\n      pop\n      jump\t// out\n        /* \"contracts/StakingUpgrade.sol\":1109:1149  mapping(address=>uint) public userStaked */\n    tag_42:\n      mstore(0x20, 0x03)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"contracts/StakingUpgrade.sol\":2724:3118  function calculateTotalRewards() public{... */\n    tag_45:\n        /* \"contracts/StakingUpgrade.sol\":2774:2793  uint calculatedTime */\n      0x00\n        /* \"contracts/StakingUpgrade.sol\":2810:2825  lastUpdatedTime */\n      sload(0x02)\n        /* \"contracts/StakingUpgrade.sol\":2794:2809  block.timestamp */\n      timestamp\n        /* \"contracts/StakingUpgrade.sol\":2794:2825  block.timestamp-lastUpdatedTime */\n      tag_109\n      swap2\n      swap1\n      tag_59\n      jump\t// in\n    tag_109:\n        /* \"contracts/StakingUpgrade.sol\":2774:2825  uint calculatedTime=block.timestamp-lastUpdatedTime */\n      swap1\n      pop\n        /* \"contracts/StakingUpgrade.sol\":2897:2923  uint StakeRewardsPerSecond */\n      0x00\n        /* \"contracts/StakingUpgrade.sol\":2951:2954  100 */\n      0x64\n        /* \"contracts/StakingUpgrade.sol\":2948:2949  4 */\n      0x04\n        /* \"contracts/StakingUpgrade.sol\":2925:2935  userStaked */\n      0x03\n        /* \"contracts/StakingUpgrade.sol\":2925:2947  userStaked[msg.sender] */\n      0x00\n        /* \"contracts/StakingUpgrade.sol\":2936:2946  msg.sender */\n      caller\n        /* \"contracts/StakingUpgrade.sol\":2925:2947  userStaked[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/StakingUpgrade.sol\":2925:2949  userStaked[msg.sender]*4 */\n      tag_110\n      swap2\n      swap1\n      tag_111\n      jump\t// in\n    tag_110:\n        /* \"contracts/StakingUpgrade.sol\":2924:2954  (userStaked[msg.sender]*4)/100 */\n      tag_112\n      swap2\n      swap1\n      tag_113\n      jump\t// in\n    tag_112:\n        /* \"contracts/StakingUpgrade.sol\":2897:2954  uint StakeRewardsPerSecond=(userStaked[msg.sender]*4)/100 */\n      swap1\n      pop\n        /* \"contracts/StakingUpgrade.sol\":2965:2992  uint totalRewardsCalculated */\n      0x00\n        /* \"contracts/StakingUpgrade.sol\":3015:3029  calculatedTime */\n      dup3\n        /* \"contracts/StakingUpgrade.sol\":2993:3014  StakeRewardsPerSecond */\n      dup3\n        /* \"contracts/StakingUpgrade.sol\":2993:3029  StakeRewardsPerSecond*calculatedTime */\n      tag_114\n      swap2\n      swap1\n      tag_111\n      jump\t// in\n    tag_114:\n        /* \"contracts/StakingUpgrade.sol\":2965:3029  uint totalRewardsCalculated=StakeRewardsPerSecond*calculatedTime */\n      swap1\n      pop\n        /* \"contracts/StakingUpgrade.sol\":3088:3110  totalRewardsCalculated */\n      dup1\n        /* \"contracts/StakingUpgrade.sol\":3064:3075  userRewards */\n      0x04\n        /* \"contracts/StakingUpgrade.sol\":3064:3087  userRewards[msg.sender] */\n      0x00\n        /* \"contracts/StakingUpgrade.sol\":3076:3086  msg.sender */\n      caller\n        /* \"contracts/StakingUpgrade.sol\":3064:3087  userRewards[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/StakingUpgrade.sol\":3064:3110  userRewards[msg.sender]+totalRewardsCalculated */\n      tag_115\n      swap2\n      swap1\n      tag_106\n      jump\t// in\n    tag_115:\n        /* \"contracts/StakingUpgrade.sol\":3040:3051  userRewards */\n      0x04\n        /* \"contracts/StakingUpgrade.sol\":3040:3063  userRewards[msg.sender] */\n      0x00\n        /* \"contracts/StakingUpgrade.sol\":3052:3062  msg.sender */\n      caller\n        /* \"contracts/StakingUpgrade.sol\":3040:3063  userRewards[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/StakingUpgrade.sol\":3040:3110  userRewards[msg.sender]=userRewards[msg.sender]+totalRewardsCalculated */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/StakingUpgrade.sol\":2763:3118  {... */\n      pop\n      pop\n      pop\n        /* \"contracts/StakingUpgrade.sol\":2724:3118  function calculateTotalRewards() public{... */\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3405:3620  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_48:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      tag_117\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2345  _checkOwner */\n      tag_78\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      jump\t// in\n    tag_117:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3509:3510  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3489:3511  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3489:3497  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3489:3511  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3485:3576  if (newOwner == address(0)) {... */\n      tag_119\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3562:3563  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3534:3565  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_120\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_120:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3485:3576  if (newOwner == address(0)) {... */\n    tag_119:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3585:3613  _transferOwnership(newOwner) */\n      tag_121\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3604:3612  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3585:3603  _transferOwnership */\n      tag_81\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3585:3613  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_121:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3405:3620  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/StakingUpgrade.sol\":373:403  RewardToken public rewardToken */\n    tag_50:\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2658:2820  function _checkOwner() internal view virtual {... */\n    tag_78:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2728:2740  _msgSender() */\n      tag_123\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2728:2738  _msgSender */\n      tag_124\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2728:2740  _msgSender() */\n      jump\t// in\n    tag_123:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2717:2740  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2717:2724  owner() */\n      tag_125\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2717:2722  owner */\n      tag_34\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2717:2724  owner() */\n      jump\t// in\n    tag_125:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2717:2740  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2713:2814  if (owner() != _msgSender()) {... */\n      tag_126\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2790:2802  _msgSender() */\n      tag_127\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2790:2800  _msgSender */\n      tag_124\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2790:2802  _msgSender() */\n      jump\t// in\n    tag_127:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2763:2803  OwnableUnauthorizedAccount(_msgSender()) */\n      mload(0x40)\n      0x118cdaa700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_128\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_128:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2713:2814  if (owner() != _msgSender()) {... */\n    tag_126:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2658:2820  function _checkOwner() internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3774:4022  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_81:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3847:3871  OwnableStorage storage $ */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3874:3894  _getOwnableStorage() */\n      tag_130\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3874:3892  _getOwnableStorage */\n      tag_84\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3874:3894  _getOwnableStorage() */\n      jump\t// in\n    tag_130:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3847:3894  OwnableStorage storage $ = _getOwnableStorage() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3904:3920  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3923:3924  $ */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3923:3931  $._owner */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3904:3931  address oldOwner = $._owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3952:3960  newOwner */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3941:3942  $ */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3941:3949  $._owner */\n      0x00\n      add\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3941:3960  $._owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":4006:4014  newOwner */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3975:4015  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3996:4004  oldOwner */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3975:4015  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3837:4022  {... */\n      pop\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3774:4022  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1192:1351  function _getOwnableStorage() private pure returns (OwnableStorage storage $) {... */\n    tag_84:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1244:1268  OwnableStorage storage $ */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1313:1335  OwnableStorageLocation */\n      0x9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1303:1335  $.slot := OwnableStorageLocation */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1192:1351  function _getOwnableStorage() private pure returns (OwnableStorage storage $) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":887:983  function _msgSender() internal view virtual returns (address) {... */\n    tag_124:\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":940:947  address */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":966:976  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":959:976  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":887:983  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_134:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":334:460   */\n    tag_136:\n        /* \"#utility.yul\":371:378   */\n      0x00\n        /* \"#utility.yul\":411:453   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":404:409   */\n      dup3\n        /* \"#utility.yul\":400:454   */\n      and\n        /* \"#utility.yul\":389:454   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:460   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":466:562   */\n    tag_137:\n        /* \"#utility.yul\":503:510   */\n      0x00\n        /* \"#utility.yul\":532:556   */\n      tag_173\n        /* \"#utility.yul\":550:555   */\n      dup3\n        /* \"#utility.yul\":532:556   */\n      tag_136\n      jump\t// in\n    tag_173:\n        /* \"#utility.yul\":521:556   */\n      swap1\n      pop\n        /* \"#utility.yul\":466:562   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":568:690   */\n    tag_138:\n        /* \"#utility.yul\":641:665   */\n      tag_175\n        /* \"#utility.yul\":659:664   */\n      dup2\n        /* \"#utility.yul\":641:665   */\n      tag_137\n      jump\t// in\n    tag_175:\n        /* \"#utility.yul\":634:639   */\n      dup2\n        /* \"#utility.yul\":631:666   */\n      eq\n        /* \"#utility.yul\":621:684   */\n      tag_176\n      jumpi\n        /* \"#utility.yul\":680:681   */\n      0x00\n        /* \"#utility.yul\":677:678   */\n      dup1\n        /* \"#utility.yul\":670:682   */\n      revert\n        /* \"#utility.yul\":621:684   */\n    tag_176:\n        /* \"#utility.yul\":568:690   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":696:835   */\n    tag_139:\n        /* \"#utility.yul\":742:747   */\n      0x00\n        /* \"#utility.yul\":780:786   */\n      dup2\n        /* \"#utility.yul\":767:787   */\n      calldataload\n        /* \"#utility.yul\":758:787   */\n      swap1\n      pop\n        /* \"#utility.yul\":796:829   */\n      tag_178\n        /* \"#utility.yul\":823:828   */\n      dup2\n        /* \"#utility.yul\":796:829   */\n      tag_138\n      jump\t// in\n    tag_178:\n        /* \"#utility.yul\":696:835   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":841:1170   */\n    tag_17:\n        /* \"#utility.yul\":900:906   */\n      0x00\n        /* \"#utility.yul\":949:951   */\n      0x20\n        /* \"#utility.yul\":937:946   */\n      dup3\n        /* \"#utility.yul\":928:935   */\n      dup5\n        /* \"#utility.yul\":924:947   */\n      sub\n        /* \"#utility.yul\":920:952   */\n      slt\n        /* \"#utility.yul\":917:1036   */\n      iszero\n      tag_180\n      jumpi\n        /* \"#utility.yul\":955:1034   */\n      tag_181\n      tag_134\n      jump\t// in\n    tag_181:\n        /* \"#utility.yul\":917:1036   */\n    tag_180:\n        /* \"#utility.yul\":1075:1076   */\n      0x00\n        /* \"#utility.yul\":1100:1153   */\n      tag_182\n        /* \"#utility.yul\":1145:1152   */\n      dup5\n        /* \"#utility.yul\":1136:1142   */\n      dup3\n        /* \"#utility.yul\":1125:1134   */\n      dup6\n        /* \"#utility.yul\":1121:1143   */\n      add\n        /* \"#utility.yul\":1100:1153   */\n      tag_139\n      jump\t// in\n    tag_182:\n        /* \"#utility.yul\":1090:1153   */\n      swap2\n      pop\n        /* \"#utility.yul\":1046:1163   */\n      pop\n        /* \"#utility.yul\":841:1170   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1176:1253   */\n    tag_140:\n        /* \"#utility.yul\":1213:1220   */\n      0x00\n        /* \"#utility.yul\":1242:1247   */\n      dup2\n        /* \"#utility.yul\":1231:1247   */\n      swap1\n      pop\n        /* \"#utility.yul\":1176:1253   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1259:1377   */\n    tag_141:\n        /* \"#utility.yul\":1346:1370   */\n      tag_185\n        /* \"#utility.yul\":1364:1369   */\n      dup2\n        /* \"#utility.yul\":1346:1370   */\n      tag_140\n      jump\t// in\n    tag_185:\n        /* \"#utility.yul\":1341:1344   */\n      dup3\n        /* \"#utility.yul\":1334:1371   */\n      mstore\n        /* \"#utility.yul\":1259:1377   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1383:1605   */\n    tag_20:\n        /* \"#utility.yul\":1476:1480   */\n      0x00\n        /* \"#utility.yul\":1514:1516   */\n      0x20\n        /* \"#utility.yul\":1503:1512   */\n      dup3\n        /* \"#utility.yul\":1499:1517   */\n      add\n        /* \"#utility.yul\":1491:1517   */\n      swap1\n      pop\n        /* \"#utility.yul\":1527:1598   */\n      tag_187\n        /* \"#utility.yul\":1595:1596   */\n      0x00\n        /* \"#utility.yul\":1584:1593   */\n      dup4\n        /* \"#utility.yul\":1580:1597   */\n      add\n        /* \"#utility.yul\":1571:1577   */\n      dup5\n        /* \"#utility.yul\":1527:1598   */\n      tag_141\n      jump\t// in\n    tag_187:\n        /* \"#utility.yul\":1383:1605   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1611:1733   */\n    tag_142:\n        /* \"#utility.yul\":1684:1708   */\n      tag_189\n        /* \"#utility.yul\":1702:1707   */\n      dup2\n        /* \"#utility.yul\":1684:1708   */\n      tag_140\n      jump\t// in\n    tag_189:\n        /* \"#utility.yul\":1677:1682   */\n      dup2\n        /* \"#utility.yul\":1674:1709   */\n      eq\n        /* \"#utility.yul\":1664:1727   */\n      tag_190\n      jumpi\n        /* \"#utility.yul\":1723:1724   */\n      0x00\n        /* \"#utility.yul\":1720:1721   */\n      dup1\n        /* \"#utility.yul\":1713:1725   */\n      revert\n        /* \"#utility.yul\":1664:1727   */\n    tag_190:\n        /* \"#utility.yul\":1611:1733   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1739:1878   */\n    tag_143:\n        /* \"#utility.yul\":1785:1790   */\n      0x00\n        /* \"#utility.yul\":1823:1829   */\n      dup2\n        /* \"#utility.yul\":1810:1830   */\n      calldataload\n        /* \"#utility.yul\":1801:1830   */\n      swap1\n      pop\n        /* \"#utility.yul\":1839:1872   */\n      tag_192\n        /* \"#utility.yul\":1866:1871   */\n      dup2\n        /* \"#utility.yul\":1839:1872   */\n      tag_142\n      jump\t// in\n    tag_192:\n        /* \"#utility.yul\":1739:1878   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1884:2213   */\n    tag_23:\n        /* \"#utility.yul\":1943:1949   */\n      0x00\n        /* \"#utility.yul\":1992:1994   */\n      0x20\n        /* \"#utility.yul\":1980:1989   */\n      dup3\n        /* \"#utility.yul\":1971:1978   */\n      dup5\n        /* \"#utility.yul\":1967:1990   */\n      sub\n        /* \"#utility.yul\":1963:1995   */\n      slt\n        /* \"#utility.yul\":1960:2079   */\n      iszero\n      tag_194\n      jumpi\n        /* \"#utility.yul\":1998:2077   */\n      tag_195\n      tag_134\n      jump\t// in\n    tag_195:\n        /* \"#utility.yul\":1960:2079   */\n    tag_194:\n        /* \"#utility.yul\":2118:2119   */\n      0x00\n        /* \"#utility.yul\":2143:2196   */\n      tag_196\n        /* \"#utility.yul\":2188:2195   */\n      dup5\n        /* \"#utility.yul\":2179:2185   */\n      dup3\n        /* \"#utility.yul\":2168:2177   */\n      dup6\n        /* \"#utility.yul\":2164:2186   */\n      add\n        /* \"#utility.yul\":2143:2196   */\n      tag_143\n      jump\t// in\n    tag_196:\n        /* \"#utility.yul\":2133:2196   */\n      swap2\n      pop\n        /* \"#utility.yul\":2089:2206   */\n      pop\n        /* \"#utility.yul\":1884:2213   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2219:2279   */\n    tag_144:\n        /* \"#utility.yul\":2247:2250   */\n      0x00\n        /* \"#utility.yul\":2268:2273   */\n      dup2\n        /* \"#utility.yul\":2261:2273   */\n      swap1\n      pop\n        /* \"#utility.yul\":2219:2279   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2285:2427   */\n    tag_145:\n        /* \"#utility.yul\":2335:2344   */\n      0x00\n        /* \"#utility.yul\":2368:2421   */\n      tag_199\n        /* \"#utility.yul\":2386:2420   */\n      tag_200\n        /* \"#utility.yul\":2395:2419   */\n      tag_201\n        /* \"#utility.yul\":2413:2418   */\n      dup5\n        /* \"#utility.yul\":2395:2419   */\n      tag_136\n      jump\t// in\n    tag_201:\n        /* \"#utility.yul\":2386:2420   */\n      tag_144\n      jump\t// in\n    tag_200:\n        /* \"#utility.yul\":2368:2421   */\n      tag_136\n      jump\t// in\n    tag_199:\n        /* \"#utility.yul\":2355:2421   */\n      swap1\n      pop\n        /* \"#utility.yul\":2285:2427   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2433:2559   */\n    tag_146:\n        /* \"#utility.yul\":2483:2492   */\n      0x00\n        /* \"#utility.yul\":2516:2553   */\n      tag_203\n        /* \"#utility.yul\":2547:2552   */\n      dup3\n        /* \"#utility.yul\":2516:2553   */\n      tag_145\n      jump\t// in\n    tag_203:\n        /* \"#utility.yul\":2503:2553   */\n      swap1\n      pop\n        /* \"#utility.yul\":2433:2559   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2565:2710   */\n    tag_147:\n        /* \"#utility.yul\":2634:2643   */\n      0x00\n        /* \"#utility.yul\":2667:2704   */\n      tag_205\n        /* \"#utility.yul\":2698:2703   */\n      dup3\n        /* \"#utility.yul\":2667:2704   */\n      tag_146\n      jump\t// in\n    tag_205:\n        /* \"#utility.yul\":2654:2704   */\n      swap1\n      pop\n        /* \"#utility.yul\":2565:2710   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2716:2885   */\n    tag_148:\n        /* \"#utility.yul\":2822:2878   */\n      tag_207\n        /* \"#utility.yul\":2872:2877   */\n      dup2\n        /* \"#utility.yul\":2822:2878   */\n      tag_147\n      jump\t// in\n    tag_207:\n        /* \"#utility.yul\":2817:2820   */\n      dup3\n        /* \"#utility.yul\":2810:2879   */\n      mstore\n        /* \"#utility.yul\":2716:2885   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2891:3151   */\n    tag_30:\n        /* \"#utility.yul\":3003:3007   */\n      0x00\n        /* \"#utility.yul\":3041:3043   */\n      0x20\n        /* \"#utility.yul\":3030:3039   */\n      dup3\n        /* \"#utility.yul\":3026:3044   */\n      add\n        /* \"#utility.yul\":3018:3044   */\n      swap1\n      pop\n        /* \"#utility.yul\":3054:3144   */\n      tag_209\n        /* \"#utility.yul\":3141:3142   */\n      0x00\n        /* \"#utility.yul\":3130:3139   */\n      dup4\n        /* \"#utility.yul\":3126:3143   */\n      add\n        /* \"#utility.yul\":3117:3123   */\n      dup5\n        /* \"#utility.yul\":3054:3144   */\n      tag_148\n      jump\t// in\n    tag_209:\n        /* \"#utility.yul\":2891:3151   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3157:3275   */\n    tag_149:\n        /* \"#utility.yul\":3244:3268   */\n      tag_211\n        /* \"#utility.yul\":3262:3267   */\n      dup2\n        /* \"#utility.yul\":3244:3268   */\n      tag_137\n      jump\t// in\n    tag_211:\n        /* \"#utility.yul\":3239:3242   */\n      dup3\n        /* \"#utility.yul\":3232:3269   */\n      mstore\n        /* \"#utility.yul\":3157:3275   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3281:3503   */\n    tag_36:\n        /* \"#utility.yul\":3374:3378   */\n      0x00\n        /* \"#utility.yul\":3412:3414   */\n      0x20\n        /* \"#utility.yul\":3401:3410   */\n      dup3\n        /* \"#utility.yul\":3397:3415   */\n      add\n        /* \"#utility.yul\":3389:3415   */\n      swap1\n      pop\n        /* \"#utility.yul\":3425:3496   */\n      tag_213\n        /* \"#utility.yul\":3493:3494   */\n      0x00\n        /* \"#utility.yul\":3482:3491   */\n      dup4\n        /* \"#utility.yul\":3478:3495   */\n      add\n        /* \"#utility.yul\":3469:3475   */\n      dup5\n        /* \"#utility.yul\":3425:3496   */\n      tag_149\n      jump\t// in\n    tag_213:\n        /* \"#utility.yul\":3281:3503   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3509:3655   */\n    tag_150:\n        /* \"#utility.yul\":3579:3588   */\n      0x00\n        /* \"#utility.yul\":3612:3649   */\n      tag_215\n        /* \"#utility.yul\":3643:3648   */\n      dup3\n        /* \"#utility.yul\":3612:3649   */\n      tag_146\n      jump\t// in\n    tag_215:\n        /* \"#utility.yul\":3599:3649   */\n      swap1\n      pop\n        /* \"#utility.yul\":3509:3655   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3661:3832   */\n    tag_151:\n        /* \"#utility.yul\":3768:3825   */\n      tag_217\n        /* \"#utility.yul\":3819:3824   */\n      dup2\n        /* \"#utility.yul\":3768:3825   */\n      tag_150\n      jump\t// in\n    tag_217:\n        /* \"#utility.yul\":3763:3766   */\n      dup3\n        /* \"#utility.yul\":3756:3826   */\n      mstore\n        /* \"#utility.yul\":3661:3832   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3838:4100   */\n    tag_52:\n        /* \"#utility.yul\":3951:3955   */\n      0x00\n        /* \"#utility.yul\":3989:3991   */\n      0x20\n        /* \"#utility.yul\":3978:3987   */\n      dup3\n        /* \"#utility.yul\":3974:3992   */\n      add\n        /* \"#utility.yul\":3966:3992   */\n      swap1\n      pop\n        /* \"#utility.yul\":4002:4093   */\n      tag_219\n        /* \"#utility.yul\":4090:4091   */\n      0x00\n        /* \"#utility.yul\":4079:4088   */\n      dup4\n        /* \"#utility.yul\":4075:4092   */\n      add\n        /* \"#utility.yul\":4066:4072   */\n      dup5\n        /* \"#utility.yul\":4002:4093   */\n      tag_151\n      jump\t// in\n    tag_219:\n        /* \"#utility.yul\":3838:4100   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4106:4275   */\n    tag_152:\n        /* \"#utility.yul\":4190:4201   */\n      0x00\n        /* \"#utility.yul\":4224:4230   */\n      dup3\n        /* \"#utility.yul\":4219:4222   */\n      dup3\n        /* \"#utility.yul\":4212:4231   */\n      mstore\n        /* \"#utility.yul\":4264:4268   */\n      0x20\n        /* \"#utility.yul\":4259:4262   */\n      dup3\n        /* \"#utility.yul\":4255:4269   */\n      add\n        /* \"#utility.yul\":4240:4269   */\n      swap1\n      pop\n        /* \"#utility.yul\":4106:4275   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4281:4458   */\n    tag_153:\n        /* \"#utility.yul\":4421:4450   */\n      0x496e73756666696369656e74207374616b65642062616c616e63650000000000\n        /* \"#utility.yul\":4417:4418   */\n      0x00\n        /* \"#utility.yul\":4409:4415   */\n      dup3\n        /* \"#utility.yul\":4405:4419   */\n      add\n        /* \"#utility.yul\":4398:4451   */\n      mstore\n        /* \"#utility.yul\":4281:4458   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4464:4830   */\n    tag_154:\n        /* \"#utility.yul\":4606:4609   */\n      0x00\n        /* \"#utility.yul\":4627:4694   */\n      tag_223\n        /* \"#utility.yul\":4691:4693   */\n      0x1b\n        /* \"#utility.yul\":4686:4689   */\n      dup4\n        /* \"#utility.yul\":4627:4694   */\n      tag_152\n      jump\t// in\n    tag_223:\n        /* \"#utility.yul\":4620:4694   */\n      swap2\n      pop\n        /* \"#utility.yul\":4703:4796   */\n      tag_224\n        /* \"#utility.yul\":4792:4795   */\n      dup3\n        /* \"#utility.yul\":4703:4796   */\n      tag_153\n      jump\t// in\n    tag_224:\n        /* \"#utility.yul\":4821:4823   */\n      0x20\n        /* \"#utility.yul\":4816:4819   */\n      dup3\n        /* \"#utility.yul\":4812:4824   */\n      add\n        /* \"#utility.yul\":4805:4824   */\n      swap1\n      pop\n        /* \"#utility.yul\":4464:4830   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4836:5255   */\n    tag_56:\n        /* \"#utility.yul\":5002:5006   */\n      0x00\n        /* \"#utility.yul\":5040:5042   */\n      0x20\n        /* \"#utility.yul\":5029:5038   */\n      dup3\n        /* \"#utility.yul\":5025:5043   */\n      add\n        /* \"#utility.yul\":5017:5043   */\n      swap1\n      pop\n        /* \"#utility.yul\":5089:5098   */\n      dup2\n        /* \"#utility.yul\":5083:5087   */\n      dup2\n        /* \"#utility.yul\":5079:5099   */\n      sub\n        /* \"#utility.yul\":5075:5076   */\n      0x00\n        /* \"#utility.yul\":5064:5073   */\n      dup4\n        /* \"#utility.yul\":5060:5077   */\n      add\n        /* \"#utility.yul\":5053:5100   */\n      mstore\n        /* \"#utility.yul\":5117:5248   */\n      tag_226\n        /* \"#utility.yul\":5243:5247   */\n      dup2\n        /* \"#utility.yul\":5117:5248   */\n      tag_154\n      jump\t// in\n    tag_226:\n        /* \"#utility.yul\":5109:5248   */\n      swap1\n      pop\n        /* \"#utility.yul\":4836:5255   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5261:5441   */\n    tag_155:\n        /* \"#utility.yul\":5309:5386   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":5306:5307   */\n      0x00\n        /* \"#utility.yul\":5299:5387   */\n      mstore\n        /* \"#utility.yul\":5406:5410   */\n      0x11\n        /* \"#utility.yul\":5403:5404   */\n      0x04\n        /* \"#utility.yul\":5396:5411   */\n      mstore\n        /* \"#utility.yul\":5430:5434   */\n      0x24\n        /* \"#utility.yul\":5427:5428   */\n      0x00\n        /* \"#utility.yul\":5420:5435   */\n      revert\n        /* \"#utility.yul\":5447:5641   */\n    tag_59:\n        /* \"#utility.yul\":5487:5491   */\n      0x00\n        /* \"#utility.yul\":5507:5527   */\n      tag_229\n        /* \"#utility.yul\":5525:5526   */\n      dup3\n        /* \"#utility.yul\":5507:5527   */\n      tag_140\n      jump\t// in\n    tag_229:\n        /* \"#utility.yul\":5502:5527   */\n      swap2\n      pop\n        /* \"#utility.yul\":5541:5561   */\n      tag_230\n        /* \"#utility.yul\":5559:5560   */\n      dup4\n        /* \"#utility.yul\":5541:5561   */\n      tag_140\n      jump\t// in\n    tag_230:\n        /* \"#utility.yul\":5536:5561   */\n      swap3\n      pop\n        /* \"#utility.yul\":5585:5586   */\n      dup3\n        /* \"#utility.yul\":5582:5583   */\n      dup3\n        /* \"#utility.yul\":5578:5587   */\n      sub\n        /* \"#utility.yul\":5570:5587   */\n      swap1\n      pop\n        /* \"#utility.yul\":5609:5610   */\n      dup2\n        /* \"#utility.yul\":5603:5607   */\n      dup2\n        /* \"#utility.yul\":5600:5611   */\n      gt\n        /* \"#utility.yul\":5597:5634   */\n      iszero\n      tag_231\n      jumpi\n        /* \"#utility.yul\":5614:5632   */\n      tag_232\n      tag_155\n      jump\t// in\n    tag_232:\n        /* \"#utility.yul\":5597:5634   */\n    tag_231:\n        /* \"#utility.yul\":5447:5641   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5647:5979   */\n    tag_61:\n        /* \"#utility.yul\":5768:5772   */\n      0x00\n        /* \"#utility.yul\":5806:5808   */\n      0x40\n        /* \"#utility.yul\":5795:5804   */\n      dup3\n        /* \"#utility.yul\":5791:5809   */\n      add\n        /* \"#utility.yul\":5783:5809   */\n      swap1\n      pop\n        /* \"#utility.yul\":5819:5890   */\n      tag_234\n        /* \"#utility.yul\":5887:5888   */\n      0x00\n        /* \"#utility.yul\":5876:5885   */\n      dup4\n        /* \"#utility.yul\":5872:5889   */\n      add\n        /* \"#utility.yul\":5863:5869   */\n      dup6\n        /* \"#utility.yul\":5819:5890   */\n      tag_149\n      jump\t// in\n    tag_234:\n        /* \"#utility.yul\":5900:5972   */\n      tag_235\n        /* \"#utility.yul\":5968:5970   */\n      0x20\n        /* \"#utility.yul\":5957:5966   */\n      dup4\n        /* \"#utility.yul\":5953:5971   */\n      add\n        /* \"#utility.yul\":5944:5950   */\n      dup5\n        /* \"#utility.yul\":5900:5972   */\n      tag_141\n      jump\t// in\n    tag_235:\n        /* \"#utility.yul\":5647:5979   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5985:6075   */\n    tag_156:\n        /* \"#utility.yul\":6019:6026   */\n      0x00\n        /* \"#utility.yul\":6062:6067   */\n      dup2\n        /* \"#utility.yul\":6055:6068   */\n      iszero\n        /* \"#utility.yul\":6048:6069   */\n      iszero\n        /* \"#utility.yul\":6037:6069   */\n      swap1\n      pop\n        /* \"#utility.yul\":5985:6075   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6081:6197   */\n    tag_157:\n        /* \"#utility.yul\":6151:6172   */\n      tag_238\n        /* \"#utility.yul\":6166:6171   */\n      dup2\n        /* \"#utility.yul\":6151:6172   */\n      tag_156\n      jump\t// in\n    tag_238:\n        /* \"#utility.yul\":6144:6149   */\n      dup2\n        /* \"#utility.yul\":6141:6173   */\n      eq\n        /* \"#utility.yul\":6131:6191   */\n      tag_239\n      jumpi\n        /* \"#utility.yul\":6187:6188   */\n      0x00\n        /* \"#utility.yul\":6184:6185   */\n      dup1\n        /* \"#utility.yul\":6177:6189   */\n      revert\n        /* \"#utility.yul\":6131:6191   */\n    tag_239:\n        /* \"#utility.yul\":6081:6197   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6203:6340   */\n    tag_158:\n        /* \"#utility.yul\":6257:6262   */\n      0x00\n        /* \"#utility.yul\":6288:6294   */\n      dup2\n        /* \"#utility.yul\":6282:6295   */\n      mload\n        /* \"#utility.yul\":6273:6295   */\n      swap1\n      pop\n        /* \"#utility.yul\":6304:6334   */\n      tag_241\n        /* \"#utility.yul\":6328:6333   */\n      dup2\n        /* \"#utility.yul\":6304:6334   */\n      tag_157\n      jump\t// in\n    tag_241:\n        /* \"#utility.yul\":6203:6340   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6346:6691   */\n    tag_65:\n        /* \"#utility.yul\":6413:6419   */\n      0x00\n        /* \"#utility.yul\":6462:6464   */\n      0x20\n        /* \"#utility.yul\":6450:6459   */\n      dup3\n        /* \"#utility.yul\":6441:6448   */\n      dup5\n        /* \"#utility.yul\":6437:6460   */\n      sub\n        /* \"#utility.yul\":6433:6465   */\n      slt\n        /* \"#utility.yul\":6430:6549   */\n      iszero\n      tag_243\n      jumpi\n        /* \"#utility.yul\":6468:6547   */\n      tag_244\n      tag_134\n      jump\t// in\n    tag_244:\n        /* \"#utility.yul\":6430:6549   */\n    tag_243:\n        /* \"#utility.yul\":6588:6589   */\n      0x00\n        /* \"#utility.yul\":6613:6674   */\n      tag_245\n        /* \"#utility.yul\":6666:6673   */\n      dup5\n        /* \"#utility.yul\":6657:6663   */\n      dup3\n        /* \"#utility.yul\":6646:6655   */\n      dup6\n        /* \"#utility.yul\":6642:6664   */\n      add\n        /* \"#utility.yul\":6613:6674   */\n      tag_158\n      jump\t// in\n    tag_245:\n        /* \"#utility.yul\":6603:6674   */\n      swap2\n      pop\n        /* \"#utility.yul\":6559:6684   */\n      pop\n        /* \"#utility.yul\":6346:6691   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6697:6866   */\n    tag_159:\n        /* \"#utility.yul\":6837:6858   */\n      0x4e6f207265776172647320746f20636c61696d00000000000000000000000000\n        /* \"#utility.yul\":6833:6834   */\n      0x00\n        /* \"#utility.yul\":6825:6831   */\n      dup3\n        /* \"#utility.yul\":6821:6835   */\n      add\n        /* \"#utility.yul\":6814:6859   */\n      mstore\n        /* \"#utility.yul\":6697:6866   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6872:7238   */\n    tag_160:\n        /* \"#utility.yul\":7014:7017   */\n      0x00\n        /* \"#utility.yul\":7035:7102   */\n      tag_248\n        /* \"#utility.yul\":7099:7101   */\n      0x13\n        /* \"#utility.yul\":7094:7097   */\n      dup4\n        /* \"#utility.yul\":7035:7102   */\n      tag_152\n      jump\t// in\n    tag_248:\n        /* \"#utility.yul\":7028:7102   */\n      swap2\n      pop\n        /* \"#utility.yul\":7111:7204   */\n      tag_249\n        /* \"#utility.yul\":7200:7203   */\n      dup3\n        /* \"#utility.yul\":7111:7204   */\n      tag_159\n      jump\t// in\n    tag_249:\n        /* \"#utility.yul\":7229:7231   */\n      0x20\n        /* \"#utility.yul\":7224:7227   */\n      dup3\n        /* \"#utility.yul\":7220:7232   */\n      add\n        /* \"#utility.yul\":7213:7232   */\n      swap1\n      pop\n        /* \"#utility.yul\":6872:7238   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7244:7663   */\n    tag_70:\n        /* \"#utility.yul\":7410:7414   */\n      0x00\n        /* \"#utility.yul\":7448:7450   */\n      0x20\n        /* \"#utility.yul\":7437:7446   */\n      dup3\n        /* \"#utility.yul\":7433:7451   */\n      add\n        /* \"#utility.yul\":7425:7451   */\n      swap1\n      pop\n        /* \"#utility.yul\":7497:7506   */\n      dup2\n        /* \"#utility.yul\":7491:7495   */\n      dup2\n        /* \"#utility.yul\":7487:7507   */\n      sub\n        /* \"#utility.yul\":7483:7484   */\n      0x00\n        /* \"#utility.yul\":7472:7481   */\n      dup4\n        /* \"#utility.yul\":7468:7485   */\n      add\n        /* \"#utility.yul\":7461:7508   */\n      mstore\n        /* \"#utility.yul\":7525:7656   */\n      tag_251\n        /* \"#utility.yul\":7651:7655   */\n      dup2\n        /* \"#utility.yul\":7525:7656   */\n      tag_160\n      jump\t// in\n    tag_251:\n        /* \"#utility.yul\":7517:7656   */\n      swap1\n      pop\n        /* \"#utility.yul\":7244:7663   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7669:7901   */\n    tag_161:\n        /* \"#utility.yul\":7809:7843   */\n      0x54686520616d6f756e742073686f756c6420626520616c776179732067726561\n        /* \"#utility.yul\":7805:7806   */\n      0x00\n        /* \"#utility.yul\":7797:7803   */\n      dup3\n        /* \"#utility.yul\":7793:7807   */\n      add\n        /* \"#utility.yul\":7786:7844   */\n      mstore\n        /* \"#utility.yul\":7878:7893   */\n      0x746572207468616e207a65726f00000000000000000000000000000000000000\n        /* \"#utility.yul\":7873:7875   */\n      0x20\n        /* \"#utility.yul\":7865:7871   */\n      dup3\n        /* \"#utility.yul\":7861:7876   */\n      add\n        /* \"#utility.yul\":7854:7894   */\n      mstore\n        /* \"#utility.yul\":7669:7901   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7907:8273   */\n    tag_162:\n        /* \"#utility.yul\":8049:8052   */\n      0x00\n        /* \"#utility.yul\":8070:8137   */\n      tag_254\n        /* \"#utility.yul\":8134:8136   */\n      0x2d\n        /* \"#utility.yul\":8129:8132   */\n      dup4\n        /* \"#utility.yul\":8070:8137   */\n      tag_152\n      jump\t// in\n    tag_254:\n        /* \"#utility.yul\":8063:8137   */\n      swap2\n      pop\n        /* \"#utility.yul\":8146:8239   */\n      tag_255\n        /* \"#utility.yul\":8235:8238   */\n      dup3\n        /* \"#utility.yul\":8146:8239   */\n      tag_161\n      jump\t// in\n    tag_255:\n        /* \"#utility.yul\":8264:8266   */\n      0x40\n        /* \"#utility.yul\":8259:8262   */\n      dup3\n        /* \"#utility.yul\":8255:8267   */\n      add\n        /* \"#utility.yul\":8248:8267   */\n      swap1\n      pop\n        /* \"#utility.yul\":7907:8273   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8279:8698   */\n    tag_88:\n        /* \"#utility.yul\":8445:8449   */\n      0x00\n        /* \"#utility.yul\":8483:8485   */\n      0x20\n        /* \"#utility.yul\":8472:8481   */\n      dup3\n        /* \"#utility.yul\":8468:8486   */\n      add\n        /* \"#utility.yul\":8460:8486   */\n      swap1\n      pop\n        /* \"#utility.yul\":8532:8541   */\n      dup2\n        /* \"#utility.yul\":8526:8530   */\n      dup2\n        /* \"#utility.yul\":8522:8542   */\n      sub\n        /* \"#utility.yul\":8518:8519   */\n      0x00\n        /* \"#utility.yul\":8507:8516   */\n      dup4\n        /* \"#utility.yul\":8503:8520   */\n      add\n        /* \"#utility.yul\":8496:8543   */\n      mstore\n        /* \"#utility.yul\":8560:8691   */\n      tag_257\n        /* \"#utility.yul\":8686:8690   */\n      dup2\n        /* \"#utility.yul\":8560:8691   */\n      tag_162\n      jump\t// in\n    tag_257:\n        /* \"#utility.yul\":8552:8691   */\n      swap1\n      pop\n        /* \"#utility.yul\":8279:8698   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8704:9036   */\n    tag_90:\n        /* \"#utility.yul\":8825:8829   */\n      0x00\n        /* \"#utility.yul\":8863:8865   */\n      0x40\n        /* \"#utility.yul\":8852:8861   */\n      dup3\n        /* \"#utility.yul\":8848:8866   */\n      add\n        /* \"#utility.yul\":8840:8866   */\n      swap1\n      pop\n        /* \"#utility.yul\":8876:8947   */\n      tag_259\n        /* \"#utility.yul\":8944:8945   */\n      0x00\n        /* \"#utility.yul\":8933:8942   */\n      dup4\n        /* \"#utility.yul\":8929:8946   */\n      add\n        /* \"#utility.yul\":8920:8926   */\n      dup6\n        /* \"#utility.yul\":8876:8947   */\n      tag_149\n      jump\t// in\n    tag_259:\n        /* \"#utility.yul\":8957:9029   */\n      tag_260\n        /* \"#utility.yul\":9025:9027   */\n      0x20\n        /* \"#utility.yul\":9014:9023   */\n      dup4\n        /* \"#utility.yul\":9010:9028   */\n      add\n        /* \"#utility.yul\":9001:9007   */\n      dup5\n        /* \"#utility.yul\":8957:9029   */\n      tag_149\n      jump\t// in\n    tag_260:\n        /* \"#utility.yul\":8704:9036   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9042:9185   */\n    tag_163:\n        /* \"#utility.yul\":9099:9104   */\n      0x00\n        /* \"#utility.yul\":9130:9136   */\n      dup2\n        /* \"#utility.yul\":9124:9137   */\n      mload\n        /* \"#utility.yul\":9115:9137   */\n      swap1\n      pop\n        /* \"#utility.yul\":9146:9179   */\n      tag_262\n        /* \"#utility.yul\":9173:9178   */\n      dup2\n        /* \"#utility.yul\":9146:9179   */\n      tag_142\n      jump\t// in\n    tag_262:\n        /* \"#utility.yul\":9042:9185   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9191:9542   */\n    tag_94:\n        /* \"#utility.yul\":9261:9267   */\n      0x00\n        /* \"#utility.yul\":9310:9312   */\n      0x20\n        /* \"#utility.yul\":9298:9307   */\n      dup3\n        /* \"#utility.yul\":9289:9296   */\n      dup5\n        /* \"#utility.yul\":9285:9308   */\n      sub\n        /* \"#utility.yul\":9281:9313   */\n      slt\n        /* \"#utility.yul\":9278:9397   */\n      iszero\n      tag_264\n      jumpi\n        /* \"#utility.yul\":9316:9395   */\n      tag_265\n      tag_134\n      jump\t// in\n    tag_265:\n        /* \"#utility.yul\":9278:9397   */\n    tag_264:\n        /* \"#utility.yul\":9436:9437   */\n      0x00\n        /* \"#utility.yul\":9461:9525   */\n      tag_266\n        /* \"#utility.yul\":9517:9524   */\n      dup5\n        /* \"#utility.yul\":9508:9514   */\n      dup3\n        /* \"#utility.yul\":9497:9506   */\n      dup6\n        /* \"#utility.yul\":9493:9515   */\n      add\n        /* \"#utility.yul\":9461:9525   */\n      tag_163\n      jump\t// in\n    tag_266:\n        /* \"#utility.yul\":9451:9525   */\n      swap2\n      pop\n        /* \"#utility.yul\":9407:9535   */\n      pop\n        /* \"#utility.yul\":9191:9542   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9548:9774   */\n    tag_164:\n        /* \"#utility.yul\":9688:9722   */\n      0x4e6f74207365742074686520656e6f75676820616d6f756e7420666f7220616c\n        /* \"#utility.yul\":9684:9685   */\n      0x00\n        /* \"#utility.yul\":9676:9682   */\n      dup3\n        /* \"#utility.yul\":9672:9686   */\n      add\n        /* \"#utility.yul\":9665:9723   */\n      mstore\n        /* \"#utility.yul\":9757:9766   */\n      0x6c6f77616e636500000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":9752:9754   */\n      0x20\n        /* \"#utility.yul\":9744:9750   */\n      dup3\n        /* \"#utility.yul\":9740:9755   */\n      add\n        /* \"#utility.yul\":9733:9767   */\n      mstore\n        /* \"#utility.yul\":9548:9774   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9780:10146   */\n    tag_165:\n        /* \"#utility.yul\":9922:9925   */\n      0x00\n        /* \"#utility.yul\":9943:10010   */\n      tag_269\n        /* \"#utility.yul\":10007:10009   */\n      0x27\n        /* \"#utility.yul\":10002:10005   */\n      dup4\n        /* \"#utility.yul\":9943:10010   */\n      tag_152\n      jump\t// in\n    tag_269:\n        /* \"#utility.yul\":9936:10010   */\n      swap2\n      pop\n        /* \"#utility.yul\":10019:10112   */\n      tag_270\n        /* \"#utility.yul\":10108:10111   */\n      dup3\n        /* \"#utility.yul\":10019:10112   */\n      tag_164\n      jump\t// in\n    tag_270:\n        /* \"#utility.yul\":10137:10139   */\n      0x40\n        /* \"#utility.yul\":10132:10135   */\n      dup3\n        /* \"#utility.yul\":10128:10140   */\n      add\n        /* \"#utility.yul\":10121:10140   */\n      swap1\n      pop\n        /* \"#utility.yul\":9780:10146   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10152:10571   */\n    tag_97:\n        /* \"#utility.yul\":10318:10322   */\n      0x00\n        /* \"#utility.yul\":10356:10358   */\n      0x20\n        /* \"#utility.yul\":10345:10354   */\n      dup3\n        /* \"#utility.yul\":10341:10359   */\n      add\n        /* \"#utility.yul\":10333:10359   */\n      swap1\n      pop\n        /* \"#utility.yul\":10405:10414   */\n      dup2\n        /* \"#utility.yul\":10399:10403   */\n      dup2\n        /* \"#utility.yul\":10395:10415   */\n      sub\n        /* \"#utility.yul\":10391:10392   */\n      0x00\n        /* \"#utility.yul\":10380:10389   */\n      dup4\n        /* \"#utility.yul\":10376:10393   */\n      add\n        /* \"#utility.yul\":10369:10416   */\n      mstore\n        /* \"#utility.yul\":10433:10564   */\n      tag_272\n        /* \"#utility.yul\":10559:10563   */\n      dup2\n        /* \"#utility.yul\":10433:10564   */\n      tag_165\n      jump\t// in\n    tag_272:\n        /* \"#utility.yul\":10425:10564   */\n      swap1\n      pop\n        /* \"#utility.yul\":10152:10571   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10577:11019   */\n    tag_99:\n        /* \"#utility.yul\":10726:10730   */\n      0x00\n        /* \"#utility.yul\":10764:10766   */\n      0x60\n        /* \"#utility.yul\":10753:10762   */\n      dup3\n        /* \"#utility.yul\":10749:10767   */\n      add\n        /* \"#utility.yul\":10741:10767   */\n      swap1\n      pop\n        /* \"#utility.yul\":10777:10848   */\n      tag_274\n        /* \"#utility.yul\":10845:10846   */\n      0x00\n        /* \"#utility.yul\":10834:10843   */\n      dup4\n        /* \"#utility.yul\":10830:10847   */\n      add\n        /* \"#utility.yul\":10821:10827   */\n      dup7\n        /* \"#utility.yul\":10777:10848   */\n      tag_149\n      jump\t// in\n    tag_274:\n        /* \"#utility.yul\":10858:10930   */\n      tag_275\n        /* \"#utility.yul\":10926:10928   */\n      0x20\n        /* \"#utility.yul\":10915:10924   */\n      dup4\n        /* \"#utility.yul\":10911:10929   */\n      add\n        /* \"#utility.yul\":10902:10908   */\n      dup6\n        /* \"#utility.yul\":10858:10930   */\n      tag_149\n      jump\t// in\n    tag_275:\n        /* \"#utility.yul\":10940:11012   */\n      tag_276\n        /* \"#utility.yul\":11008:11010   */\n      0x40\n        /* \"#utility.yul\":10997:11006   */\n      dup4\n        /* \"#utility.yul\":10993:11011   */\n      add\n        /* \"#utility.yul\":10984:10990   */\n      dup5\n        /* \"#utility.yul\":10940:11012   */\n      tag_141\n      jump\t// in\n    tag_276:\n        /* \"#utility.yul\":10577:11019   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11025:11216   */\n    tag_106:\n        /* \"#utility.yul\":11065:11068   */\n      0x00\n        /* \"#utility.yul\":11084:11104   */\n      tag_278\n        /* \"#utility.yul\":11102:11103   */\n      dup3\n        /* \"#utility.yul\":11084:11104   */\n      tag_140\n      jump\t// in\n    tag_278:\n        /* \"#utility.yul\":11079:11104   */\n      swap2\n      pop\n        /* \"#utility.yul\":11118:11138   */\n      tag_279\n        /* \"#utility.yul\":11136:11137   */\n      dup4\n        /* \"#utility.yul\":11118:11138   */\n      tag_140\n      jump\t// in\n    tag_279:\n        /* \"#utility.yul\":11113:11138   */\n      swap3\n      pop\n        /* \"#utility.yul\":11161:11162   */\n      dup3\n        /* \"#utility.yul\":11158:11159   */\n      dup3\n        /* \"#utility.yul\":11154:11163   */\n      add\n        /* \"#utility.yul\":11147:11163   */\n      swap1\n      pop\n        /* \"#utility.yul\":11182:11185   */\n      dup1\n        /* \"#utility.yul\":11179:11180   */\n      dup3\n        /* \"#utility.yul\":11176:11186   */\n      gt\n        /* \"#utility.yul\":11173:11209   */\n      iszero\n      tag_280\n      jumpi\n        /* \"#utility.yul\":11189:11207   */\n      tag_281\n      tag_155\n      jump\t// in\n    tag_281:\n        /* \"#utility.yul\":11173:11209   */\n    tag_280:\n        /* \"#utility.yul\":11025:11216   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11222:11632   */\n    tag_111:\n        /* \"#utility.yul\":11262:11269   */\n      0x00\n        /* \"#utility.yul\":11285:11305   */\n      tag_283\n        /* \"#utility.yul\":11303:11304   */\n      dup3\n        /* \"#utility.yul\":11285:11305   */\n      tag_140\n      jump\t// in\n    tag_283:\n        /* \"#utility.yul\":11280:11305   */\n      swap2\n      pop\n        /* \"#utility.yul\":11319:11339   */\n      tag_284\n        /* \"#utility.yul\":11337:11338   */\n      dup4\n        /* \"#utility.yul\":11319:11339   */\n      tag_140\n      jump\t// in\n    tag_284:\n        /* \"#utility.yul\":11314:11339   */\n      swap3\n      pop\n        /* \"#utility.yul\":11374:11375   */\n      dup3\n        /* \"#utility.yul\":11371:11372   */\n      dup3\n        /* \"#utility.yul\":11367:11376   */\n      mul\n        /* \"#utility.yul\":11396:11426   */\n      tag_285\n        /* \"#utility.yul\":11414:11425   */\n      dup2\n        /* \"#utility.yul\":11396:11426   */\n      tag_140\n      jump\t// in\n    tag_285:\n        /* \"#utility.yul\":11385:11426   */\n      swap2\n      pop\n        /* \"#utility.yul\":11575:11576   */\n      dup3\n        /* \"#utility.yul\":11566:11573   */\n      dup3\n        /* \"#utility.yul\":11562:11577   */\n      div\n        /* \"#utility.yul\":11559:11560   */\n      dup5\n        /* \"#utility.yul\":11556:11578   */\n      eq\n        /* \"#utility.yul\":11536:11537   */\n      dup4\n        /* \"#utility.yul\":11529:11538   */\n      iszero\n        /* \"#utility.yul\":11509:11592   */\n      or\n        /* \"#utility.yul\":11486:11625   */\n      tag_286\n      jumpi\n        /* \"#utility.yul\":11605:11623   */\n      tag_287\n      tag_155\n      jump\t// in\n    tag_287:\n        /* \"#utility.yul\":11486:11625   */\n    tag_286:\n        /* \"#utility.yul\":11270:11632   */\n      pop\n        /* \"#utility.yul\":11222:11632   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11638:11818   */\n    tag_166:\n        /* \"#utility.yul\":11686:11763   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":11683:11684   */\n      0x00\n        /* \"#utility.yul\":11676:11764   */\n      mstore\n        /* \"#utility.yul\":11783:11787   */\n      0x12\n        /* \"#utility.yul\":11780:11781   */\n      0x04\n        /* \"#utility.yul\":11773:11788   */\n      mstore\n        /* \"#utility.yul\":11807:11811   */\n      0x24\n        /* \"#utility.yul\":11804:11805   */\n      0x00\n        /* \"#utility.yul\":11797:11812   */\n      revert\n        /* \"#utility.yul\":11824:12009   */\n    tag_113:\n        /* \"#utility.yul\":11864:11865   */\n      0x00\n        /* \"#utility.yul\":11881:11901   */\n      tag_290\n        /* \"#utility.yul\":11899:11900   */\n      dup3\n        /* \"#utility.yul\":11881:11901   */\n      tag_140\n      jump\t// in\n    tag_290:\n        /* \"#utility.yul\":11876:11901   */\n      swap2\n      pop\n        /* \"#utility.yul\":11915:11935   */\n      tag_291\n        /* \"#utility.yul\":11933:11934   */\n      dup4\n        /* \"#utility.yul\":11915:11935   */\n      tag_140\n      jump\t// in\n    tag_291:\n        /* \"#utility.yul\":11910:11935   */\n      swap3\n      pop\n        /* \"#utility.yul\":11954:11955   */\n      dup3\n        /* \"#utility.yul\":11944:11979   */\n      tag_292\n      jumpi\n        /* \"#utility.yul\":11959:11977   */\n      tag_293\n      tag_166\n      jump\t// in\n    tag_293:\n        /* \"#utility.yul\":11944:11979   */\n    tag_292:\n        /* \"#utility.yul\":12001:12002   */\n      dup3\n        /* \"#utility.yul\":11998:11999   */\n      dup3\n        /* \"#utility.yul\":11994:12003   */\n      div\n        /* \"#utility.yul\":11989:12003   */\n      swap1\n      pop\n        /* \"#utility.yul\":11824:12009   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220855c2a73ba96bfeb5da6664fb48529a41f28b9df79b113e82659c7c9d4ace50064736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052348015600e575f80fd5b506112e68061001c5f395ff3fe608060405234801561000f575f80fd5b50600436106100a7575f3560e01c80638da5cb5b1161006f5780638da5cb5b14610129578063a694fc3a14610147578063acc3a93914610163578063ba5a531914610193578063f2fde38b1461019d578063f7c618c1146101b9576100a7565b80630660f1e8146100ab5780632e1a7d4d146100db578063372500ab146100f757806351ed6a3014610101578063715018a61461011f575b5f80fd5b6100c560048036038101906100c09190610cdb565b6101d7565b6040516100d29190610d1e565b60405180910390f35b6100f560048036038101906100f09190610d61565b6101ec565b005b6100ff6103f0565b005b610109610618565b6040516101169190610de7565b60405180910390f35b61012761063b565b005b61013161064e565b60405161013e9190610e0f565b60405180910390f35b610161600480360381019061015c9190610d61565b610683565b005b61017d60048036038101906101789190610cdb565b610931565b60405161018a9190610d1e565b60405180910390f35b61019b610946565b005b6101b760048036038101906101b29190610cdb565b610a4e565b005b6101c1610ad2565b6040516101ce9190610e48565b60405180910390f35b6004602052805f5260405f205f915090505481565b5f60035f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20541161026b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161026290610ebb565b60405180910390fd5b610273610946565b8060035f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20546102bc9190610f06565b60035f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055505f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b8152600401610357929190610f39565b6020604051808303815f875af1158015610373573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906103979190610f95565b50426002819055503373ffffffffffffffffffffffffffffffffffffffff167f884edad9ce6fa2440d8a54cc123490eb96d2768479d49ff9c7366125a9424364826040516103e59190610d1e565b60405180910390a250565b5f60045f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20541161046f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104669061100a565b60405180910390fd5b60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb3360045f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20546040518363ffffffff1660e01b8152600401610508929190610f39565b6020604051808303815f875af1158015610524573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906105489190610f95565b503373ffffffffffffffffffffffffffffffffffffffff167ffc30cddea38e2bf4d6ea7d3f9ed3b6ad7f176419f4963bd81318067a4aee73fe60045f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20546040516105cc9190610d1e565b60405180910390a25f60045f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550565b5f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b610643610af7565b61064c5f610b7e565b565b5f80610658610c4f565b9050805f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1691505090565b5f81116106c5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106bc90611098565b60405180910390fd5b805f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663dd62ed3e33306040518363ffffffff1660e01b81526004016107209291906110b6565b602060405180830381865afa15801561073b573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061075f91906110f1565b10156107a0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107979061118c565b60405180910390fd5b5f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330846040518463ffffffff1660e01b81526004016107fc939291906111aa565b6020604051808303815f875af1158015610818573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061083c9190610f95565b505f6002541461084f5761084e610946565b5b8060035f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205461089891906111df565b60035f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550426002819055503373ffffffffffffffffffffffffffffffffffffffff167f9e71bc8eea02a63969f509818f2dafb9254532904319f9dbda79b67bd34a5f3d826040516109269190610d1e565b60405180910390a250565b6003602052805f5260405f205f915090505481565b5f600254426109559190610f06565b90505f6064600460035f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20546109a49190611212565b6109ae9190611280565b90505f82826109bd9190611212565b90508060045f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054610a0891906111df565b60045f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505050565b610a56610af7565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610ac6575f6040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401610abd9190610e0f565b60405180910390fd5b610acf81610b7e565b50565b60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b610aff610c76565b73ffffffffffffffffffffffffffffffffffffffff16610b1d61064e565b73ffffffffffffffffffffffffffffffffffffffff1614610b7c57610b40610c76565b6040517f118cdaa7000000000000000000000000000000000000000000000000000000008152600401610b739190610e0f565b60405180910390fd5b565b5f610b87610c4f565b90505f815f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905082825f015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508273ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3505050565b5f7f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300905090565b5f33905090565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f610caa82610c81565b9050919050565b610cba81610ca0565b8114610cc4575f80fd5b50565b5f81359050610cd581610cb1565b92915050565b5f60208284031215610cf057610cef610c7d565b5b5f610cfd84828501610cc7565b91505092915050565b5f819050919050565b610d1881610d06565b82525050565b5f602082019050610d315f830184610d0f565b92915050565b610d4081610d06565b8114610d4a575f80fd5b50565b5f81359050610d5b81610d37565b92915050565b5f60208284031215610d7657610d75610c7d565b5b5f610d8384828501610d4d565b91505092915050565b5f819050919050565b5f610daf610daa610da584610c81565b610d8c565b610c81565b9050919050565b5f610dc082610d95565b9050919050565b5f610dd182610db6565b9050919050565b610de181610dc7565b82525050565b5f602082019050610dfa5f830184610dd8565b92915050565b610e0981610ca0565b82525050565b5f602082019050610e225f830184610e00565b92915050565b5f610e3282610db6565b9050919050565b610e4281610e28565b82525050565b5f602082019050610e5b5f830184610e39565b92915050565b5f82825260208201905092915050565b7f496e73756666696369656e74207374616b65642062616c616e636500000000005f82015250565b5f610ea5601b83610e61565b9150610eb082610e71565b602082019050919050565b5f6020820190508181035f830152610ed281610e99565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f610f1082610d06565b9150610f1b83610d06565b9250828203905081811115610f3357610f32610ed9565b5b92915050565b5f604082019050610f4c5f830185610e00565b610f596020830184610d0f565b9392505050565b5f8115159050919050565b610f7481610f60565b8114610f7e575f80fd5b50565b5f81519050610f8f81610f6b565b92915050565b5f60208284031215610faa57610fa9610c7d565b5b5f610fb784828501610f81565b91505092915050565b7f4e6f207265776172647320746f20636c61696d000000000000000000000000005f82015250565b5f610ff4601383610e61565b9150610fff82610fc0565b602082019050919050565b5f6020820190508181035f83015261102181610fe8565b9050919050565b7f54686520616d6f756e742073686f756c6420626520616c7761797320677265615f8201527f746572207468616e207a65726f00000000000000000000000000000000000000602082015250565b5f611082602d83610e61565b915061108d82611028565b604082019050919050565b5f6020820190508181035f8301526110af81611076565b9050919050565b5f6040820190506110c95f830185610e00565b6110d66020830184610e00565b9392505050565b5f815190506110eb81610d37565b92915050565b5f6020828403121561110657611105610c7d565b5b5f611113848285016110dd565b91505092915050565b7f4e6f74207365742074686520656e6f75676820616d6f756e7420666f7220616c5f8201527f6c6f77616e636500000000000000000000000000000000000000000000000000602082015250565b5f611176602783610e61565b91506111818261111c565b604082019050919050565b5f6020820190508181035f8301526111a38161116a565b9050919050565b5f6060820190506111bd5f830186610e00565b6111ca6020830185610e00565b6111d76040830184610d0f565b949350505050565b5f6111e982610d06565b91506111f483610d06565b925082820190508082111561120c5761120b610ed9565b5b92915050565b5f61121c82610d06565b915061122783610d06565b925082820261123581610d06565b9150828204841483151761124c5761124b610ed9565b5b5092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f61128a82610d06565b915061129583610d06565b9250826112a5576112a4611253565b5b82820490509291505056fea2646970667358221220855c2a73ba96bfeb5da6664fb48529a41f28b9df79b113e82659c7c9d4ace50064736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xE JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x12E6 DUP1 PUSH2 0x1C PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA7 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0x6F JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x129 JUMPI DUP1 PUSH4 0xA694FC3A EQ PUSH2 0x147 JUMPI DUP1 PUSH4 0xACC3A939 EQ PUSH2 0x163 JUMPI DUP1 PUSH4 0xBA5A5319 EQ PUSH2 0x193 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x19D JUMPI DUP1 PUSH4 0xF7C618C1 EQ PUSH2 0x1B9 JUMPI PUSH2 0xA7 JUMP JUMPDEST DUP1 PUSH4 0x660F1E8 EQ PUSH2 0xAB JUMPI DUP1 PUSH4 0x2E1A7D4D EQ PUSH2 0xDB JUMPI DUP1 PUSH4 0x372500AB EQ PUSH2 0xF7 JUMPI DUP1 PUSH4 0x51ED6A30 EQ PUSH2 0x101 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x11F JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xC5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xC0 SWAP2 SWAP1 PUSH2 0xCDB JUMP JUMPDEST PUSH2 0x1D7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xD2 SWAP2 SWAP1 PUSH2 0xD1E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xF5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xF0 SWAP2 SWAP1 PUSH2 0xD61 JUMP JUMPDEST PUSH2 0x1EC JUMP JUMPDEST STOP JUMPDEST PUSH2 0xFF PUSH2 0x3F0 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x109 PUSH2 0x618 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x116 SWAP2 SWAP1 PUSH2 0xDE7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x127 PUSH2 0x63B JUMP JUMPDEST STOP JUMPDEST PUSH2 0x131 PUSH2 0x64E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x13E SWAP2 SWAP1 PUSH2 0xE0F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x161 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x15C SWAP2 SWAP1 PUSH2 0xD61 JUMP JUMPDEST PUSH2 0x683 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x17D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x178 SWAP2 SWAP1 PUSH2 0xCDB JUMP JUMPDEST PUSH2 0x931 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x18A SWAP2 SWAP1 PUSH2 0xD1E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x19B PUSH2 0x946 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1B7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1B2 SWAP2 SWAP1 PUSH2 0xCDB JUMP JUMPDEST PUSH2 0xA4E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1C1 PUSH2 0xAD2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1CE SWAP2 SWAP1 PUSH2 0xE48 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x4 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x3 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD GT PUSH2 0x26B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x262 SWAP1 PUSH2 0xEBB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x273 PUSH2 0x946 JUMP JUMPDEST DUP1 PUSH1 0x3 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD PUSH2 0x2BC SWAP2 SWAP1 PUSH2 0xF06 JUMP JUMPDEST PUSH1 0x3 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x357 SWAP3 SWAP2 SWAP1 PUSH2 0xF39 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x373 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x397 SWAP2 SWAP1 PUSH2 0xF95 JUMP JUMPDEST POP TIMESTAMP PUSH1 0x2 DUP2 SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x884EDAD9CE6FA2440D8A54CC123490EB96D2768479D49FF9C7366125A9424364 DUP3 PUSH1 0x40 MLOAD PUSH2 0x3E5 SWAP2 SWAP1 PUSH2 0xD1E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH0 PUSH1 0x4 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD GT PUSH2 0x46F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x466 SWAP1 PUSH2 0x100A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER PUSH1 0x4 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x508 SWAP3 SWAP2 SWAP1 PUSH2 0xF39 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x524 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x548 SWAP2 SWAP1 PUSH2 0xF95 JUMP JUMPDEST POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xFC30CDDEA38E2BF4D6EA7D3F9ED3B6AD7F176419F4963BD81318067A4AEE73FE PUSH1 0x4 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD PUSH1 0x40 MLOAD PUSH2 0x5CC SWAP2 SWAP1 PUSH2 0xD1E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH0 PUSH1 0x4 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0x643 PUSH2 0xAF7 JUMP JUMPDEST PUSH2 0x64C PUSH0 PUSH2 0xB7E JUMP JUMPDEST JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x658 PUSH2 0xC4F JUMP JUMPDEST SWAP1 POP DUP1 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH0 DUP2 GT PUSH2 0x6C5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6BC SWAP1 PUSH2 0x1098 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xDD62ED3E CALLER ADDRESS PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x720 SWAP3 SWAP2 SWAP1 PUSH2 0x10B6 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x73B JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x75F SWAP2 SWAP1 PUSH2 0x10F1 JUMP JUMPDEST LT ISZERO PUSH2 0x7A0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x797 SWAP1 PUSH2 0x118C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP5 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7FC SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x11AA JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x818 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x83C SWAP2 SWAP1 PUSH2 0xF95 JUMP JUMPDEST POP PUSH0 PUSH1 0x2 SLOAD EQ PUSH2 0x84F JUMPI PUSH2 0x84E PUSH2 0x946 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x3 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD PUSH2 0x898 SWAP2 SWAP1 PUSH2 0x11DF JUMP JUMPDEST PUSH1 0x3 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP TIMESTAMP PUSH1 0x2 DUP2 SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x9E71BC8EEA02A63969F509818F2DAFB9254532904319F9DBDA79B67BD34A5F3D DUP3 PUSH1 0x40 MLOAD PUSH2 0x926 SWAP2 SWAP1 PUSH2 0xD1E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x3 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x2 SLOAD TIMESTAMP PUSH2 0x955 SWAP2 SWAP1 PUSH2 0xF06 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH1 0x64 PUSH1 0x4 PUSH1 0x3 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD PUSH2 0x9A4 SWAP2 SWAP1 PUSH2 0x1212 JUMP JUMPDEST PUSH2 0x9AE SWAP2 SWAP1 PUSH2 0x1280 JUMP JUMPDEST SWAP1 POP PUSH0 DUP3 DUP3 PUSH2 0x9BD SWAP2 SWAP1 PUSH2 0x1212 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x4 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD PUSH2 0xA08 SWAP2 SWAP1 PUSH2 0x11DF JUMP JUMPDEST PUSH1 0x4 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP POP POP JUMP JUMPDEST PUSH2 0xA56 PUSH2 0xAF7 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xAC6 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xABD SWAP2 SWAP1 PUSH2 0xE0F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xACF DUP2 PUSH2 0xB7E JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0xAFF PUSH2 0xC76 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xB1D PUSH2 0x64E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xB7C JUMPI PUSH2 0xB40 PUSH2 0xC76 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB73 SWAP2 SWAP1 PUSH2 0xE0F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 PUSH2 0xB87 PUSH2 0xC4F JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP3 DUP3 PUSH0 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 PUSH32 0x9016D09D72D40FDAE2FD8CEAC6B6234C7706214FD39C1CD1E609A0528C199300 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xCAA DUP3 PUSH2 0xC81 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xCBA DUP2 PUSH2 0xCA0 JUMP JUMPDEST DUP2 EQ PUSH2 0xCC4 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xCD5 DUP2 PUSH2 0xCB1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xCF0 JUMPI PUSH2 0xCEF PUSH2 0xC7D JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xCFD DUP5 DUP3 DUP6 ADD PUSH2 0xCC7 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xD18 DUP2 PUSH2 0xD06 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xD31 PUSH0 DUP4 ADD DUP5 PUSH2 0xD0F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xD40 DUP2 PUSH2 0xD06 JUMP JUMPDEST DUP2 EQ PUSH2 0xD4A JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xD5B DUP2 PUSH2 0xD37 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD76 JUMPI PUSH2 0xD75 PUSH2 0xC7D JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xD83 DUP5 DUP3 DUP6 ADD PUSH2 0xD4D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xDAF PUSH2 0xDAA PUSH2 0xDA5 DUP5 PUSH2 0xC81 JUMP JUMPDEST PUSH2 0xD8C JUMP JUMPDEST PUSH2 0xC81 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xDC0 DUP3 PUSH2 0xD95 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xDD1 DUP3 PUSH2 0xDB6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xDE1 DUP2 PUSH2 0xDC7 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xDFA PUSH0 DUP4 ADD DUP5 PUSH2 0xDD8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xE09 DUP2 PUSH2 0xCA0 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xE22 PUSH0 DUP4 ADD DUP5 PUSH2 0xE00 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0xE32 DUP3 PUSH2 0xDB6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xE42 DUP2 PUSH2 0xE28 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xE5B PUSH0 DUP4 ADD DUP5 PUSH2 0xE39 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E74207374616B65642062616C616E63650000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xEA5 PUSH1 0x1B DUP4 PUSH2 0xE61 JUMP JUMPDEST SWAP2 POP PUSH2 0xEB0 DUP3 PUSH2 0xE71 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xED2 DUP2 PUSH2 0xE99 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0xF10 DUP3 PUSH2 0xD06 JUMP JUMPDEST SWAP2 POP PUSH2 0xF1B DUP4 PUSH2 0xD06 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0xF33 JUMPI PUSH2 0xF32 PUSH2 0xED9 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0xF4C PUSH0 DUP4 ADD DUP6 PUSH2 0xE00 JUMP JUMPDEST PUSH2 0xF59 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xD0F JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xF74 DUP2 PUSH2 0xF60 JUMP JUMPDEST DUP2 EQ PUSH2 0xF7E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0xF8F DUP2 PUSH2 0xF6B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xFAA JUMPI PUSH2 0xFA9 PUSH2 0xC7D JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xFB7 DUP5 DUP3 DUP6 ADD PUSH2 0xF81 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E6F207265776172647320746F20636C61696D00000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xFF4 PUSH1 0x13 DUP4 PUSH2 0xE61 JUMP JUMPDEST SWAP2 POP PUSH2 0xFFF DUP3 PUSH2 0xFC0 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1021 DUP2 PUSH2 0xFE8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x54686520616D6F756E742073686F756C6420626520616C776179732067726561 PUSH0 DUP3 ADD MSTORE PUSH32 0x746572207468616E207A65726F00000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1082 PUSH1 0x2D DUP4 PUSH2 0xE61 JUMP JUMPDEST SWAP2 POP PUSH2 0x108D DUP3 PUSH2 0x1028 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x10AF DUP2 PUSH2 0x1076 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x10C9 PUSH0 DUP4 ADD DUP6 PUSH2 0xE00 JUMP JUMPDEST PUSH2 0x10D6 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xE00 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x10EB DUP2 PUSH2 0xD37 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1106 JUMPI PUSH2 0x1105 PUSH2 0xC7D JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1113 DUP5 DUP3 DUP6 ADD PUSH2 0x10DD JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E6F74207365742074686520656E6F75676820616D6F756E7420666F7220616C PUSH0 DUP3 ADD MSTORE PUSH32 0x6C6F77616E636500000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1176 PUSH1 0x27 DUP4 PUSH2 0xE61 JUMP JUMPDEST SWAP2 POP PUSH2 0x1181 DUP3 PUSH2 0x111C JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x11A3 DUP2 PUSH2 0x116A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x11BD PUSH0 DUP4 ADD DUP7 PUSH2 0xE00 JUMP JUMPDEST PUSH2 0x11CA PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0xE00 JUMP JUMPDEST PUSH2 0x11D7 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xD0F JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x11E9 DUP3 PUSH2 0xD06 JUMP JUMPDEST SWAP2 POP PUSH2 0x11F4 DUP4 PUSH2 0xD06 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x120C JUMPI PUSH2 0x120B PUSH2 0xED9 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x121C DUP3 PUSH2 0xD06 JUMP JUMPDEST SWAP2 POP PUSH2 0x1227 DUP4 PUSH2 0xD06 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x1235 DUP2 PUSH2 0xD06 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x124C JUMPI PUSH2 0x124B PUSH2 0xED9 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x128A DUP3 PUSH2 0xD06 JUMP JUMPDEST SWAP2 POP PUSH2 0x1295 DUP4 PUSH2 0xD06 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x12A5 JUMPI PUSH2 0x12A4 PUSH2 0x1253 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP6 TLOAD 0x2A PUSH20 0xBA96BFEB5DA6664FB48529A41F28B9DF79B113E8 0x26 MSIZE 0xC7 0xC9 0xD4 0xAC 0xE5 STOP PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "272:3214:10:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_checkOwner_122": {
									"entryPoint": 2807,
									"id": 122,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_getOwnableStorage_25": {
									"entryPoint": 3151,
									"id": 25,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_msgSender_476": {
									"entryPoint": 3190,
									"id": 476,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_193": {
									"entryPoint": 2942,
									"id": 193,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@calculateTotalRewards_1538": {
									"entryPoint": 2374,
									"id": 1538,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@claimRewards_1579": {
									"entryPoint": 1008,
									"id": 1579,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@owner_105": {
									"entryPoint": 1614,
									"id": 105,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceOwnership_136": {
									"entryPoint": 1595,
									"id": 136,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@rewardToken_1348": {
									"entryPoint": 2770,
									"id": 1348,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@stakeToken_1345": {
									"entryPoint": 1560,
									"id": 1345,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@stake_1447": {
									"entryPoint": 1667,
									"id": 1447,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@transferOwnership_164": {
									"entryPoint": 2638,
									"id": 164,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@userRewards_1358": {
									"entryPoint": 471,
									"id": 1358,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@userStaked_1354": {
									"entryPoint": 2353,
									"id": 1354,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@withdraw_1497": {
									"entryPoint": 492,
									"id": 1497,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 3271,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool_fromMemory": {
									"entryPoint": 3969,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 3405,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 4317,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 3291,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 3989,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 3425,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 4337,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 3584,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_contract$_RewardToken_$1306_to_t_address_fromStack": {
									"entryPoint": 3641,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_contract$_StakeToken_$1332_to_t_address_fromStack": {
									"entryPoint": 3544,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_1476f4531570197b018bd30cea07a1c62b9a95bce5c7fd24f913423271c1f390_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4458,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_584cf1690fd4124c524340f65c2f0897ce34c8cad61c485ada0c89030473339d_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4072,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_62de0d8da76f74ee61d44db19de671b1f704b747455dcaf92e282519e8ff7dd2_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3737,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_9265d513a88feb6004cd4b739a8194dd02d5c83559a911b27a38cd4f3dac6ec5_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4214,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 3343,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 3599,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed": {
									"entryPoint": 4278,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 4522,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 3897,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_RewardToken_$1306__to_t_address__fromStack_reversed": {
									"entryPoint": 3656,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_StakeToken_$1332__to_t_address__fromStack_reversed": {
									"entryPoint": 3559,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_1476f4531570197b018bd30cea07a1c62b9a95bce5c7fd24f913423271c1f390__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4492,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_584cf1690fd4124c524340f65c2f0897ce34c8cad61c485ada0c89030473339d__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4106,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_62de0d8da76f74ee61d44db19de671b1f704b747455dcaf92e282519e8ff7dd2__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3771,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9265d513a88feb6004cd4b739a8194dd02d5c83559a911b27a38cd4f3dac6ec5__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4248,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 3358,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 3681,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 4575,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 4736,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 4626,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 3846,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 3232,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 3936,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 3201,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 3334,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_contract$_RewardToken_$1306_to_t_address": {
									"entryPoint": 3624,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_contract$_StakeToken_$1332_to_t_address": {
									"entryPoint": 3527,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_address": {
									"entryPoint": 3510,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_uint160": {
									"entryPoint": 3477,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"identity": {
									"entryPoint": 3468,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 3801,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 4691,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 3197,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"store_literal_in_memory_1476f4531570197b018bd30cea07a1c62b9a95bce5c7fd24f913423271c1f390": {
									"entryPoint": 4380,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_584cf1690fd4124c524340f65c2f0897ce34c8cad61c485ada0c89030473339d": {
									"entryPoint": 4032,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_62de0d8da76f74ee61d44db19de671b1f704b747455dcaf92e282519e8ff7dd2": {
									"entryPoint": 3697,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_9265d513a88feb6004cd4b739a8194dd02d5c83559a911b27a38cd4f3dac6ec5": {
									"entryPoint": 4136,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 3249,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 3947,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 3383,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:12012:11",
										"nodeType": "YulBlock",
										"src": "0:12012:11",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:11",
													"nodeType": "YulBlock",
													"src": "47:35:11",
													"statements": [
														{
															"nativeSrc": "57:19:11",
															"nodeType": "YulAssignment",
															"src": "57:19:11",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:11",
																		"nodeType": "YulLiteral",
																		"src": "73:2:11",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:11"
																},
																"nativeSrc": "67:9:11",
																"nodeType": "YulFunctionCall",
																"src": "67:9:11"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:11"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:11",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:11",
														"nodeType": "YulTypedName",
														"src": "40:6:11",
														"type": ""
													}
												],
												"src": "7:75:11"
											},
											{
												"body": {
													"nativeSrc": "177:28:11",
													"nodeType": "YulBlock",
													"src": "177:28:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:11",
																		"nodeType": "YulLiteral",
																		"src": "194:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:11",
																		"nodeType": "YulLiteral",
																		"src": "197:1:11",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:11"
																},
																"nativeSrc": "187:12:11",
																"nodeType": "YulFunctionCall",
																"src": "187:12:11"
															},
															"nativeSrc": "187:12:11",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:11"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:11",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:11"
											},
											{
												"body": {
													"nativeSrc": "300:28:11",
													"nodeType": "YulBlock",
													"src": "300:28:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:11",
																		"nodeType": "YulLiteral",
																		"src": "317:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:11",
																		"nodeType": "YulLiteral",
																		"src": "320:1:11",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:11"
																},
																"nativeSrc": "310:12:11",
																"nodeType": "YulFunctionCall",
																"src": "310:12:11"
															},
															"nativeSrc": "310:12:11",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:11"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:11",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:11"
											},
											{
												"body": {
													"nativeSrc": "379:81:11",
													"nodeType": "YulBlock",
													"src": "379:81:11",
													"statements": [
														{
															"nativeSrc": "389:65:11",
															"nodeType": "YulAssignment",
															"src": "389:65:11",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "404:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "411:42:11",
																		"nodeType": "YulLiteral",
																		"src": "411:42:11",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "400:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:11"
																},
																"nativeSrc": "400:54:11",
																"nodeType": "YulFunctionCall",
																"src": "400:54:11"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:11",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:11"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "334:126:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:11",
														"nodeType": "YulTypedName",
														"src": "361:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:11",
														"nodeType": "YulTypedName",
														"src": "371:7:11",
														"type": ""
													}
												],
												"src": "334:126:11"
											},
											{
												"body": {
													"nativeSrc": "511:51:11",
													"nodeType": "YulBlock",
													"src": "511:51:11",
													"statements": [
														{
															"nativeSrc": "521:35:11",
															"nodeType": "YulAssignment",
															"src": "521:35:11",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "550:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:11"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "532:17:11",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:11"
																},
																"nativeSrc": "532:24:11",
																"nodeType": "YulFunctionCall",
																"src": "532:24:11"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "521:7:11",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:11"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "466:96:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "493:5:11",
														"nodeType": "YulTypedName",
														"src": "493:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "503:7:11",
														"nodeType": "YulTypedName",
														"src": "503:7:11",
														"type": ""
													}
												],
												"src": "466:96:11"
											},
											{
												"body": {
													"nativeSrc": "611:79:11",
													"nodeType": "YulBlock",
													"src": "611:79:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "668:16:11",
																"nodeType": "YulBlock",
																"src": "668:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "677:1:11",
																					"nodeType": "YulLiteral",
																					"src": "677:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "680:1:11",
																					"nodeType": "YulLiteral",
																					"src": "680:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "670:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:11"
																			},
																			"nativeSrc": "670:12:11",
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:11"
																		},
																		"nativeSrc": "670:12:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "634:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:11"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "659:5:11",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:11"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "641:17:11",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:11"
																				},
																				"nativeSrc": "641:24:11",
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:11"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "631:2:11",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:11"
																		},
																		"nativeSrc": "631:35:11",
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "624:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:11"
																},
																"nativeSrc": "624:43:11",
																"nodeType": "YulFunctionCall",
																"src": "624:43:11"
															},
															"nativeSrc": "621:63:11",
															"nodeType": "YulIf",
															"src": "621:63:11"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "568:122:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "604:5:11",
														"nodeType": "YulTypedName",
														"src": "604:5:11",
														"type": ""
													}
												],
												"src": "568:122:11"
											},
											{
												"body": {
													"nativeSrc": "748:87:11",
													"nodeType": "YulBlock",
													"src": "748:87:11",
													"statements": [
														{
															"nativeSrc": "758:29:11",
															"nodeType": "YulAssignment",
															"src": "758:29:11",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "780:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "780:6:11"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "767:12:11",
																	"nodeType": "YulIdentifier",
																	"src": "767:12:11"
																},
																"nativeSrc": "767:20:11",
																"nodeType": "YulFunctionCall",
																"src": "767:20:11"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "758:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "758:5:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "823:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "823:5:11"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "796:26:11",
																	"nodeType": "YulIdentifier",
																	"src": "796:26:11"
																},
																"nativeSrc": "796:33:11",
																"nodeType": "YulFunctionCall",
																"src": "796:33:11"
															},
															"nativeSrc": "796:33:11",
															"nodeType": "YulExpressionStatement",
															"src": "796:33:11"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "696:139:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "726:6:11",
														"nodeType": "YulTypedName",
														"src": "726:6:11",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "734:3:11",
														"nodeType": "YulTypedName",
														"src": "734:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "742:5:11",
														"nodeType": "YulTypedName",
														"src": "742:5:11",
														"type": ""
													}
												],
												"src": "696:139:11"
											},
											{
												"body": {
													"nativeSrc": "907:263:11",
													"nodeType": "YulBlock",
													"src": "907:263:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "953:83:11",
																"nodeType": "YulBlock",
																"src": "953:83:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "955:77:11",
																				"nodeType": "YulIdentifier",
																				"src": "955:77:11"
																			},
																			"nativeSrc": "955:79:11",
																			"nodeType": "YulFunctionCall",
																			"src": "955:79:11"
																		},
																		"nativeSrc": "955:79:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "955:79:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "928:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "928:7:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "937:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "937:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "924:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "924:3:11"
																		},
																		"nativeSrc": "924:23:11",
																		"nodeType": "YulFunctionCall",
																		"src": "924:23:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "949:2:11",
																		"nodeType": "YulLiteral",
																		"src": "949:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "920:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "920:3:11"
																},
																"nativeSrc": "920:32:11",
																"nodeType": "YulFunctionCall",
																"src": "920:32:11"
															},
															"nativeSrc": "917:119:11",
															"nodeType": "YulIf",
															"src": "917:119:11"
														},
														{
															"nativeSrc": "1046:117:11",
															"nodeType": "YulBlock",
															"src": "1046:117:11",
															"statements": [
																{
																	"nativeSrc": "1061:15:11",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1061:15:11",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1075:1:11",
																		"nodeType": "YulLiteral",
																		"src": "1075:1:11",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1065:6:11",
																			"nodeType": "YulTypedName",
																			"src": "1065:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1090:63:11",
																	"nodeType": "YulAssignment",
																	"src": "1090:63:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1125:9:11",
																						"nodeType": "YulIdentifier",
																						"src": "1125:9:11"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1136:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "1136:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1121:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "1121:3:11"
																				},
																				"nativeSrc": "1121:22:11",
																				"nodeType": "YulFunctionCall",
																				"src": "1121:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1145:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "1145:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "1100:20:11",
																			"nodeType": "YulIdentifier",
																			"src": "1100:20:11"
																		},
																		"nativeSrc": "1100:53:11",
																		"nodeType": "YulFunctionCall",
																		"src": "1100:53:11"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1090:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "1090:6:11"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "841:329:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "877:9:11",
														"nodeType": "YulTypedName",
														"src": "877:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "888:7:11",
														"nodeType": "YulTypedName",
														"src": "888:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "900:6:11",
														"nodeType": "YulTypedName",
														"src": "900:6:11",
														"type": ""
													}
												],
												"src": "841:329:11"
											},
											{
												"body": {
													"nativeSrc": "1221:32:11",
													"nodeType": "YulBlock",
													"src": "1221:32:11",
													"statements": [
														{
															"nativeSrc": "1231:16:11",
															"nodeType": "YulAssignment",
															"src": "1231:16:11",
															"value": {
																"name": "value",
																"nativeSrc": "1242:5:11",
																"nodeType": "YulIdentifier",
																"src": "1242:5:11"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1231:7:11",
																	"nodeType": "YulIdentifier",
																	"src": "1231:7:11"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "1176:77:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1203:5:11",
														"nodeType": "YulTypedName",
														"src": "1203:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1213:7:11",
														"nodeType": "YulTypedName",
														"src": "1213:7:11",
														"type": ""
													}
												],
												"src": "1176:77:11"
											},
											{
												"body": {
													"nativeSrc": "1324:53:11",
													"nodeType": "YulBlock",
													"src": "1324:53:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1341:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "1341:3:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1364:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "1364:5:11"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "1346:17:11",
																			"nodeType": "YulIdentifier",
																			"src": "1346:17:11"
																		},
																		"nativeSrc": "1346:24:11",
																		"nodeType": "YulFunctionCall",
																		"src": "1346:24:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1334:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "1334:6:11"
																},
																"nativeSrc": "1334:37:11",
																"nodeType": "YulFunctionCall",
																"src": "1334:37:11"
															},
															"nativeSrc": "1334:37:11",
															"nodeType": "YulExpressionStatement",
															"src": "1334:37:11"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "1259:118:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1312:5:11",
														"nodeType": "YulTypedName",
														"src": "1312:5:11",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1319:3:11",
														"nodeType": "YulTypedName",
														"src": "1319:3:11",
														"type": ""
													}
												],
												"src": "1259:118:11"
											},
											{
												"body": {
													"nativeSrc": "1481:124:11",
													"nodeType": "YulBlock",
													"src": "1481:124:11",
													"statements": [
														{
															"nativeSrc": "1491:26:11",
															"nodeType": "YulAssignment",
															"src": "1491:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1503:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "1503:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1514:2:11",
																		"nodeType": "YulLiteral",
																		"src": "1514:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1499:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "1499:3:11"
																},
																"nativeSrc": "1499:18:11",
																"nodeType": "YulFunctionCall",
																"src": "1499:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1491:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "1491:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1571:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "1571:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1584:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "1584:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1595:1:11",
																				"nodeType": "YulLiteral",
																				"src": "1595:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1580:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "1580:3:11"
																		},
																		"nativeSrc": "1580:17:11",
																		"nodeType": "YulFunctionCall",
																		"src": "1580:17:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "1527:43:11",
																	"nodeType": "YulIdentifier",
																	"src": "1527:43:11"
																},
																"nativeSrc": "1527:71:11",
																"nodeType": "YulFunctionCall",
																"src": "1527:71:11"
															},
															"nativeSrc": "1527:71:11",
															"nodeType": "YulExpressionStatement",
															"src": "1527:71:11"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "1383:222:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1453:9:11",
														"nodeType": "YulTypedName",
														"src": "1453:9:11",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1465:6:11",
														"nodeType": "YulTypedName",
														"src": "1465:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1476:4:11",
														"nodeType": "YulTypedName",
														"src": "1476:4:11",
														"type": ""
													}
												],
												"src": "1383:222:11"
											},
											{
												"body": {
													"nativeSrc": "1654:79:11",
													"nodeType": "YulBlock",
													"src": "1654:79:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "1711:16:11",
																"nodeType": "YulBlock",
																"src": "1711:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1720:1:11",
																					"nodeType": "YulLiteral",
																					"src": "1720:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1723:1:11",
																					"nodeType": "YulLiteral",
																					"src": "1723:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1713:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "1713:6:11"
																			},
																			"nativeSrc": "1713:12:11",
																			"nodeType": "YulFunctionCall",
																			"src": "1713:12:11"
																		},
																		"nativeSrc": "1713:12:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "1713:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1677:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "1677:5:11"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1702:5:11",
																						"nodeType": "YulIdentifier",
																						"src": "1702:5:11"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "1684:17:11",
																					"nodeType": "YulIdentifier",
																					"src": "1684:17:11"
																				},
																				"nativeSrc": "1684:24:11",
																				"nodeType": "YulFunctionCall",
																				"src": "1684:24:11"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1674:2:11",
																			"nodeType": "YulIdentifier",
																			"src": "1674:2:11"
																		},
																		"nativeSrc": "1674:35:11",
																		"nodeType": "YulFunctionCall",
																		"src": "1674:35:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1667:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "1667:6:11"
																},
																"nativeSrc": "1667:43:11",
																"nodeType": "YulFunctionCall",
																"src": "1667:43:11"
															},
															"nativeSrc": "1664:63:11",
															"nodeType": "YulIf",
															"src": "1664:63:11"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "1611:122:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1647:5:11",
														"nodeType": "YulTypedName",
														"src": "1647:5:11",
														"type": ""
													}
												],
												"src": "1611:122:11"
											},
											{
												"body": {
													"nativeSrc": "1791:87:11",
													"nodeType": "YulBlock",
													"src": "1791:87:11",
													"statements": [
														{
															"nativeSrc": "1801:29:11",
															"nodeType": "YulAssignment",
															"src": "1801:29:11",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1823:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "1823:6:11"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1810:12:11",
																	"nodeType": "YulIdentifier",
																	"src": "1810:12:11"
																},
																"nativeSrc": "1810:20:11",
																"nodeType": "YulFunctionCall",
																"src": "1810:20:11"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1801:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "1801:5:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1866:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "1866:5:11"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "1839:26:11",
																	"nodeType": "YulIdentifier",
																	"src": "1839:26:11"
																},
																"nativeSrc": "1839:33:11",
																"nodeType": "YulFunctionCall",
																"src": "1839:33:11"
															},
															"nativeSrc": "1839:33:11",
															"nodeType": "YulExpressionStatement",
															"src": "1839:33:11"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "1739:139:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1769:6:11",
														"nodeType": "YulTypedName",
														"src": "1769:6:11",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1777:3:11",
														"nodeType": "YulTypedName",
														"src": "1777:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1785:5:11",
														"nodeType": "YulTypedName",
														"src": "1785:5:11",
														"type": ""
													}
												],
												"src": "1739:139:11"
											},
											{
												"body": {
													"nativeSrc": "1950:263:11",
													"nodeType": "YulBlock",
													"src": "1950:263:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "1996:83:11",
																"nodeType": "YulBlock",
																"src": "1996:83:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "1998:77:11",
																				"nodeType": "YulIdentifier",
																				"src": "1998:77:11"
																			},
																			"nativeSrc": "1998:79:11",
																			"nodeType": "YulFunctionCall",
																			"src": "1998:79:11"
																		},
																		"nativeSrc": "1998:79:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "1998:79:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1971:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "1971:7:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1980:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "1980:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1967:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "1967:3:11"
																		},
																		"nativeSrc": "1967:23:11",
																		"nodeType": "YulFunctionCall",
																		"src": "1967:23:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1992:2:11",
																		"nodeType": "YulLiteral",
																		"src": "1992:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1963:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "1963:3:11"
																},
																"nativeSrc": "1963:32:11",
																"nodeType": "YulFunctionCall",
																"src": "1963:32:11"
															},
															"nativeSrc": "1960:119:11",
															"nodeType": "YulIf",
															"src": "1960:119:11"
														},
														{
															"nativeSrc": "2089:117:11",
															"nodeType": "YulBlock",
															"src": "2089:117:11",
															"statements": [
																{
																	"nativeSrc": "2104:15:11",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2104:15:11",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2118:1:11",
																		"nodeType": "YulLiteral",
																		"src": "2118:1:11",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2108:6:11",
																			"nodeType": "YulTypedName",
																			"src": "2108:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2133:63:11",
																	"nodeType": "YulAssignment",
																	"src": "2133:63:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2168:9:11",
																						"nodeType": "YulIdentifier",
																						"src": "2168:9:11"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2179:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "2179:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2164:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "2164:3:11"
																				},
																				"nativeSrc": "2164:22:11",
																				"nodeType": "YulFunctionCall",
																				"src": "2164:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2188:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "2188:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "2143:20:11",
																			"nodeType": "YulIdentifier",
																			"src": "2143:20:11"
																		},
																		"nativeSrc": "2143:53:11",
																		"nodeType": "YulFunctionCall",
																		"src": "2143:53:11"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "2133:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "2133:6:11"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "1884:329:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1920:9:11",
														"nodeType": "YulTypedName",
														"src": "1920:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1931:7:11",
														"nodeType": "YulTypedName",
														"src": "1931:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1943:6:11",
														"nodeType": "YulTypedName",
														"src": "1943:6:11",
														"type": ""
													}
												],
												"src": "1884:329:11"
											},
											{
												"body": {
													"nativeSrc": "2251:28:11",
													"nodeType": "YulBlock",
													"src": "2251:28:11",
													"statements": [
														{
															"nativeSrc": "2261:12:11",
															"nodeType": "YulAssignment",
															"src": "2261:12:11",
															"value": {
																"name": "value",
																"nativeSrc": "2268:5:11",
																"nodeType": "YulIdentifier",
																"src": "2268:5:11"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "2261:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "2261:3:11"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "2219:60:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2237:5:11",
														"nodeType": "YulTypedName",
														"src": "2237:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "2247:3:11",
														"nodeType": "YulTypedName",
														"src": "2247:3:11",
														"type": ""
													}
												],
												"src": "2219:60:11"
											},
											{
												"body": {
													"nativeSrc": "2345:82:11",
													"nodeType": "YulBlock",
													"src": "2345:82:11",
													"statements": [
														{
															"nativeSrc": "2355:66:11",
															"nodeType": "YulAssignment",
															"src": "2355:66:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2413:5:11",
																						"nodeType": "YulIdentifier",
																						"src": "2413:5:11"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint160",
																					"nativeSrc": "2395:17:11",
																					"nodeType": "YulIdentifier",
																					"src": "2395:17:11"
																				},
																				"nativeSrc": "2395:24:11",
																				"nodeType": "YulFunctionCall",
																				"src": "2395:24:11"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "2386:8:11",
																			"nodeType": "YulIdentifier",
																			"src": "2386:8:11"
																		},
																		"nativeSrc": "2386:34:11",
																		"nodeType": "YulFunctionCall",
																		"src": "2386:34:11"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "2368:17:11",
																	"nodeType": "YulIdentifier",
																	"src": "2368:17:11"
																},
																"nativeSrc": "2368:53:11",
																"nodeType": "YulFunctionCall",
																"src": "2368:53:11"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "2355:9:11",
																	"nodeType": "YulIdentifier",
																	"src": "2355:9:11"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_uint160",
												"nativeSrc": "2285:142:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2325:5:11",
														"nodeType": "YulTypedName",
														"src": "2325:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "2335:9:11",
														"nodeType": "YulTypedName",
														"src": "2335:9:11",
														"type": ""
													}
												],
												"src": "2285:142:11"
											},
											{
												"body": {
													"nativeSrc": "2493:66:11",
													"nodeType": "YulBlock",
													"src": "2493:66:11",
													"statements": [
														{
															"nativeSrc": "2503:50:11",
															"nodeType": "YulAssignment",
															"src": "2503:50:11",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2547:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "2547:5:11"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_uint160",
																	"nativeSrc": "2516:30:11",
																	"nodeType": "YulIdentifier",
																	"src": "2516:30:11"
																},
																"nativeSrc": "2516:37:11",
																"nodeType": "YulFunctionCall",
																"src": "2516:37:11"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "2503:9:11",
																	"nodeType": "YulIdentifier",
																	"src": "2503:9:11"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_address",
												"nativeSrc": "2433:126:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2473:5:11",
														"nodeType": "YulTypedName",
														"src": "2473:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "2483:9:11",
														"nodeType": "YulTypedName",
														"src": "2483:9:11",
														"type": ""
													}
												],
												"src": "2433:126:11"
											},
											{
												"body": {
													"nativeSrc": "2644:66:11",
													"nodeType": "YulBlock",
													"src": "2644:66:11",
													"statements": [
														{
															"nativeSrc": "2654:50:11",
															"nodeType": "YulAssignment",
															"src": "2654:50:11",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2698:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "2698:5:11"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_address",
																	"nativeSrc": "2667:30:11",
																	"nodeType": "YulIdentifier",
																	"src": "2667:30:11"
																},
																"nativeSrc": "2667:37:11",
																"nodeType": "YulFunctionCall",
																"src": "2667:37:11"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "2654:9:11",
																	"nodeType": "YulIdentifier",
																	"src": "2654:9:11"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_StakeToken_$1332_to_t_address",
												"nativeSrc": "2565:145:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2624:5:11",
														"nodeType": "YulTypedName",
														"src": "2624:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "2634:9:11",
														"nodeType": "YulTypedName",
														"src": "2634:9:11",
														"type": ""
													}
												],
												"src": "2565:145:11"
											},
											{
												"body": {
													"nativeSrc": "2800:85:11",
													"nodeType": "YulBlock",
													"src": "2800:85:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2817:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "2817:3:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2872:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "2872:5:11"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_contract$_StakeToken_$1332_to_t_address",
																			"nativeSrc": "2822:49:11",
																			"nodeType": "YulIdentifier",
																			"src": "2822:49:11"
																		},
																		"nativeSrc": "2822:56:11",
																		"nodeType": "YulFunctionCall",
																		"src": "2822:56:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2810:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "2810:6:11"
																},
																"nativeSrc": "2810:69:11",
																"nodeType": "YulFunctionCall",
																"src": "2810:69:11"
															},
															"nativeSrc": "2810:69:11",
															"nodeType": "YulExpressionStatement",
															"src": "2810:69:11"
														}
													]
												},
												"name": "abi_encode_t_contract$_StakeToken_$1332_to_t_address_fromStack",
												"nativeSrc": "2716:169:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2788:5:11",
														"nodeType": "YulTypedName",
														"src": "2788:5:11",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "2795:3:11",
														"nodeType": "YulTypedName",
														"src": "2795:3:11",
														"type": ""
													}
												],
												"src": "2716:169:11"
											},
											{
												"body": {
													"nativeSrc": "3008:143:11",
													"nodeType": "YulBlock",
													"src": "3008:143:11",
													"statements": [
														{
															"nativeSrc": "3018:26:11",
															"nodeType": "YulAssignment",
															"src": "3018:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3030:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "3030:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3041:2:11",
																		"nodeType": "YulLiteral",
																		"src": "3041:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3026:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "3026:3:11"
																},
																"nativeSrc": "3026:18:11",
																"nodeType": "YulFunctionCall",
																"src": "3026:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3018:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "3018:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3117:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "3117:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3130:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "3130:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3141:1:11",
																				"nodeType": "YulLiteral",
																				"src": "3141:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3126:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "3126:3:11"
																		},
																		"nativeSrc": "3126:17:11",
																		"nodeType": "YulFunctionCall",
																		"src": "3126:17:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_StakeToken_$1332_to_t_address_fromStack",
																	"nativeSrc": "3054:62:11",
																	"nodeType": "YulIdentifier",
																	"src": "3054:62:11"
																},
																"nativeSrc": "3054:90:11",
																"nodeType": "YulFunctionCall",
																"src": "3054:90:11"
															},
															"nativeSrc": "3054:90:11",
															"nodeType": "YulExpressionStatement",
															"src": "3054:90:11"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_StakeToken_$1332__to_t_address__fromStack_reversed",
												"nativeSrc": "2891:260:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2980:9:11",
														"nodeType": "YulTypedName",
														"src": "2980:9:11",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2992:6:11",
														"nodeType": "YulTypedName",
														"src": "2992:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3003:4:11",
														"nodeType": "YulTypedName",
														"src": "3003:4:11",
														"type": ""
													}
												],
												"src": "2891:260:11"
											},
											{
												"body": {
													"nativeSrc": "3222:53:11",
													"nodeType": "YulBlock",
													"src": "3222:53:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3239:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "3239:3:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3262:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "3262:5:11"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "3244:17:11",
																			"nodeType": "YulIdentifier",
																			"src": "3244:17:11"
																		},
																		"nativeSrc": "3244:24:11",
																		"nodeType": "YulFunctionCall",
																		"src": "3244:24:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3232:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "3232:6:11"
																},
																"nativeSrc": "3232:37:11",
																"nodeType": "YulFunctionCall",
																"src": "3232:37:11"
															},
															"nativeSrc": "3232:37:11",
															"nodeType": "YulExpressionStatement",
															"src": "3232:37:11"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "3157:118:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3210:5:11",
														"nodeType": "YulTypedName",
														"src": "3210:5:11",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3217:3:11",
														"nodeType": "YulTypedName",
														"src": "3217:3:11",
														"type": ""
													}
												],
												"src": "3157:118:11"
											},
											{
												"body": {
													"nativeSrc": "3379:124:11",
													"nodeType": "YulBlock",
													"src": "3379:124:11",
													"statements": [
														{
															"nativeSrc": "3389:26:11",
															"nodeType": "YulAssignment",
															"src": "3389:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3401:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "3401:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3412:2:11",
																		"nodeType": "YulLiteral",
																		"src": "3412:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3397:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "3397:3:11"
																},
																"nativeSrc": "3397:18:11",
																"nodeType": "YulFunctionCall",
																"src": "3397:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3389:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "3389:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3469:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "3469:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3482:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "3482:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3493:1:11",
																				"nodeType": "YulLiteral",
																				"src": "3493:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3478:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "3478:3:11"
																		},
																		"nativeSrc": "3478:17:11",
																		"nodeType": "YulFunctionCall",
																		"src": "3478:17:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "3425:43:11",
																	"nodeType": "YulIdentifier",
																	"src": "3425:43:11"
																},
																"nativeSrc": "3425:71:11",
																"nodeType": "YulFunctionCall",
																"src": "3425:71:11"
															},
															"nativeSrc": "3425:71:11",
															"nodeType": "YulExpressionStatement",
															"src": "3425:71:11"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "3281:222:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3351:9:11",
														"nodeType": "YulTypedName",
														"src": "3351:9:11",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3363:6:11",
														"nodeType": "YulTypedName",
														"src": "3363:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3374:4:11",
														"nodeType": "YulTypedName",
														"src": "3374:4:11",
														"type": ""
													}
												],
												"src": "3281:222:11"
											},
											{
												"body": {
													"nativeSrc": "3589:66:11",
													"nodeType": "YulBlock",
													"src": "3589:66:11",
													"statements": [
														{
															"nativeSrc": "3599:50:11",
															"nodeType": "YulAssignment",
															"src": "3599:50:11",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3643:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "3643:5:11"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_address",
																	"nativeSrc": "3612:30:11",
																	"nodeType": "YulIdentifier",
																	"src": "3612:30:11"
																},
																"nativeSrc": "3612:37:11",
																"nodeType": "YulFunctionCall",
																"src": "3612:37:11"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "3599:9:11",
																	"nodeType": "YulIdentifier",
																	"src": "3599:9:11"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_RewardToken_$1306_to_t_address",
												"nativeSrc": "3509:146:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3569:5:11",
														"nodeType": "YulTypedName",
														"src": "3569:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "3579:9:11",
														"nodeType": "YulTypedName",
														"src": "3579:9:11",
														"type": ""
													}
												],
												"src": "3509:146:11"
											},
											{
												"body": {
													"nativeSrc": "3746:86:11",
													"nodeType": "YulBlock",
													"src": "3746:86:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3763:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "3763:3:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3819:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "3819:5:11"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_contract$_RewardToken_$1306_to_t_address",
																			"nativeSrc": "3768:50:11",
																			"nodeType": "YulIdentifier",
																			"src": "3768:50:11"
																		},
																		"nativeSrc": "3768:57:11",
																		"nodeType": "YulFunctionCall",
																		"src": "3768:57:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3756:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "3756:6:11"
																},
																"nativeSrc": "3756:70:11",
																"nodeType": "YulFunctionCall",
																"src": "3756:70:11"
															},
															"nativeSrc": "3756:70:11",
															"nodeType": "YulExpressionStatement",
															"src": "3756:70:11"
														}
													]
												},
												"name": "abi_encode_t_contract$_RewardToken_$1306_to_t_address_fromStack",
												"nativeSrc": "3661:171:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3734:5:11",
														"nodeType": "YulTypedName",
														"src": "3734:5:11",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3741:3:11",
														"nodeType": "YulTypedName",
														"src": "3741:3:11",
														"type": ""
													}
												],
												"src": "3661:171:11"
											},
											{
												"body": {
													"nativeSrc": "3956:144:11",
													"nodeType": "YulBlock",
													"src": "3956:144:11",
													"statements": [
														{
															"nativeSrc": "3966:26:11",
															"nodeType": "YulAssignment",
															"src": "3966:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3978:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "3978:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3989:2:11",
																		"nodeType": "YulLiteral",
																		"src": "3989:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3974:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "3974:3:11"
																},
																"nativeSrc": "3974:18:11",
																"nodeType": "YulFunctionCall",
																"src": "3974:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3966:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "3966:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "4066:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "4066:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4079:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "4079:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4090:1:11",
																				"nodeType": "YulLiteral",
																				"src": "4090:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4075:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "4075:3:11"
																		},
																		"nativeSrc": "4075:17:11",
																		"nodeType": "YulFunctionCall",
																		"src": "4075:17:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_RewardToken_$1306_to_t_address_fromStack",
																	"nativeSrc": "4002:63:11",
																	"nodeType": "YulIdentifier",
																	"src": "4002:63:11"
																},
																"nativeSrc": "4002:91:11",
																"nodeType": "YulFunctionCall",
																"src": "4002:91:11"
															},
															"nativeSrc": "4002:91:11",
															"nodeType": "YulExpressionStatement",
															"src": "4002:91:11"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_RewardToken_$1306__to_t_address__fromStack_reversed",
												"nativeSrc": "3838:262:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3928:9:11",
														"nodeType": "YulTypedName",
														"src": "3928:9:11",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3940:6:11",
														"nodeType": "YulTypedName",
														"src": "3940:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3951:4:11",
														"nodeType": "YulTypedName",
														"src": "3951:4:11",
														"type": ""
													}
												],
												"src": "3838:262:11"
											},
											{
												"body": {
													"nativeSrc": "4202:73:11",
													"nodeType": "YulBlock",
													"src": "4202:73:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4219:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "4219:3:11"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "4224:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "4224:6:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4212:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "4212:6:11"
																},
																"nativeSrc": "4212:19:11",
																"nodeType": "YulFunctionCall",
																"src": "4212:19:11"
															},
															"nativeSrc": "4212:19:11",
															"nodeType": "YulExpressionStatement",
															"src": "4212:19:11"
														},
														{
															"nativeSrc": "4240:29:11",
															"nodeType": "YulAssignment",
															"src": "4240:29:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4259:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "4259:3:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4264:4:11",
																		"nodeType": "YulLiteral",
																		"src": "4264:4:11",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4255:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "4255:3:11"
																},
																"nativeSrc": "4255:14:11",
																"nodeType": "YulFunctionCall",
																"src": "4255:14:11"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "4240:11:11",
																	"nodeType": "YulIdentifier",
																	"src": "4240:11:11"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "4106:169:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "4174:3:11",
														"nodeType": "YulTypedName",
														"src": "4174:3:11",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "4179:6:11",
														"nodeType": "YulTypedName",
														"src": "4179:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "4190:11:11",
														"nodeType": "YulTypedName",
														"src": "4190:11:11",
														"type": ""
													}
												],
												"src": "4106:169:11"
											},
											{
												"body": {
													"nativeSrc": "4387:71:11",
													"nodeType": "YulBlock",
													"src": "4387:71:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "4409:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "4409:6:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4417:1:11",
																				"nodeType": "YulLiteral",
																				"src": "4417:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4405:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "4405:3:11"
																		},
																		"nativeSrc": "4405:14:11",
																		"nodeType": "YulFunctionCall",
																		"src": "4405:14:11"
																	},
																	{
																		"hexValue": "496e73756666696369656e74207374616b65642062616c616e6365",
																		"kind": "string",
																		"nativeSrc": "4421:29:11",
																		"nodeType": "YulLiteral",
																		"src": "4421:29:11",
																		"type": "",
																		"value": "Insufficient staked balance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4398:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "4398:6:11"
																},
																"nativeSrc": "4398:53:11",
																"nodeType": "YulFunctionCall",
																"src": "4398:53:11"
															},
															"nativeSrc": "4398:53:11",
															"nodeType": "YulExpressionStatement",
															"src": "4398:53:11"
														}
													]
												},
												"name": "store_literal_in_memory_62de0d8da76f74ee61d44db19de671b1f704b747455dcaf92e282519e8ff7dd2",
												"nativeSrc": "4281:177:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "4379:6:11",
														"nodeType": "YulTypedName",
														"src": "4379:6:11",
														"type": ""
													}
												],
												"src": "4281:177:11"
											},
											{
												"body": {
													"nativeSrc": "4610:220:11",
													"nodeType": "YulBlock",
													"src": "4610:220:11",
													"statements": [
														{
															"nativeSrc": "4620:74:11",
															"nodeType": "YulAssignment",
															"src": "4620:74:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4686:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "4686:3:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4691:2:11",
																		"nodeType": "YulLiteral",
																		"src": "4691:2:11",
																		"type": "",
																		"value": "27"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "4627:58:11",
																	"nodeType": "YulIdentifier",
																	"src": "4627:58:11"
																},
																"nativeSrc": "4627:67:11",
																"nodeType": "YulFunctionCall",
																"src": "4627:67:11"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "4620:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "4620:3:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4792:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "4792:3:11"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_62de0d8da76f74ee61d44db19de671b1f704b747455dcaf92e282519e8ff7dd2",
																	"nativeSrc": "4703:88:11",
																	"nodeType": "YulIdentifier",
																	"src": "4703:88:11"
																},
																"nativeSrc": "4703:93:11",
																"nodeType": "YulFunctionCall",
																"src": "4703:93:11"
															},
															"nativeSrc": "4703:93:11",
															"nodeType": "YulExpressionStatement",
															"src": "4703:93:11"
														},
														{
															"nativeSrc": "4805:19:11",
															"nodeType": "YulAssignment",
															"src": "4805:19:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4816:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "4816:3:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4821:2:11",
																		"nodeType": "YulLiteral",
																		"src": "4821:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4812:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "4812:3:11"
																},
																"nativeSrc": "4812:12:11",
																"nodeType": "YulFunctionCall",
																"src": "4812:12:11"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "4805:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "4805:3:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_62de0d8da76f74ee61d44db19de671b1f704b747455dcaf92e282519e8ff7dd2_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "4464:366:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "4598:3:11",
														"nodeType": "YulTypedName",
														"src": "4598:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "4606:3:11",
														"nodeType": "YulTypedName",
														"src": "4606:3:11",
														"type": ""
													}
												],
												"src": "4464:366:11"
											},
											{
												"body": {
													"nativeSrc": "5007:248:11",
													"nodeType": "YulBlock",
													"src": "5007:248:11",
													"statements": [
														{
															"nativeSrc": "5017:26:11",
															"nodeType": "YulAssignment",
															"src": "5017:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5029:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "5029:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5040:2:11",
																		"nodeType": "YulLiteral",
																		"src": "5040:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5025:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "5025:3:11"
																},
																"nativeSrc": "5025:18:11",
																"nodeType": "YulFunctionCall",
																"src": "5025:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5017:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "5017:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5064:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "5064:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5075:1:11",
																				"nodeType": "YulLiteral",
																				"src": "5075:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5060:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "5060:3:11"
																		},
																		"nativeSrc": "5060:17:11",
																		"nodeType": "YulFunctionCall",
																		"src": "5060:17:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "5083:4:11",
																				"nodeType": "YulIdentifier",
																				"src": "5083:4:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5089:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "5089:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5079:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "5079:3:11"
																		},
																		"nativeSrc": "5079:20:11",
																		"nodeType": "YulFunctionCall",
																		"src": "5079:20:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5053:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "5053:6:11"
																},
																"nativeSrc": "5053:47:11",
																"nodeType": "YulFunctionCall",
																"src": "5053:47:11"
															},
															"nativeSrc": "5053:47:11",
															"nodeType": "YulExpressionStatement",
															"src": "5053:47:11"
														},
														{
															"nativeSrc": "5109:139:11",
															"nodeType": "YulAssignment",
															"src": "5109:139:11",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "5243:4:11",
																		"nodeType": "YulIdentifier",
																		"src": "5243:4:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_62de0d8da76f74ee61d44db19de671b1f704b747455dcaf92e282519e8ff7dd2_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "5117:124:11",
																	"nodeType": "YulIdentifier",
																	"src": "5117:124:11"
																},
																"nativeSrc": "5117:131:11",
																"nodeType": "YulFunctionCall",
																"src": "5117:131:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5109:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "5109:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_62de0d8da76f74ee61d44db19de671b1f704b747455dcaf92e282519e8ff7dd2__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "4836:419:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4987:9:11",
														"nodeType": "YulTypedName",
														"src": "4987:9:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5002:4:11",
														"nodeType": "YulTypedName",
														"src": "5002:4:11",
														"type": ""
													}
												],
												"src": "4836:419:11"
											},
											{
												"body": {
													"nativeSrc": "5289:152:11",
													"nodeType": "YulBlock",
													"src": "5289:152:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5306:1:11",
																		"nodeType": "YulLiteral",
																		"src": "5306:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5309:77:11",
																		"nodeType": "YulLiteral",
																		"src": "5309:77:11",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5299:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "5299:6:11"
																},
																"nativeSrc": "5299:88:11",
																"nodeType": "YulFunctionCall",
																"src": "5299:88:11"
															},
															"nativeSrc": "5299:88:11",
															"nodeType": "YulExpressionStatement",
															"src": "5299:88:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5403:1:11",
																		"nodeType": "YulLiteral",
																		"src": "5403:1:11",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5406:4:11",
																		"nodeType": "YulLiteral",
																		"src": "5406:4:11",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5396:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "5396:6:11"
																},
																"nativeSrc": "5396:15:11",
																"nodeType": "YulFunctionCall",
																"src": "5396:15:11"
															},
															"nativeSrc": "5396:15:11",
															"nodeType": "YulExpressionStatement",
															"src": "5396:15:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5427:1:11",
																		"nodeType": "YulLiteral",
																		"src": "5427:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5430:4:11",
																		"nodeType": "YulLiteral",
																		"src": "5430:4:11",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "5420:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "5420:6:11"
																},
																"nativeSrc": "5420:15:11",
																"nodeType": "YulFunctionCall",
																"src": "5420:15:11"
															},
															"nativeSrc": "5420:15:11",
															"nodeType": "YulExpressionStatement",
															"src": "5420:15:11"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "5261:180:11",
												"nodeType": "YulFunctionDefinition",
												"src": "5261:180:11"
											},
											{
												"body": {
													"nativeSrc": "5492:149:11",
													"nodeType": "YulBlock",
													"src": "5492:149:11",
													"statements": [
														{
															"nativeSrc": "5502:25:11",
															"nodeType": "YulAssignment",
															"src": "5502:25:11",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "5525:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "5525:1:11"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "5507:17:11",
																	"nodeType": "YulIdentifier",
																	"src": "5507:17:11"
																},
																"nativeSrc": "5507:20:11",
																"nodeType": "YulFunctionCall",
																"src": "5507:20:11"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "5502:1:11",
																	"nodeType": "YulIdentifier",
																	"src": "5502:1:11"
																}
															]
														},
														{
															"nativeSrc": "5536:25:11",
															"nodeType": "YulAssignment",
															"src": "5536:25:11",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "5559:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "5559:1:11"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "5541:17:11",
																	"nodeType": "YulIdentifier",
																	"src": "5541:17:11"
																},
																"nativeSrc": "5541:20:11",
																"nodeType": "YulFunctionCall",
																"src": "5541:20:11"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "5536:1:11",
																	"nodeType": "YulIdentifier",
																	"src": "5536:1:11"
																}
															]
														},
														{
															"nativeSrc": "5570:17:11",
															"nodeType": "YulAssignment",
															"src": "5570:17:11",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "5582:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "5582:1:11"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "5585:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "5585:1:11"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "5578:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "5578:3:11"
																},
																"nativeSrc": "5578:9:11",
																"nodeType": "YulFunctionCall",
																"src": "5578:9:11"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nativeSrc": "5570:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "5570:4:11"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "5612:22:11",
																"nodeType": "YulBlock",
																"src": "5612:22:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "5614:16:11",
																				"nodeType": "YulIdentifier",
																				"src": "5614:16:11"
																			},
																			"nativeSrc": "5614:18:11",
																			"nodeType": "YulFunctionCall",
																			"src": "5614:18:11"
																		},
																		"nativeSrc": "5614:18:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "5614:18:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nativeSrc": "5603:4:11",
																		"nodeType": "YulIdentifier",
																		"src": "5603:4:11"
																	},
																	{
																		"name": "x",
																		"nativeSrc": "5609:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "5609:1:11"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "5600:2:11",
																	"nodeType": "YulIdentifier",
																	"src": "5600:2:11"
																},
																"nativeSrc": "5600:11:11",
																"nodeType": "YulFunctionCall",
																"src": "5600:11:11"
															},
															"nativeSrc": "5597:37:11",
															"nodeType": "YulIf",
															"src": "5597:37:11"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nativeSrc": "5447:194:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "5478:1:11",
														"nodeType": "YulTypedName",
														"src": "5478:1:11",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "5481:1:11",
														"nodeType": "YulTypedName",
														"src": "5481:1:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nativeSrc": "5487:4:11",
														"nodeType": "YulTypedName",
														"src": "5487:4:11",
														"type": ""
													}
												],
												"src": "5447:194:11"
											},
											{
												"body": {
													"nativeSrc": "5773:206:11",
													"nodeType": "YulBlock",
													"src": "5773:206:11",
													"statements": [
														{
															"nativeSrc": "5783:26:11",
															"nodeType": "YulAssignment",
															"src": "5783:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5795:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "5795:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5806:2:11",
																		"nodeType": "YulLiteral",
																		"src": "5806:2:11",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5791:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "5791:3:11"
																},
																"nativeSrc": "5791:18:11",
																"nodeType": "YulFunctionCall",
																"src": "5791:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5783:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "5783:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "5863:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "5863:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5876:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "5876:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5887:1:11",
																				"nodeType": "YulLiteral",
																				"src": "5887:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5872:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "5872:3:11"
																		},
																		"nativeSrc": "5872:17:11",
																		"nodeType": "YulFunctionCall",
																		"src": "5872:17:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "5819:43:11",
																	"nodeType": "YulIdentifier",
																	"src": "5819:43:11"
																},
																"nativeSrc": "5819:71:11",
																"nodeType": "YulFunctionCall",
																"src": "5819:71:11"
															},
															"nativeSrc": "5819:71:11",
															"nodeType": "YulExpressionStatement",
															"src": "5819:71:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "5944:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "5944:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5957:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "5957:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5968:2:11",
																				"nodeType": "YulLiteral",
																				"src": "5968:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5953:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "5953:3:11"
																		},
																		"nativeSrc": "5953:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "5953:18:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "5900:43:11",
																	"nodeType": "YulIdentifier",
																	"src": "5900:43:11"
																},
																"nativeSrc": "5900:72:11",
																"nodeType": "YulFunctionCall",
																"src": "5900:72:11"
															},
															"nativeSrc": "5900:72:11",
															"nodeType": "YulExpressionStatement",
															"src": "5900:72:11"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "5647:332:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5737:9:11",
														"nodeType": "YulTypedName",
														"src": "5737:9:11",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "5749:6:11",
														"nodeType": "YulTypedName",
														"src": "5749:6:11",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5757:6:11",
														"nodeType": "YulTypedName",
														"src": "5757:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5768:4:11",
														"nodeType": "YulTypedName",
														"src": "5768:4:11",
														"type": ""
													}
												],
												"src": "5647:332:11"
											},
											{
												"body": {
													"nativeSrc": "6027:48:11",
													"nodeType": "YulBlock",
													"src": "6027:48:11",
													"statements": [
														{
															"nativeSrc": "6037:32:11",
															"nodeType": "YulAssignment",
															"src": "6037:32:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "6062:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "6062:5:11"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "6055:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "6055:6:11"
																		},
																		"nativeSrc": "6055:13:11",
																		"nodeType": "YulFunctionCall",
																		"src": "6055:13:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "6048:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "6048:6:11"
																},
																"nativeSrc": "6048:21:11",
																"nodeType": "YulFunctionCall",
																"src": "6048:21:11"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "6037:7:11",
																	"nodeType": "YulIdentifier",
																	"src": "6037:7:11"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "5985:90:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6009:5:11",
														"nodeType": "YulTypedName",
														"src": "6009:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "6019:7:11",
														"nodeType": "YulTypedName",
														"src": "6019:7:11",
														"type": ""
													}
												],
												"src": "5985:90:11"
											},
											{
												"body": {
													"nativeSrc": "6121:76:11",
													"nodeType": "YulBlock",
													"src": "6121:76:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "6175:16:11",
																"nodeType": "YulBlock",
																"src": "6175:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "6184:1:11",
																					"nodeType": "YulLiteral",
																					"src": "6184:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6187:1:11",
																					"nodeType": "YulLiteral",
																					"src": "6187:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "6177:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "6177:6:11"
																			},
																			"nativeSrc": "6177:12:11",
																			"nodeType": "YulFunctionCall",
																			"src": "6177:12:11"
																		},
																		"nativeSrc": "6177:12:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "6177:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "6144:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "6144:5:11"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "6166:5:11",
																						"nodeType": "YulIdentifier",
																						"src": "6166:5:11"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nativeSrc": "6151:14:11",
																					"nodeType": "YulIdentifier",
																					"src": "6151:14:11"
																				},
																				"nativeSrc": "6151:21:11",
																				"nodeType": "YulFunctionCall",
																				"src": "6151:21:11"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "6141:2:11",
																			"nodeType": "YulIdentifier",
																			"src": "6141:2:11"
																		},
																		"nativeSrc": "6141:32:11",
																		"nodeType": "YulFunctionCall",
																		"src": "6141:32:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "6134:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "6134:6:11"
																},
																"nativeSrc": "6134:40:11",
																"nodeType": "YulFunctionCall",
																"src": "6134:40:11"
															},
															"nativeSrc": "6131:60:11",
															"nodeType": "YulIf",
															"src": "6131:60:11"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nativeSrc": "6081:116:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6114:5:11",
														"nodeType": "YulTypedName",
														"src": "6114:5:11",
														"type": ""
													}
												],
												"src": "6081:116:11"
											},
											{
												"body": {
													"nativeSrc": "6263:77:11",
													"nodeType": "YulBlock",
													"src": "6263:77:11",
													"statements": [
														{
															"nativeSrc": "6273:22:11",
															"nodeType": "YulAssignment",
															"src": "6273:22:11",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "6288:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "6288:6:11"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "6282:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "6282:5:11"
																},
																"nativeSrc": "6282:13:11",
																"nodeType": "YulFunctionCall",
																"src": "6282:13:11"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "6273:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "6273:5:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "6328:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "6328:5:11"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nativeSrc": "6304:23:11",
																	"nodeType": "YulIdentifier",
																	"src": "6304:23:11"
																},
																"nativeSrc": "6304:30:11",
																"nodeType": "YulFunctionCall",
																"src": "6304:30:11"
															},
															"nativeSrc": "6304:30:11",
															"nodeType": "YulExpressionStatement",
															"src": "6304:30:11"
														}
													]
												},
												"name": "abi_decode_t_bool_fromMemory",
												"nativeSrc": "6203:137:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "6241:6:11",
														"nodeType": "YulTypedName",
														"src": "6241:6:11",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "6249:3:11",
														"nodeType": "YulTypedName",
														"src": "6249:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "6257:5:11",
														"nodeType": "YulTypedName",
														"src": "6257:5:11",
														"type": ""
													}
												],
												"src": "6203:137:11"
											},
											{
												"body": {
													"nativeSrc": "6420:271:11",
													"nodeType": "YulBlock",
													"src": "6420:271:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "6466:83:11",
																"nodeType": "YulBlock",
																"src": "6466:83:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "6468:77:11",
																				"nodeType": "YulIdentifier",
																				"src": "6468:77:11"
																			},
																			"nativeSrc": "6468:79:11",
																			"nodeType": "YulFunctionCall",
																			"src": "6468:79:11"
																		},
																		"nativeSrc": "6468:79:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "6468:79:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6441:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "6441:7:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "6450:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "6450:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "6437:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "6437:3:11"
																		},
																		"nativeSrc": "6437:23:11",
																		"nodeType": "YulFunctionCall",
																		"src": "6437:23:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6462:2:11",
																		"nodeType": "YulLiteral",
																		"src": "6462:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "6433:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "6433:3:11"
																},
																"nativeSrc": "6433:32:11",
																"nodeType": "YulFunctionCall",
																"src": "6433:32:11"
															},
															"nativeSrc": "6430:119:11",
															"nodeType": "YulIf",
															"src": "6430:119:11"
														},
														{
															"nativeSrc": "6559:125:11",
															"nodeType": "YulBlock",
															"src": "6559:125:11",
															"statements": [
																{
																	"nativeSrc": "6574:15:11",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6574:15:11",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6588:1:11",
																		"nodeType": "YulLiteral",
																		"src": "6588:1:11",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6578:6:11",
																			"nodeType": "YulTypedName",
																			"src": "6578:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6603:71:11",
																	"nodeType": "YulAssignment",
																	"src": "6603:71:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6646:9:11",
																						"nodeType": "YulIdentifier",
																						"src": "6646:9:11"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6657:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "6657:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6642:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "6642:3:11"
																				},
																				"nativeSrc": "6642:22:11",
																				"nodeType": "YulFunctionCall",
																				"src": "6642:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6666:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "6666:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool_fromMemory",
																			"nativeSrc": "6613:28:11",
																			"nodeType": "YulIdentifier",
																			"src": "6613:28:11"
																		},
																		"nativeSrc": "6613:61:11",
																		"nodeType": "YulFunctionCall",
																		"src": "6613:61:11"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "6603:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "6603:6:11"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nativeSrc": "6346:345:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6390:9:11",
														"nodeType": "YulTypedName",
														"src": "6390:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "6401:7:11",
														"nodeType": "YulTypedName",
														"src": "6401:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "6413:6:11",
														"nodeType": "YulTypedName",
														"src": "6413:6:11",
														"type": ""
													}
												],
												"src": "6346:345:11"
											},
											{
												"body": {
													"nativeSrc": "6803:63:11",
													"nodeType": "YulBlock",
													"src": "6803:63:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "6825:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "6825:6:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6833:1:11",
																				"nodeType": "YulLiteral",
																				"src": "6833:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6821:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "6821:3:11"
																		},
																		"nativeSrc": "6821:14:11",
																		"nodeType": "YulFunctionCall",
																		"src": "6821:14:11"
																	},
																	{
																		"hexValue": "4e6f207265776172647320746f20636c61696d",
																		"kind": "string",
																		"nativeSrc": "6837:21:11",
																		"nodeType": "YulLiteral",
																		"src": "6837:21:11",
																		"type": "",
																		"value": "No rewards to claim"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6814:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "6814:6:11"
																},
																"nativeSrc": "6814:45:11",
																"nodeType": "YulFunctionCall",
																"src": "6814:45:11"
															},
															"nativeSrc": "6814:45:11",
															"nodeType": "YulExpressionStatement",
															"src": "6814:45:11"
														}
													]
												},
												"name": "store_literal_in_memory_584cf1690fd4124c524340f65c2f0897ce34c8cad61c485ada0c89030473339d",
												"nativeSrc": "6697:169:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "6795:6:11",
														"nodeType": "YulTypedName",
														"src": "6795:6:11",
														"type": ""
													}
												],
												"src": "6697:169:11"
											},
											{
												"body": {
													"nativeSrc": "7018:220:11",
													"nodeType": "YulBlock",
													"src": "7018:220:11",
													"statements": [
														{
															"nativeSrc": "7028:74:11",
															"nodeType": "YulAssignment",
															"src": "7028:74:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7094:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "7094:3:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7099:2:11",
																		"nodeType": "YulLiteral",
																		"src": "7099:2:11",
																		"type": "",
																		"value": "19"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "7035:58:11",
																	"nodeType": "YulIdentifier",
																	"src": "7035:58:11"
																},
																"nativeSrc": "7035:67:11",
																"nodeType": "YulFunctionCall",
																"src": "7035:67:11"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "7028:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "7028:3:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7200:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "7200:3:11"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_584cf1690fd4124c524340f65c2f0897ce34c8cad61c485ada0c89030473339d",
																	"nativeSrc": "7111:88:11",
																	"nodeType": "YulIdentifier",
																	"src": "7111:88:11"
																},
																"nativeSrc": "7111:93:11",
																"nodeType": "YulFunctionCall",
																"src": "7111:93:11"
															},
															"nativeSrc": "7111:93:11",
															"nodeType": "YulExpressionStatement",
															"src": "7111:93:11"
														},
														{
															"nativeSrc": "7213:19:11",
															"nodeType": "YulAssignment",
															"src": "7213:19:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7224:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "7224:3:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7229:2:11",
																		"nodeType": "YulLiteral",
																		"src": "7229:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7220:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "7220:3:11"
																},
																"nativeSrc": "7220:12:11",
																"nodeType": "YulFunctionCall",
																"src": "7220:12:11"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "7213:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "7213:3:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_584cf1690fd4124c524340f65c2f0897ce34c8cad61c485ada0c89030473339d_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "6872:366:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "7006:3:11",
														"nodeType": "YulTypedName",
														"src": "7006:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "7014:3:11",
														"nodeType": "YulTypedName",
														"src": "7014:3:11",
														"type": ""
													}
												],
												"src": "6872:366:11"
											},
											{
												"body": {
													"nativeSrc": "7415:248:11",
													"nodeType": "YulBlock",
													"src": "7415:248:11",
													"statements": [
														{
															"nativeSrc": "7425:26:11",
															"nodeType": "YulAssignment",
															"src": "7425:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7437:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "7437:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7448:2:11",
																		"nodeType": "YulLiteral",
																		"src": "7448:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7433:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "7433:3:11"
																},
																"nativeSrc": "7433:18:11",
																"nodeType": "YulFunctionCall",
																"src": "7433:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7425:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "7425:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7472:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "7472:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7483:1:11",
																				"nodeType": "YulLiteral",
																				"src": "7483:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7468:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "7468:3:11"
																		},
																		"nativeSrc": "7468:17:11",
																		"nodeType": "YulFunctionCall",
																		"src": "7468:17:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "7491:4:11",
																				"nodeType": "YulIdentifier",
																				"src": "7491:4:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "7497:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "7497:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "7487:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "7487:3:11"
																		},
																		"nativeSrc": "7487:20:11",
																		"nodeType": "YulFunctionCall",
																		"src": "7487:20:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7461:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "7461:6:11"
																},
																"nativeSrc": "7461:47:11",
																"nodeType": "YulFunctionCall",
																"src": "7461:47:11"
															},
															"nativeSrc": "7461:47:11",
															"nodeType": "YulExpressionStatement",
															"src": "7461:47:11"
														},
														{
															"nativeSrc": "7517:139:11",
															"nodeType": "YulAssignment",
															"src": "7517:139:11",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "7651:4:11",
																		"nodeType": "YulIdentifier",
																		"src": "7651:4:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_584cf1690fd4124c524340f65c2f0897ce34c8cad61c485ada0c89030473339d_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "7525:124:11",
																	"nodeType": "YulIdentifier",
																	"src": "7525:124:11"
																},
																"nativeSrc": "7525:131:11",
																"nodeType": "YulFunctionCall",
																"src": "7525:131:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7517:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "7517:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_584cf1690fd4124c524340f65c2f0897ce34c8cad61c485ada0c89030473339d__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "7244:419:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7395:9:11",
														"nodeType": "YulTypedName",
														"src": "7395:9:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7410:4:11",
														"nodeType": "YulTypedName",
														"src": "7410:4:11",
														"type": ""
													}
												],
												"src": "7244:419:11"
											},
											{
												"body": {
													"nativeSrc": "7775:126:11",
													"nodeType": "YulBlock",
													"src": "7775:126:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "7797:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "7797:6:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7805:1:11",
																				"nodeType": "YulLiteral",
																				"src": "7805:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7793:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "7793:3:11"
																		},
																		"nativeSrc": "7793:14:11",
																		"nodeType": "YulFunctionCall",
																		"src": "7793:14:11"
																	},
																	{
																		"hexValue": "54686520616d6f756e742073686f756c6420626520616c776179732067726561",
																		"kind": "string",
																		"nativeSrc": "7809:34:11",
																		"nodeType": "YulLiteral",
																		"src": "7809:34:11",
																		"type": "",
																		"value": "The amount should be always grea"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7786:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "7786:6:11"
																},
																"nativeSrc": "7786:58:11",
																"nodeType": "YulFunctionCall",
																"src": "7786:58:11"
															},
															"nativeSrc": "7786:58:11",
															"nodeType": "YulExpressionStatement",
															"src": "7786:58:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "7865:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "7865:6:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7873:2:11",
																				"nodeType": "YulLiteral",
																				"src": "7873:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7861:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "7861:3:11"
																		},
																		"nativeSrc": "7861:15:11",
																		"nodeType": "YulFunctionCall",
																		"src": "7861:15:11"
																	},
																	{
																		"hexValue": "746572207468616e207a65726f",
																		"kind": "string",
																		"nativeSrc": "7878:15:11",
																		"nodeType": "YulLiteral",
																		"src": "7878:15:11",
																		"type": "",
																		"value": "ter than zero"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7854:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "7854:6:11"
																},
																"nativeSrc": "7854:40:11",
																"nodeType": "YulFunctionCall",
																"src": "7854:40:11"
															},
															"nativeSrc": "7854:40:11",
															"nodeType": "YulExpressionStatement",
															"src": "7854:40:11"
														}
													]
												},
												"name": "store_literal_in_memory_9265d513a88feb6004cd4b739a8194dd02d5c83559a911b27a38cd4f3dac6ec5",
												"nativeSrc": "7669:232:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "7767:6:11",
														"nodeType": "YulTypedName",
														"src": "7767:6:11",
														"type": ""
													}
												],
												"src": "7669:232:11"
											},
											{
												"body": {
													"nativeSrc": "8053:220:11",
													"nodeType": "YulBlock",
													"src": "8053:220:11",
													"statements": [
														{
															"nativeSrc": "8063:74:11",
															"nodeType": "YulAssignment",
															"src": "8063:74:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8129:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "8129:3:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8134:2:11",
																		"nodeType": "YulLiteral",
																		"src": "8134:2:11",
																		"type": "",
																		"value": "45"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "8070:58:11",
																	"nodeType": "YulIdentifier",
																	"src": "8070:58:11"
																},
																"nativeSrc": "8070:67:11",
																"nodeType": "YulFunctionCall",
																"src": "8070:67:11"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "8063:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "8063:3:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8235:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "8235:3:11"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_9265d513a88feb6004cd4b739a8194dd02d5c83559a911b27a38cd4f3dac6ec5",
																	"nativeSrc": "8146:88:11",
																	"nodeType": "YulIdentifier",
																	"src": "8146:88:11"
																},
																"nativeSrc": "8146:93:11",
																"nodeType": "YulFunctionCall",
																"src": "8146:93:11"
															},
															"nativeSrc": "8146:93:11",
															"nodeType": "YulExpressionStatement",
															"src": "8146:93:11"
														},
														{
															"nativeSrc": "8248:19:11",
															"nodeType": "YulAssignment",
															"src": "8248:19:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8259:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "8259:3:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8264:2:11",
																		"nodeType": "YulLiteral",
																		"src": "8264:2:11",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8255:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "8255:3:11"
																},
																"nativeSrc": "8255:12:11",
																"nodeType": "YulFunctionCall",
																"src": "8255:12:11"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "8248:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "8248:3:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_9265d513a88feb6004cd4b739a8194dd02d5c83559a911b27a38cd4f3dac6ec5_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "7907:366:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "8041:3:11",
														"nodeType": "YulTypedName",
														"src": "8041:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "8049:3:11",
														"nodeType": "YulTypedName",
														"src": "8049:3:11",
														"type": ""
													}
												],
												"src": "7907:366:11"
											},
											{
												"body": {
													"nativeSrc": "8450:248:11",
													"nodeType": "YulBlock",
													"src": "8450:248:11",
													"statements": [
														{
															"nativeSrc": "8460:26:11",
															"nodeType": "YulAssignment",
															"src": "8460:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8472:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "8472:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8483:2:11",
																		"nodeType": "YulLiteral",
																		"src": "8483:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8468:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "8468:3:11"
																},
																"nativeSrc": "8468:18:11",
																"nodeType": "YulFunctionCall",
																"src": "8468:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8460:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "8460:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8507:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "8507:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8518:1:11",
																				"nodeType": "YulLiteral",
																				"src": "8518:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8503:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "8503:3:11"
																		},
																		"nativeSrc": "8503:17:11",
																		"nodeType": "YulFunctionCall",
																		"src": "8503:17:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "8526:4:11",
																				"nodeType": "YulIdentifier",
																				"src": "8526:4:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "8532:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "8532:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "8522:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "8522:3:11"
																		},
																		"nativeSrc": "8522:20:11",
																		"nodeType": "YulFunctionCall",
																		"src": "8522:20:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8496:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "8496:6:11"
																},
																"nativeSrc": "8496:47:11",
																"nodeType": "YulFunctionCall",
																"src": "8496:47:11"
															},
															"nativeSrc": "8496:47:11",
															"nodeType": "YulExpressionStatement",
															"src": "8496:47:11"
														},
														{
															"nativeSrc": "8552:139:11",
															"nodeType": "YulAssignment",
															"src": "8552:139:11",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "8686:4:11",
																		"nodeType": "YulIdentifier",
																		"src": "8686:4:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_9265d513a88feb6004cd4b739a8194dd02d5c83559a911b27a38cd4f3dac6ec5_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "8560:124:11",
																	"nodeType": "YulIdentifier",
																	"src": "8560:124:11"
																},
																"nativeSrc": "8560:131:11",
																"nodeType": "YulFunctionCall",
																"src": "8560:131:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8552:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "8552:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9265d513a88feb6004cd4b739a8194dd02d5c83559a911b27a38cd4f3dac6ec5__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "8279:419:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8430:9:11",
														"nodeType": "YulTypedName",
														"src": "8430:9:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8445:4:11",
														"nodeType": "YulTypedName",
														"src": "8445:4:11",
														"type": ""
													}
												],
												"src": "8279:419:11"
											},
											{
												"body": {
													"nativeSrc": "8830:206:11",
													"nodeType": "YulBlock",
													"src": "8830:206:11",
													"statements": [
														{
															"nativeSrc": "8840:26:11",
															"nodeType": "YulAssignment",
															"src": "8840:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8852:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "8852:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8863:2:11",
																		"nodeType": "YulLiteral",
																		"src": "8863:2:11",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8848:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "8848:3:11"
																},
																"nativeSrc": "8848:18:11",
																"nodeType": "YulFunctionCall",
																"src": "8848:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8840:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "8840:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "8920:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "8920:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8933:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "8933:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8944:1:11",
																				"nodeType": "YulLiteral",
																				"src": "8944:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8929:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "8929:3:11"
																		},
																		"nativeSrc": "8929:17:11",
																		"nodeType": "YulFunctionCall",
																		"src": "8929:17:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "8876:43:11",
																	"nodeType": "YulIdentifier",
																	"src": "8876:43:11"
																},
																"nativeSrc": "8876:71:11",
																"nodeType": "YulFunctionCall",
																"src": "8876:71:11"
															},
															"nativeSrc": "8876:71:11",
															"nodeType": "YulExpressionStatement",
															"src": "8876:71:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "9001:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "9001:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9014:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "9014:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9025:2:11",
																				"nodeType": "YulLiteral",
																				"src": "9025:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9010:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "9010:3:11"
																		},
																		"nativeSrc": "9010:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "9010:18:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "8957:43:11",
																	"nodeType": "YulIdentifier",
																	"src": "8957:43:11"
																},
																"nativeSrc": "8957:72:11",
																"nodeType": "YulFunctionCall",
																"src": "8957:72:11"
															},
															"nativeSrc": "8957:72:11",
															"nodeType": "YulExpressionStatement",
															"src": "8957:72:11"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed",
												"nativeSrc": "8704:332:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8794:9:11",
														"nodeType": "YulTypedName",
														"src": "8794:9:11",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "8806:6:11",
														"nodeType": "YulTypedName",
														"src": "8806:6:11",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "8814:6:11",
														"nodeType": "YulTypedName",
														"src": "8814:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8825:4:11",
														"nodeType": "YulTypedName",
														"src": "8825:4:11",
														"type": ""
													}
												],
												"src": "8704:332:11"
											},
											{
												"body": {
													"nativeSrc": "9105:80:11",
													"nodeType": "YulBlock",
													"src": "9105:80:11",
													"statements": [
														{
															"nativeSrc": "9115:22:11",
															"nodeType": "YulAssignment",
															"src": "9115:22:11",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "9130:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "9130:6:11"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "9124:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "9124:5:11"
																},
																"nativeSrc": "9124:13:11",
																"nodeType": "YulFunctionCall",
																"src": "9124:13:11"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "9115:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "9115:5:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "9173:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "9173:5:11"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "9146:26:11",
																	"nodeType": "YulIdentifier",
																	"src": "9146:26:11"
																},
																"nativeSrc": "9146:33:11",
																"nodeType": "YulFunctionCall",
																"src": "9146:33:11"
															},
															"nativeSrc": "9146:33:11",
															"nodeType": "YulExpressionStatement",
															"src": "9146:33:11"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nativeSrc": "9042:143:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "9083:6:11",
														"nodeType": "YulTypedName",
														"src": "9083:6:11",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "9091:3:11",
														"nodeType": "YulTypedName",
														"src": "9091:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "9099:5:11",
														"nodeType": "YulTypedName",
														"src": "9099:5:11",
														"type": ""
													}
												],
												"src": "9042:143:11"
											},
											{
												"body": {
													"nativeSrc": "9268:274:11",
													"nodeType": "YulBlock",
													"src": "9268:274:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "9314:83:11",
																"nodeType": "YulBlock",
																"src": "9314:83:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "9316:77:11",
																				"nodeType": "YulIdentifier",
																				"src": "9316:77:11"
																			},
																			"nativeSrc": "9316:79:11",
																			"nodeType": "YulFunctionCall",
																			"src": "9316:79:11"
																		},
																		"nativeSrc": "9316:79:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "9316:79:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9289:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "9289:7:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "9298:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "9298:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "9285:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "9285:3:11"
																		},
																		"nativeSrc": "9285:23:11",
																		"nodeType": "YulFunctionCall",
																		"src": "9285:23:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9310:2:11",
																		"nodeType": "YulLiteral",
																		"src": "9310:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "9281:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "9281:3:11"
																},
																"nativeSrc": "9281:32:11",
																"nodeType": "YulFunctionCall",
																"src": "9281:32:11"
															},
															"nativeSrc": "9278:119:11",
															"nodeType": "YulIf",
															"src": "9278:119:11"
														},
														{
															"nativeSrc": "9407:128:11",
															"nodeType": "YulBlock",
															"src": "9407:128:11",
															"statements": [
																{
																	"nativeSrc": "9422:15:11",
																	"nodeType": "YulVariableDeclaration",
																	"src": "9422:15:11",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "9436:1:11",
																		"nodeType": "YulLiteral",
																		"src": "9436:1:11",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "9426:6:11",
																			"nodeType": "YulTypedName",
																			"src": "9426:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "9451:74:11",
																	"nodeType": "YulAssignment",
																	"src": "9451:74:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "9497:9:11",
																						"nodeType": "YulIdentifier",
																						"src": "9497:9:11"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "9508:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "9508:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "9493:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "9493:3:11"
																				},
																				"nativeSrc": "9493:22:11",
																				"nodeType": "YulFunctionCall",
																				"src": "9493:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9517:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "9517:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nativeSrc": "9461:31:11",
																			"nodeType": "YulIdentifier",
																			"src": "9461:31:11"
																		},
																		"nativeSrc": "9461:64:11",
																		"nodeType": "YulFunctionCall",
																		"src": "9461:64:11"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "9451:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "9451:6:11"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nativeSrc": "9191:351:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9238:9:11",
														"nodeType": "YulTypedName",
														"src": "9238:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "9249:7:11",
														"nodeType": "YulTypedName",
														"src": "9249:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "9261:6:11",
														"nodeType": "YulTypedName",
														"src": "9261:6:11",
														"type": ""
													}
												],
												"src": "9191:351:11"
											},
											{
												"body": {
													"nativeSrc": "9654:120:11",
													"nodeType": "YulBlock",
													"src": "9654:120:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "9676:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "9676:6:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9684:1:11",
																				"nodeType": "YulLiteral",
																				"src": "9684:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9672:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "9672:3:11"
																		},
																		"nativeSrc": "9672:14:11",
																		"nodeType": "YulFunctionCall",
																		"src": "9672:14:11"
																	},
																	{
																		"hexValue": "4e6f74207365742074686520656e6f75676820616d6f756e7420666f7220616c",
																		"kind": "string",
																		"nativeSrc": "9688:34:11",
																		"nodeType": "YulLiteral",
																		"src": "9688:34:11",
																		"type": "",
																		"value": "Not set the enough amount for al"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9665:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "9665:6:11"
																},
																"nativeSrc": "9665:58:11",
																"nodeType": "YulFunctionCall",
																"src": "9665:58:11"
															},
															"nativeSrc": "9665:58:11",
															"nodeType": "YulExpressionStatement",
															"src": "9665:58:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "9744:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "9744:6:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9752:2:11",
																				"nodeType": "YulLiteral",
																				"src": "9752:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9740:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "9740:3:11"
																		},
																		"nativeSrc": "9740:15:11",
																		"nodeType": "YulFunctionCall",
																		"src": "9740:15:11"
																	},
																	{
																		"hexValue": "6c6f77616e6365",
																		"kind": "string",
																		"nativeSrc": "9757:9:11",
																		"nodeType": "YulLiteral",
																		"src": "9757:9:11",
																		"type": "",
																		"value": "lowance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9733:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "9733:6:11"
																},
																"nativeSrc": "9733:34:11",
																"nodeType": "YulFunctionCall",
																"src": "9733:34:11"
															},
															"nativeSrc": "9733:34:11",
															"nodeType": "YulExpressionStatement",
															"src": "9733:34:11"
														}
													]
												},
												"name": "store_literal_in_memory_1476f4531570197b018bd30cea07a1c62b9a95bce5c7fd24f913423271c1f390",
												"nativeSrc": "9548:226:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "9646:6:11",
														"nodeType": "YulTypedName",
														"src": "9646:6:11",
														"type": ""
													}
												],
												"src": "9548:226:11"
											},
											{
												"body": {
													"nativeSrc": "9926:220:11",
													"nodeType": "YulBlock",
													"src": "9926:220:11",
													"statements": [
														{
															"nativeSrc": "9936:74:11",
															"nodeType": "YulAssignment",
															"src": "9936:74:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10002:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "10002:3:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10007:2:11",
																		"nodeType": "YulLiteral",
																		"src": "10007:2:11",
																		"type": "",
																		"value": "39"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "9943:58:11",
																	"nodeType": "YulIdentifier",
																	"src": "9943:58:11"
																},
																"nativeSrc": "9943:67:11",
																"nodeType": "YulFunctionCall",
																"src": "9943:67:11"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "9936:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "9936:3:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10108:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "10108:3:11"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_1476f4531570197b018bd30cea07a1c62b9a95bce5c7fd24f913423271c1f390",
																	"nativeSrc": "10019:88:11",
																	"nodeType": "YulIdentifier",
																	"src": "10019:88:11"
																},
																"nativeSrc": "10019:93:11",
																"nodeType": "YulFunctionCall",
																"src": "10019:93:11"
															},
															"nativeSrc": "10019:93:11",
															"nodeType": "YulExpressionStatement",
															"src": "10019:93:11"
														},
														{
															"nativeSrc": "10121:19:11",
															"nodeType": "YulAssignment",
															"src": "10121:19:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10132:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "10132:3:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10137:2:11",
																		"nodeType": "YulLiteral",
																		"src": "10137:2:11",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10128:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "10128:3:11"
																},
																"nativeSrc": "10128:12:11",
																"nodeType": "YulFunctionCall",
																"src": "10128:12:11"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "10121:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "10121:3:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_1476f4531570197b018bd30cea07a1c62b9a95bce5c7fd24f913423271c1f390_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "9780:366:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "9914:3:11",
														"nodeType": "YulTypedName",
														"src": "9914:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "9922:3:11",
														"nodeType": "YulTypedName",
														"src": "9922:3:11",
														"type": ""
													}
												],
												"src": "9780:366:11"
											},
											{
												"body": {
													"nativeSrc": "10323:248:11",
													"nodeType": "YulBlock",
													"src": "10323:248:11",
													"statements": [
														{
															"nativeSrc": "10333:26:11",
															"nodeType": "YulAssignment",
															"src": "10333:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10345:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "10345:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10356:2:11",
																		"nodeType": "YulLiteral",
																		"src": "10356:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10341:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "10341:3:11"
																},
																"nativeSrc": "10341:18:11",
																"nodeType": "YulFunctionCall",
																"src": "10341:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10333:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "10333:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10380:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "10380:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10391:1:11",
																				"nodeType": "YulLiteral",
																				"src": "10391:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10376:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "10376:3:11"
																		},
																		"nativeSrc": "10376:17:11",
																		"nodeType": "YulFunctionCall",
																		"src": "10376:17:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "10399:4:11",
																				"nodeType": "YulIdentifier",
																				"src": "10399:4:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "10405:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "10405:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "10395:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "10395:3:11"
																		},
																		"nativeSrc": "10395:20:11",
																		"nodeType": "YulFunctionCall",
																		"src": "10395:20:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10369:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "10369:6:11"
																},
																"nativeSrc": "10369:47:11",
																"nodeType": "YulFunctionCall",
																"src": "10369:47:11"
															},
															"nativeSrc": "10369:47:11",
															"nodeType": "YulExpressionStatement",
															"src": "10369:47:11"
														},
														{
															"nativeSrc": "10425:139:11",
															"nodeType": "YulAssignment",
															"src": "10425:139:11",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "10559:4:11",
																		"nodeType": "YulIdentifier",
																		"src": "10559:4:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_1476f4531570197b018bd30cea07a1c62b9a95bce5c7fd24f913423271c1f390_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "10433:124:11",
																	"nodeType": "YulIdentifier",
																	"src": "10433:124:11"
																},
																"nativeSrc": "10433:131:11",
																"nodeType": "YulFunctionCall",
																"src": "10433:131:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10425:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "10425:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_1476f4531570197b018bd30cea07a1c62b9a95bce5c7fd24f913423271c1f390__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "10152:419:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10303:9:11",
														"nodeType": "YulTypedName",
														"src": "10303:9:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10318:4:11",
														"nodeType": "YulTypedName",
														"src": "10318:4:11",
														"type": ""
													}
												],
												"src": "10152:419:11"
											},
											{
												"body": {
													"nativeSrc": "10731:288:11",
													"nodeType": "YulBlock",
													"src": "10731:288:11",
													"statements": [
														{
															"nativeSrc": "10741:26:11",
															"nodeType": "YulAssignment",
															"src": "10741:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10753:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "10753:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10764:2:11",
																		"nodeType": "YulLiteral",
																		"src": "10764:2:11",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10749:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "10749:3:11"
																},
																"nativeSrc": "10749:18:11",
																"nodeType": "YulFunctionCall",
																"src": "10749:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10741:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "10741:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "10821:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "10821:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10834:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "10834:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10845:1:11",
																				"nodeType": "YulLiteral",
																				"src": "10845:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10830:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "10830:3:11"
																		},
																		"nativeSrc": "10830:17:11",
																		"nodeType": "YulFunctionCall",
																		"src": "10830:17:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "10777:43:11",
																	"nodeType": "YulIdentifier",
																	"src": "10777:43:11"
																},
																"nativeSrc": "10777:71:11",
																"nodeType": "YulFunctionCall",
																"src": "10777:71:11"
															},
															"nativeSrc": "10777:71:11",
															"nodeType": "YulExpressionStatement",
															"src": "10777:71:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "10902:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "10902:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10915:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "10915:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10926:2:11",
																				"nodeType": "YulLiteral",
																				"src": "10926:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10911:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "10911:3:11"
																		},
																		"nativeSrc": "10911:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "10911:18:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "10858:43:11",
																	"nodeType": "YulIdentifier",
																	"src": "10858:43:11"
																},
																"nativeSrc": "10858:72:11",
																"nodeType": "YulFunctionCall",
																"src": "10858:72:11"
															},
															"nativeSrc": "10858:72:11",
															"nodeType": "YulExpressionStatement",
															"src": "10858:72:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "10984:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "10984:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10997:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "10997:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11008:2:11",
																				"nodeType": "YulLiteral",
																				"src": "11008:2:11",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10993:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "10993:3:11"
																		},
																		"nativeSrc": "10993:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "10993:18:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "10940:43:11",
																	"nodeType": "YulIdentifier",
																	"src": "10940:43:11"
																},
																"nativeSrc": "10940:72:11",
																"nodeType": "YulFunctionCall",
																"src": "10940:72:11"
															},
															"nativeSrc": "10940:72:11",
															"nodeType": "YulExpressionStatement",
															"src": "10940:72:11"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "10577:442:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10687:9:11",
														"nodeType": "YulTypedName",
														"src": "10687:9:11",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "10699:6:11",
														"nodeType": "YulTypedName",
														"src": "10699:6:11",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "10707:6:11",
														"nodeType": "YulTypedName",
														"src": "10707:6:11",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "10715:6:11",
														"nodeType": "YulTypedName",
														"src": "10715:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10726:4:11",
														"nodeType": "YulTypedName",
														"src": "10726:4:11",
														"type": ""
													}
												],
												"src": "10577:442:11"
											},
											{
												"body": {
													"nativeSrc": "11069:147:11",
													"nodeType": "YulBlock",
													"src": "11069:147:11",
													"statements": [
														{
															"nativeSrc": "11079:25:11",
															"nodeType": "YulAssignment",
															"src": "11079:25:11",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "11102:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "11102:1:11"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "11084:17:11",
																	"nodeType": "YulIdentifier",
																	"src": "11084:17:11"
																},
																"nativeSrc": "11084:20:11",
																"nodeType": "YulFunctionCall",
																"src": "11084:20:11"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "11079:1:11",
																	"nodeType": "YulIdentifier",
																	"src": "11079:1:11"
																}
															]
														},
														{
															"nativeSrc": "11113:25:11",
															"nodeType": "YulAssignment",
															"src": "11113:25:11",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "11136:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "11136:1:11"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "11118:17:11",
																	"nodeType": "YulIdentifier",
																	"src": "11118:17:11"
																},
																"nativeSrc": "11118:20:11",
																"nodeType": "YulFunctionCall",
																"src": "11118:20:11"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "11113:1:11",
																	"nodeType": "YulIdentifier",
																	"src": "11113:1:11"
																}
															]
														},
														{
															"nativeSrc": "11147:16:11",
															"nodeType": "YulAssignment",
															"src": "11147:16:11",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "11158:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "11158:1:11"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "11161:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "11161:1:11"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11154:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "11154:3:11"
																},
																"nativeSrc": "11154:9:11",
																"nodeType": "YulFunctionCall",
																"src": "11154:9:11"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "11147:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "11147:3:11"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "11187:22:11",
																"nodeType": "YulBlock",
																"src": "11187:22:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "11189:16:11",
																				"nodeType": "YulIdentifier",
																				"src": "11189:16:11"
																			},
																			"nativeSrc": "11189:18:11",
																			"nodeType": "YulFunctionCall",
																			"src": "11189:18:11"
																		},
																		"nativeSrc": "11189:18:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "11189:18:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "11179:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "11179:1:11"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "11182:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "11182:3:11"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "11176:2:11",
																	"nodeType": "YulIdentifier",
																	"src": "11176:2:11"
																},
																"nativeSrc": "11176:10:11",
																"nodeType": "YulFunctionCall",
																"src": "11176:10:11"
															},
															"nativeSrc": "11173:36:11",
															"nodeType": "YulIf",
															"src": "11173:36:11"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "11025:191:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "11056:1:11",
														"nodeType": "YulTypedName",
														"src": "11056:1:11",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "11059:1:11",
														"nodeType": "YulTypedName",
														"src": "11059:1:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "11065:3:11",
														"nodeType": "YulTypedName",
														"src": "11065:3:11",
														"type": ""
													}
												],
												"src": "11025:191:11"
											},
											{
												"body": {
													"nativeSrc": "11270:362:11",
													"nodeType": "YulBlock",
													"src": "11270:362:11",
													"statements": [
														{
															"nativeSrc": "11280:25:11",
															"nodeType": "YulAssignment",
															"src": "11280:25:11",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "11303:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "11303:1:11"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "11285:17:11",
																	"nodeType": "YulIdentifier",
																	"src": "11285:17:11"
																},
																"nativeSrc": "11285:20:11",
																"nodeType": "YulFunctionCall",
																"src": "11285:20:11"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "11280:1:11",
																	"nodeType": "YulIdentifier",
																	"src": "11280:1:11"
																}
															]
														},
														{
															"nativeSrc": "11314:25:11",
															"nodeType": "YulAssignment",
															"src": "11314:25:11",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "11337:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "11337:1:11"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "11319:17:11",
																	"nodeType": "YulIdentifier",
																	"src": "11319:17:11"
																},
																"nativeSrc": "11319:20:11",
																"nodeType": "YulFunctionCall",
																"src": "11319:20:11"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "11314:1:11",
																	"nodeType": "YulIdentifier",
																	"src": "11314:1:11"
																}
															]
														},
														{
															"nativeSrc": "11348:28:11",
															"nodeType": "YulVariableDeclaration",
															"src": "11348:28:11",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "11371:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "11371:1:11"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "11374:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "11374:1:11"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "11367:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "11367:3:11"
																},
																"nativeSrc": "11367:9:11",
																"nodeType": "YulFunctionCall",
																"src": "11367:9:11"
															},
															"variables": [
																{
																	"name": "product_raw",
																	"nativeSrc": "11352:11:11",
																	"nodeType": "YulTypedName",
																	"src": "11352:11:11",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "11385:41:11",
															"nodeType": "YulAssignment",
															"src": "11385:41:11",
															"value": {
																"arguments": [
																	{
																		"name": "product_raw",
																		"nativeSrc": "11414:11:11",
																		"nodeType": "YulIdentifier",
																		"src": "11414:11:11"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "11396:17:11",
																	"nodeType": "YulIdentifier",
																	"src": "11396:17:11"
																},
																"nativeSrc": "11396:30:11",
																"nodeType": "YulFunctionCall",
																"src": "11396:30:11"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nativeSrc": "11385:7:11",
																	"nodeType": "YulIdentifier",
																	"src": "11385:7:11"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "11603:22:11",
																"nodeType": "YulBlock",
																"src": "11603:22:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "11605:16:11",
																				"nodeType": "YulIdentifier",
																				"src": "11605:16:11"
																			},
																			"nativeSrc": "11605:18:11",
																			"nodeType": "YulFunctionCall",
																			"src": "11605:18:11"
																		},
																		"nativeSrc": "11605:18:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "11605:18:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "11536:1:11",
																						"nodeType": "YulIdentifier",
																						"src": "11536:1:11"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "11529:6:11",
																					"nodeType": "YulIdentifier",
																					"src": "11529:6:11"
																				},
																				"nativeSrc": "11529:9:11",
																				"nodeType": "YulFunctionCall",
																				"src": "11529:9:11"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nativeSrc": "11559:1:11",
																						"nodeType": "YulIdentifier",
																						"src": "11559:1:11"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nativeSrc": "11566:7:11",
																								"nodeType": "YulIdentifier",
																								"src": "11566:7:11"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "11575:1:11",
																								"nodeType": "YulIdentifier",
																								"src": "11575:1:11"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nativeSrc": "11562:3:11",
																							"nodeType": "YulIdentifier",
																							"src": "11562:3:11"
																						},
																						"nativeSrc": "11562:15:11",
																						"nodeType": "YulFunctionCall",
																						"src": "11562:15:11"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "11556:2:11",
																					"nodeType": "YulIdentifier",
																					"src": "11556:2:11"
																				},
																				"nativeSrc": "11556:22:11",
																				"nodeType": "YulFunctionCall",
																				"src": "11556:22:11"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "11509:2:11",
																			"nodeType": "YulIdentifier",
																			"src": "11509:2:11"
																		},
																		"nativeSrc": "11509:83:11",
																		"nodeType": "YulFunctionCall",
																		"src": "11509:83:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "11489:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "11489:6:11"
																},
																"nativeSrc": "11489:113:11",
																"nodeType": "YulFunctionCall",
																"src": "11489:113:11"
															},
															"nativeSrc": "11486:139:11",
															"nodeType": "YulIf",
															"src": "11486:139:11"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nativeSrc": "11222:410:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "11253:1:11",
														"nodeType": "YulTypedName",
														"src": "11253:1:11",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "11256:1:11",
														"nodeType": "YulTypedName",
														"src": "11256:1:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nativeSrc": "11262:7:11",
														"nodeType": "YulTypedName",
														"src": "11262:7:11",
														"type": ""
													}
												],
												"src": "11222:410:11"
											},
											{
												"body": {
													"nativeSrc": "11666:152:11",
													"nodeType": "YulBlock",
													"src": "11666:152:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "11683:1:11",
																		"nodeType": "YulLiteral",
																		"src": "11683:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11686:77:11",
																		"nodeType": "YulLiteral",
																		"src": "11686:77:11",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11676:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "11676:6:11"
																},
																"nativeSrc": "11676:88:11",
																"nodeType": "YulFunctionCall",
																"src": "11676:88:11"
															},
															"nativeSrc": "11676:88:11",
															"nodeType": "YulExpressionStatement",
															"src": "11676:88:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "11780:1:11",
																		"nodeType": "YulLiteral",
																		"src": "11780:1:11",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11783:4:11",
																		"nodeType": "YulLiteral",
																		"src": "11783:4:11",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11773:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "11773:6:11"
																},
																"nativeSrc": "11773:15:11",
																"nodeType": "YulFunctionCall",
																"src": "11773:15:11"
															},
															"nativeSrc": "11773:15:11",
															"nodeType": "YulExpressionStatement",
															"src": "11773:15:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "11804:1:11",
																		"nodeType": "YulLiteral",
																		"src": "11804:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11807:4:11",
																		"nodeType": "YulLiteral",
																		"src": "11807:4:11",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "11797:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "11797:6:11"
																},
																"nativeSrc": "11797:15:11",
																"nodeType": "YulFunctionCall",
																"src": "11797:15:11"
															},
															"nativeSrc": "11797:15:11",
															"nodeType": "YulExpressionStatement",
															"src": "11797:15:11"
														}
													]
												},
												"name": "panic_error_0x12",
												"nativeSrc": "11638:180:11",
												"nodeType": "YulFunctionDefinition",
												"src": "11638:180:11"
											},
											{
												"body": {
													"nativeSrc": "11866:143:11",
													"nodeType": "YulBlock",
													"src": "11866:143:11",
													"statements": [
														{
															"nativeSrc": "11876:25:11",
															"nodeType": "YulAssignment",
															"src": "11876:25:11",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "11899:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "11899:1:11"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "11881:17:11",
																	"nodeType": "YulIdentifier",
																	"src": "11881:17:11"
																},
																"nativeSrc": "11881:20:11",
																"nodeType": "YulFunctionCall",
																"src": "11881:20:11"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "11876:1:11",
																	"nodeType": "YulIdentifier",
																	"src": "11876:1:11"
																}
															]
														},
														{
															"nativeSrc": "11910:25:11",
															"nodeType": "YulAssignment",
															"src": "11910:25:11",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "11933:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "11933:1:11"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "11915:17:11",
																	"nodeType": "YulIdentifier",
																	"src": "11915:17:11"
																},
																"nativeSrc": "11915:20:11",
																"nodeType": "YulFunctionCall",
																"src": "11915:20:11"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "11910:1:11",
																	"nodeType": "YulIdentifier",
																	"src": "11910:1:11"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "11957:22:11",
																"nodeType": "YulBlock",
																"src": "11957:22:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nativeSrc": "11959:16:11",
																				"nodeType": "YulIdentifier",
																				"src": "11959:16:11"
																			},
																			"nativeSrc": "11959:18:11",
																			"nodeType": "YulFunctionCall",
																			"src": "11959:18:11"
																		},
																		"nativeSrc": "11959:18:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "11959:18:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "11954:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "11954:1:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "11947:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "11947:6:11"
																},
																"nativeSrc": "11947:9:11",
																"nodeType": "YulFunctionCall",
																"src": "11947:9:11"
															},
															"nativeSrc": "11944:35:11",
															"nodeType": "YulIf",
															"src": "11944:35:11"
														},
														{
															"nativeSrc": "11989:14:11",
															"nodeType": "YulAssignment",
															"src": "11989:14:11",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "11998:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "11998:1:11"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "12001:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "12001:1:11"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "11994:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "11994:3:11"
																},
																"nativeSrc": "11994:9:11",
																"nodeType": "YulFunctionCall",
																"src": "11994:9:11"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "11989:1:11",
																	"nodeType": "YulIdentifier",
																	"src": "11989:1:11"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nativeSrc": "11824:185:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "11855:1:11",
														"nodeType": "YulTypedName",
														"src": "11855:1:11",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "11858:1:11",
														"nodeType": "YulTypedName",
														"src": "11858:1:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nativeSrc": "11864:1:11",
														"nodeType": "YulTypedName",
														"src": "11864:1:11",
														"type": ""
													}
												],
												"src": "11824:185:11"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(identity(cleanup_t_uint160(value)))\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_StakeToken_$1332_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_StakeToken_$1332_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_StakeToken_$1332_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_StakeToken_$1332__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_StakeToken_$1332_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function convert_t_contract$_RewardToken_$1306_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_RewardToken_$1306_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_RewardToken_$1306_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_RewardToken_$1306__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_RewardToken_$1306_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_62de0d8da76f74ee61d44db19de671b1f704b747455dcaf92e282519e8ff7dd2(memPtr) {\n\n        mstore(add(memPtr, 0), \"Insufficient staked balance\")\n\n    }\n\n    function abi_encode_t_stringliteral_62de0d8da76f74ee61d44db19de671b1f704b747455dcaf92e282519e8ff7dd2_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 27)\n        store_literal_in_memory_62de0d8da76f74ee61d44db19de671b1f704b747455dcaf92e282519e8ff7dd2(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_62de0d8da76f74ee61d44db19de671b1f704b747455dcaf92e282519e8ff7dd2__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_62de0d8da76f74ee61d44db19de671b1f704b747455dcaf92e282519e8ff7dd2_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function store_literal_in_memory_584cf1690fd4124c524340f65c2f0897ce34c8cad61c485ada0c89030473339d(memPtr) {\n\n        mstore(add(memPtr, 0), \"No rewards to claim\")\n\n    }\n\n    function abi_encode_t_stringliteral_584cf1690fd4124c524340f65c2f0897ce34c8cad61c485ada0c89030473339d_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 19)\n        store_literal_in_memory_584cf1690fd4124c524340f65c2f0897ce34c8cad61c485ada0c89030473339d(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_584cf1690fd4124c524340f65c2f0897ce34c8cad61c485ada0c89030473339d__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_584cf1690fd4124c524340f65c2f0897ce34c8cad61c485ada0c89030473339d_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_9265d513a88feb6004cd4b739a8194dd02d5c83559a911b27a38cd4f3dac6ec5(memPtr) {\n\n        mstore(add(memPtr, 0), \"The amount should be always grea\")\n\n        mstore(add(memPtr, 32), \"ter than zero\")\n\n    }\n\n    function abi_encode_t_stringliteral_9265d513a88feb6004cd4b739a8194dd02d5c83559a911b27a38cd4f3dac6ec5_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 45)\n        store_literal_in_memory_9265d513a88feb6004cd4b739a8194dd02d5c83559a911b27a38cd4f3dac6ec5(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_9265d513a88feb6004cd4b739a8194dd02d5c83559a911b27a38cd4f3dac6ec5__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9265d513a88feb6004cd4b739a8194dd02d5c83559a911b27a38cd4f3dac6ec5_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function store_literal_in_memory_1476f4531570197b018bd30cea07a1c62b9a95bce5c7fd24f913423271c1f390(memPtr) {\n\n        mstore(add(memPtr, 0), \"Not set the enough amount for al\")\n\n        mstore(add(memPtr, 32), \"lowance\")\n\n    }\n\n    function abi_encode_t_stringliteral_1476f4531570197b018bd30cea07a1c62b9a95bce5c7fd24f913423271c1f390_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 39)\n        store_literal_in_memory_1476f4531570197b018bd30cea07a1c62b9a95bce5c7fd24f913423271c1f390(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_1476f4531570197b018bd30cea07a1c62b9a95bce5c7fd24f913423271c1f390__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_1476f4531570197b018bd30cea07a1c62b9a95bce5c7fd24f913423271c1f390_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n}\n",
									"id": 11,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b50600436106100a7575f3560e01c80638da5cb5b1161006f5780638da5cb5b14610129578063a694fc3a14610147578063acc3a93914610163578063ba5a531914610193578063f2fde38b1461019d578063f7c618c1146101b9576100a7565b80630660f1e8146100ab5780632e1a7d4d146100db578063372500ab146100f757806351ed6a3014610101578063715018a61461011f575b5f80fd5b6100c560048036038101906100c09190610cdb565b6101d7565b6040516100d29190610d1e565b60405180910390f35b6100f560048036038101906100f09190610d61565b6101ec565b005b6100ff6103f0565b005b610109610618565b6040516101169190610de7565b60405180910390f35b61012761063b565b005b61013161064e565b60405161013e9190610e0f565b60405180910390f35b610161600480360381019061015c9190610d61565b610683565b005b61017d60048036038101906101789190610cdb565b610931565b60405161018a9190610d1e565b60405180910390f35b61019b610946565b005b6101b760048036038101906101b29190610cdb565b610a4e565b005b6101c1610ad2565b6040516101ce9190610e48565b60405180910390f35b6004602052805f5260405f205f915090505481565b5f60035f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20541161026b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161026290610ebb565b60405180910390fd5b610273610946565b8060035f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20546102bc9190610f06565b60035f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055505f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b8152600401610357929190610f39565b6020604051808303815f875af1158015610373573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906103979190610f95565b50426002819055503373ffffffffffffffffffffffffffffffffffffffff167f884edad9ce6fa2440d8a54cc123490eb96d2768479d49ff9c7366125a9424364826040516103e59190610d1e565b60405180910390a250565b5f60045f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20541161046f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104669061100a565b60405180910390fd5b60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb3360045f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20546040518363ffffffff1660e01b8152600401610508929190610f39565b6020604051808303815f875af1158015610524573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906105489190610f95565b503373ffffffffffffffffffffffffffffffffffffffff167ffc30cddea38e2bf4d6ea7d3f9ed3b6ad7f176419f4963bd81318067a4aee73fe60045f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20546040516105cc9190610d1e565b60405180910390a25f60045f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550565b5f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b610643610af7565b61064c5f610b7e565b565b5f80610658610c4f565b9050805f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1691505090565b5f81116106c5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106bc90611098565b60405180910390fd5b805f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663dd62ed3e33306040518363ffffffff1660e01b81526004016107209291906110b6565b602060405180830381865afa15801561073b573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061075f91906110f1565b10156107a0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107979061118c565b60405180910390fd5b5f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330846040518463ffffffff1660e01b81526004016107fc939291906111aa565b6020604051808303815f875af1158015610818573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061083c9190610f95565b505f6002541461084f5761084e610946565b5b8060035f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205461089891906111df565b60035f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550426002819055503373ffffffffffffffffffffffffffffffffffffffff167f9e71bc8eea02a63969f509818f2dafb9254532904319f9dbda79b67bd34a5f3d826040516109269190610d1e565b60405180910390a250565b6003602052805f5260405f205f915090505481565b5f600254426109559190610f06565b90505f6064600460035f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20546109a49190611212565b6109ae9190611280565b90505f82826109bd9190611212565b90508060045f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054610a0891906111df565b60045f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505050565b610a56610af7565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610ac6575f6040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401610abd9190610e0f565b60405180910390fd5b610acf81610b7e565b50565b60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b610aff610c76565b73ffffffffffffffffffffffffffffffffffffffff16610b1d61064e565b73ffffffffffffffffffffffffffffffffffffffff1614610b7c57610b40610c76565b6040517f118cdaa7000000000000000000000000000000000000000000000000000000008152600401610b739190610e0f565b60405180910390fd5b565b5f610b87610c4f565b90505f815f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905082825f015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508273ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3505050565b5f7f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300905090565b5f33905090565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f610caa82610c81565b9050919050565b610cba81610ca0565b8114610cc4575f80fd5b50565b5f81359050610cd581610cb1565b92915050565b5f60208284031215610cf057610cef610c7d565b5b5f610cfd84828501610cc7565b91505092915050565b5f819050919050565b610d1881610d06565b82525050565b5f602082019050610d315f830184610d0f565b92915050565b610d4081610d06565b8114610d4a575f80fd5b50565b5f81359050610d5b81610d37565b92915050565b5f60208284031215610d7657610d75610c7d565b5b5f610d8384828501610d4d565b91505092915050565b5f819050919050565b5f610daf610daa610da584610c81565b610d8c565b610c81565b9050919050565b5f610dc082610d95565b9050919050565b5f610dd182610db6565b9050919050565b610de181610dc7565b82525050565b5f602082019050610dfa5f830184610dd8565b92915050565b610e0981610ca0565b82525050565b5f602082019050610e225f830184610e00565b92915050565b5f610e3282610db6565b9050919050565b610e4281610e28565b82525050565b5f602082019050610e5b5f830184610e39565b92915050565b5f82825260208201905092915050565b7f496e73756666696369656e74207374616b65642062616c616e636500000000005f82015250565b5f610ea5601b83610e61565b9150610eb082610e71565b602082019050919050565b5f6020820190508181035f830152610ed281610e99565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f610f1082610d06565b9150610f1b83610d06565b9250828203905081811115610f3357610f32610ed9565b5b92915050565b5f604082019050610f4c5f830185610e00565b610f596020830184610d0f565b9392505050565b5f8115159050919050565b610f7481610f60565b8114610f7e575f80fd5b50565b5f81519050610f8f81610f6b565b92915050565b5f60208284031215610faa57610fa9610c7d565b5b5f610fb784828501610f81565b91505092915050565b7f4e6f207265776172647320746f20636c61696d000000000000000000000000005f82015250565b5f610ff4601383610e61565b9150610fff82610fc0565b602082019050919050565b5f6020820190508181035f83015261102181610fe8565b9050919050565b7f54686520616d6f756e742073686f756c6420626520616c7761797320677265615f8201527f746572207468616e207a65726f00000000000000000000000000000000000000602082015250565b5f611082602d83610e61565b915061108d82611028565b604082019050919050565b5f6020820190508181035f8301526110af81611076565b9050919050565b5f6040820190506110c95f830185610e00565b6110d66020830184610e00565b9392505050565b5f815190506110eb81610d37565b92915050565b5f6020828403121561110657611105610c7d565b5b5f611113848285016110dd565b91505092915050565b7f4e6f74207365742074686520656e6f75676820616d6f756e7420666f7220616c5f8201527f6c6f77616e636500000000000000000000000000000000000000000000000000602082015250565b5f611176602783610e61565b91506111818261111c565b604082019050919050565b5f6020820190508181035f8301526111a38161116a565b9050919050565b5f6060820190506111bd5f830186610e00565b6111ca6020830185610e00565b6111d76040830184610d0f565b949350505050565b5f6111e982610d06565b91506111f483610d06565b925082820190508082111561120c5761120b610ed9565b5b92915050565b5f61121c82610d06565b915061122783610d06565b925082820261123581610d06565b9150828204841483151761124c5761124b610ed9565b5b5092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f61128a82610d06565b915061129583610d06565b9250826112a5576112a4611253565b5b82820490509291505056fea2646970667358221220855c2a73ba96bfeb5da6664fb48529a41f28b9df79b113e82659c7c9d4ace50064736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA7 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0x6F JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x129 JUMPI DUP1 PUSH4 0xA694FC3A EQ PUSH2 0x147 JUMPI DUP1 PUSH4 0xACC3A939 EQ PUSH2 0x163 JUMPI DUP1 PUSH4 0xBA5A5319 EQ PUSH2 0x193 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x19D JUMPI DUP1 PUSH4 0xF7C618C1 EQ PUSH2 0x1B9 JUMPI PUSH2 0xA7 JUMP JUMPDEST DUP1 PUSH4 0x660F1E8 EQ PUSH2 0xAB JUMPI DUP1 PUSH4 0x2E1A7D4D EQ PUSH2 0xDB JUMPI DUP1 PUSH4 0x372500AB EQ PUSH2 0xF7 JUMPI DUP1 PUSH4 0x51ED6A30 EQ PUSH2 0x101 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x11F JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xC5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xC0 SWAP2 SWAP1 PUSH2 0xCDB JUMP JUMPDEST PUSH2 0x1D7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xD2 SWAP2 SWAP1 PUSH2 0xD1E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xF5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xF0 SWAP2 SWAP1 PUSH2 0xD61 JUMP JUMPDEST PUSH2 0x1EC JUMP JUMPDEST STOP JUMPDEST PUSH2 0xFF PUSH2 0x3F0 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x109 PUSH2 0x618 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x116 SWAP2 SWAP1 PUSH2 0xDE7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x127 PUSH2 0x63B JUMP JUMPDEST STOP JUMPDEST PUSH2 0x131 PUSH2 0x64E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x13E SWAP2 SWAP1 PUSH2 0xE0F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x161 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x15C SWAP2 SWAP1 PUSH2 0xD61 JUMP JUMPDEST PUSH2 0x683 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x17D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x178 SWAP2 SWAP1 PUSH2 0xCDB JUMP JUMPDEST PUSH2 0x931 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x18A SWAP2 SWAP1 PUSH2 0xD1E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x19B PUSH2 0x946 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1B7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1B2 SWAP2 SWAP1 PUSH2 0xCDB JUMP JUMPDEST PUSH2 0xA4E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1C1 PUSH2 0xAD2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1CE SWAP2 SWAP1 PUSH2 0xE48 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x4 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x3 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD GT PUSH2 0x26B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x262 SWAP1 PUSH2 0xEBB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x273 PUSH2 0x946 JUMP JUMPDEST DUP1 PUSH1 0x3 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD PUSH2 0x2BC SWAP2 SWAP1 PUSH2 0xF06 JUMP JUMPDEST PUSH1 0x3 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x357 SWAP3 SWAP2 SWAP1 PUSH2 0xF39 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x373 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x397 SWAP2 SWAP1 PUSH2 0xF95 JUMP JUMPDEST POP TIMESTAMP PUSH1 0x2 DUP2 SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x884EDAD9CE6FA2440D8A54CC123490EB96D2768479D49FF9C7366125A9424364 DUP3 PUSH1 0x40 MLOAD PUSH2 0x3E5 SWAP2 SWAP1 PUSH2 0xD1E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH0 PUSH1 0x4 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD GT PUSH2 0x46F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x466 SWAP1 PUSH2 0x100A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER PUSH1 0x4 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x508 SWAP3 SWAP2 SWAP1 PUSH2 0xF39 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x524 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x548 SWAP2 SWAP1 PUSH2 0xF95 JUMP JUMPDEST POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xFC30CDDEA38E2BF4D6EA7D3F9ED3B6AD7F176419F4963BD81318067A4AEE73FE PUSH1 0x4 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD PUSH1 0x40 MLOAD PUSH2 0x5CC SWAP2 SWAP1 PUSH2 0xD1E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH0 PUSH1 0x4 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0x643 PUSH2 0xAF7 JUMP JUMPDEST PUSH2 0x64C PUSH0 PUSH2 0xB7E JUMP JUMPDEST JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x658 PUSH2 0xC4F JUMP JUMPDEST SWAP1 POP DUP1 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH0 DUP2 GT PUSH2 0x6C5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6BC SWAP1 PUSH2 0x1098 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xDD62ED3E CALLER ADDRESS PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x720 SWAP3 SWAP2 SWAP1 PUSH2 0x10B6 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x73B JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x75F SWAP2 SWAP1 PUSH2 0x10F1 JUMP JUMPDEST LT ISZERO PUSH2 0x7A0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x797 SWAP1 PUSH2 0x118C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP5 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7FC SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x11AA JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x818 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x83C SWAP2 SWAP1 PUSH2 0xF95 JUMP JUMPDEST POP PUSH0 PUSH1 0x2 SLOAD EQ PUSH2 0x84F JUMPI PUSH2 0x84E PUSH2 0x946 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x3 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD PUSH2 0x898 SWAP2 SWAP1 PUSH2 0x11DF JUMP JUMPDEST PUSH1 0x3 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP TIMESTAMP PUSH1 0x2 DUP2 SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x9E71BC8EEA02A63969F509818F2DAFB9254532904319F9DBDA79B67BD34A5F3D DUP3 PUSH1 0x40 MLOAD PUSH2 0x926 SWAP2 SWAP1 PUSH2 0xD1E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x3 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x2 SLOAD TIMESTAMP PUSH2 0x955 SWAP2 SWAP1 PUSH2 0xF06 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH1 0x64 PUSH1 0x4 PUSH1 0x3 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD PUSH2 0x9A4 SWAP2 SWAP1 PUSH2 0x1212 JUMP JUMPDEST PUSH2 0x9AE SWAP2 SWAP1 PUSH2 0x1280 JUMP JUMPDEST SWAP1 POP PUSH0 DUP3 DUP3 PUSH2 0x9BD SWAP2 SWAP1 PUSH2 0x1212 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x4 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD PUSH2 0xA08 SWAP2 SWAP1 PUSH2 0x11DF JUMP JUMPDEST PUSH1 0x4 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP POP POP JUMP JUMPDEST PUSH2 0xA56 PUSH2 0xAF7 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xAC6 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xABD SWAP2 SWAP1 PUSH2 0xE0F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xACF DUP2 PUSH2 0xB7E JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0xAFF PUSH2 0xC76 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xB1D PUSH2 0x64E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xB7C JUMPI PUSH2 0xB40 PUSH2 0xC76 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB73 SWAP2 SWAP1 PUSH2 0xE0F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 PUSH2 0xB87 PUSH2 0xC4F JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP3 DUP3 PUSH0 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 PUSH32 0x9016D09D72D40FDAE2FD8CEAC6B6234C7706214FD39C1CD1E609A0528C199300 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xCAA DUP3 PUSH2 0xC81 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xCBA DUP2 PUSH2 0xCA0 JUMP JUMPDEST DUP2 EQ PUSH2 0xCC4 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xCD5 DUP2 PUSH2 0xCB1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xCF0 JUMPI PUSH2 0xCEF PUSH2 0xC7D JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xCFD DUP5 DUP3 DUP6 ADD PUSH2 0xCC7 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xD18 DUP2 PUSH2 0xD06 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xD31 PUSH0 DUP4 ADD DUP5 PUSH2 0xD0F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xD40 DUP2 PUSH2 0xD06 JUMP JUMPDEST DUP2 EQ PUSH2 0xD4A JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xD5B DUP2 PUSH2 0xD37 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD76 JUMPI PUSH2 0xD75 PUSH2 0xC7D JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xD83 DUP5 DUP3 DUP6 ADD PUSH2 0xD4D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xDAF PUSH2 0xDAA PUSH2 0xDA5 DUP5 PUSH2 0xC81 JUMP JUMPDEST PUSH2 0xD8C JUMP JUMPDEST PUSH2 0xC81 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xDC0 DUP3 PUSH2 0xD95 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xDD1 DUP3 PUSH2 0xDB6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xDE1 DUP2 PUSH2 0xDC7 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xDFA PUSH0 DUP4 ADD DUP5 PUSH2 0xDD8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xE09 DUP2 PUSH2 0xCA0 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xE22 PUSH0 DUP4 ADD DUP5 PUSH2 0xE00 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0xE32 DUP3 PUSH2 0xDB6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xE42 DUP2 PUSH2 0xE28 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xE5B PUSH0 DUP4 ADD DUP5 PUSH2 0xE39 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E74207374616B65642062616C616E63650000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xEA5 PUSH1 0x1B DUP4 PUSH2 0xE61 JUMP JUMPDEST SWAP2 POP PUSH2 0xEB0 DUP3 PUSH2 0xE71 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xED2 DUP2 PUSH2 0xE99 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0xF10 DUP3 PUSH2 0xD06 JUMP JUMPDEST SWAP2 POP PUSH2 0xF1B DUP4 PUSH2 0xD06 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0xF33 JUMPI PUSH2 0xF32 PUSH2 0xED9 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0xF4C PUSH0 DUP4 ADD DUP6 PUSH2 0xE00 JUMP JUMPDEST PUSH2 0xF59 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xD0F JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xF74 DUP2 PUSH2 0xF60 JUMP JUMPDEST DUP2 EQ PUSH2 0xF7E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0xF8F DUP2 PUSH2 0xF6B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xFAA JUMPI PUSH2 0xFA9 PUSH2 0xC7D JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xFB7 DUP5 DUP3 DUP6 ADD PUSH2 0xF81 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E6F207265776172647320746F20636C61696D00000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xFF4 PUSH1 0x13 DUP4 PUSH2 0xE61 JUMP JUMPDEST SWAP2 POP PUSH2 0xFFF DUP3 PUSH2 0xFC0 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1021 DUP2 PUSH2 0xFE8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x54686520616D6F756E742073686F756C6420626520616C776179732067726561 PUSH0 DUP3 ADD MSTORE PUSH32 0x746572207468616E207A65726F00000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1082 PUSH1 0x2D DUP4 PUSH2 0xE61 JUMP JUMPDEST SWAP2 POP PUSH2 0x108D DUP3 PUSH2 0x1028 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x10AF DUP2 PUSH2 0x1076 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x10C9 PUSH0 DUP4 ADD DUP6 PUSH2 0xE00 JUMP JUMPDEST PUSH2 0x10D6 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xE00 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x10EB DUP2 PUSH2 0xD37 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1106 JUMPI PUSH2 0x1105 PUSH2 0xC7D JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1113 DUP5 DUP3 DUP6 ADD PUSH2 0x10DD JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E6F74207365742074686520656E6F75676820616D6F756E7420666F7220616C PUSH0 DUP3 ADD MSTORE PUSH32 0x6C6F77616E636500000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1176 PUSH1 0x27 DUP4 PUSH2 0xE61 JUMP JUMPDEST SWAP2 POP PUSH2 0x1181 DUP3 PUSH2 0x111C JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x11A3 DUP2 PUSH2 0x116A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x11BD PUSH0 DUP4 ADD DUP7 PUSH2 0xE00 JUMP JUMPDEST PUSH2 0x11CA PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0xE00 JUMP JUMPDEST PUSH2 0x11D7 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xD0F JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x11E9 DUP3 PUSH2 0xD06 JUMP JUMPDEST SWAP2 POP PUSH2 0x11F4 DUP4 PUSH2 0xD06 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x120C JUMPI PUSH2 0x120B PUSH2 0xED9 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x121C DUP3 PUSH2 0xD06 JUMP JUMPDEST SWAP2 POP PUSH2 0x1227 DUP4 PUSH2 0xD06 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x1235 DUP2 PUSH2 0xD06 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x124C JUMPI PUSH2 0x124B PUSH2 0xED9 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x128A DUP3 PUSH2 0xD06 JUMP JUMPDEST SWAP2 POP PUSH2 0x1295 DUP4 PUSH2 0xD06 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x12A5 JUMPI PUSH2 0x12A4 PUSH2 0x1253 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP6 TLOAD 0x2A PUSH20 0xBA96BFEB5DA6664FB48529A41F28B9DF79B113E8 0x26 MSIZE 0xC7 0xC9 0xD4 0xAC 0xE5 STOP PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "272:3214:10:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1156:41;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2230:397;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3165:318;;;:::i;:::-;;338:28;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3155:101:0;;;:::i;:::-;;2441:144;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1448:735:10;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1109:40;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2724:394;;;:::i;:::-;;3405:215:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;373:30:10;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1156:41;;;;;;;;;;;;;;;;;:::o;2230:397::-;2309:1;2286:10;:22;2297:10;2286:22;;;;;;;;;;;;;;;;:24;2278:63;;;;;;;;;;;;:::i;:::-;;;;;;;;;2352:23;:21;:23::i;:::-;2432:6;2409:10;:22;2420:10;2409:22;;;;;;;;;;;;;;;;:29;;;;:::i;:::-;2386:10;:22;2397:10;2386:22;;;;;;;;;;;;;;;:52;;;;2449:10;;;;;;;;;;:19;;;2469:10;2480:6;2449:38;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;2514:15;2498;:31;;;;2601:10;2592:27;;;2612:6;2592:27;;;;;;:::i;:::-;;;;;;;;2230:397;:::o;3165:318::-;3238:1;3214:11;:23;3226:10;3214:23;;;;;;;;;;;;;;;;:25;3206:56;;;;;;;;;;;;:::i;:::-;;;;;;;;;3273:11;;;;;;;;;;;:20;;;3294:10;3305:11;:23;3317:10;3305:23;;;;;;;;;;;;;;;;3273:56;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;3404:10;3389:50;;;3415:11;:23;3427:10;3415:23;;;;;;;;;;;;;;;;3389:50;;;;;;:::i;:::-;;;;;;;;3474:1;3450:11;:23;3462:10;3450:23;;;;;;;;;;;;;;;:25;;;;3165:318::o;338:28::-;;;;;;;;;;;;:::o;3155:101:0:-;2334:13;:11;:13::i;:::-;3219:30:::1;3246:1;3219:18;:30::i;:::-;3155:101::o:0;2441:144::-;2487:7;2506:24;2533:20;:18;:20::i;:::-;2506:47;;2570:1;:8;;;;;;;;;;;;2563:15;;;2441:144;:::o;1448:735:10:-;1508:1;1501:6;:8;1493:65;;;;;;;;;;;;:::i;:::-;;;;;;;;;1668:6;1620:10;;;;;;;;;;:20;;;1641:10;1660:4;1620:46;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:54;;1612:105;;;;;;;;;;;;:::i;:::-;;;;;;;;;1770:10;;;;;;;;;;:23;;;1794:10;1813:4;1819:6;1770:56;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1932:1;1915:15;;:18;1912:72;;1949:23;:21;:23::i;:::-;1912:72;2042:6;2019:10;:22;2030:10;2019:22;;;;;;;;;;;;;;;;:29;;;;:::i;:::-;1996:10;:22;2007:10;1996:22;;;;;;;;;;;;;;;:52;;;;2075:15;2059;:31;;;;2157:10;2150:25;;;2168:6;2150:25;;;;;;:::i;:::-;;;;;;;;1448:735;:::o;1109:40::-;;;;;;;;;;;;;;;;;:::o;2724:394::-;2774:19;2810:15;;2794;:31;;;;:::i;:::-;2774:51;;2897:26;2951:3;2948:1;2925:10;:22;2936:10;2925:22;;;;;;;;;;;;;;;;:24;;;;:::i;:::-;2924:30;;;;:::i;:::-;2897:57;;2965:27;3015:14;2993:21;:36;;;;:::i;:::-;2965:64;;3088:22;3064:11;:23;3076:10;3064:23;;;;;;;;;;;;;;;;:46;;;;:::i;:::-;3040:11;:23;3052:10;3040:23;;;;;;;;;;;;;;;:70;;;;2763:355;;;2724:394::o;3405:215:0:-;2334:13;:11;:13::i;:::-;3509:1:::1;3489:22;;:8;:22;;::::0;3485:91:::1;;3562:1;3534:31;;;;;;;;;;;:::i;:::-;;;;;;;;3485:91;3585:28;3604:8;3585:18;:28::i;:::-;3405:215:::0;:::o;373:30:10:-;;;;;;;;;;;;;:::o;2658:162:0:-;2728:12;:10;:12::i;:::-;2717:23;;:7;:5;:7::i;:::-;:23;;;2713:101;;2790:12;:10;:12::i;:::-;2763:40;;;;;;;;;;;:::i;:::-;;;;;;;;2713:101;2658:162::o;3774:248::-;3847:24;3874:20;:18;:20::i;:::-;3847:47;;3904:16;3923:1;:8;;;;;;;;;;;;3904:27;;3952:8;3941:1;:8;;;:19;;;;;;;;;;;;;;;;;;4006:8;3975:40;;3996:8;3975:40;;;;;;;;;;;;3837:185;;3774:248;:::o;1192:159::-;1244:24;1313:22;1303:32;;1192:159;:::o;887:96:2:-;940:7;966:10;959:17;;887:96;:::o;88:117:11:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:139::-;742:5;780:6;767:20;758:29;;796:33;823:5;796:33;:::i;:::-;696:139;;;;:::o;841:329::-;900:6;949:2;937:9;928:7;924:23;920:32;917:119;;;955:79;;:::i;:::-;917:119;1075:1;1100:53;1145:7;1136:6;1125:9;1121:22;1100:53;:::i;:::-;1090:63;;1046:117;841:329;;;;:::o;1176:77::-;1213:7;1242:5;1231:16;;1176:77;;;:::o;1259:118::-;1346:24;1364:5;1346:24;:::i;:::-;1341:3;1334:37;1259:118;;:::o;1383:222::-;1476:4;1514:2;1503:9;1499:18;1491:26;;1527:71;1595:1;1584:9;1580:17;1571:6;1527:71;:::i;:::-;1383:222;;;;:::o;1611:122::-;1684:24;1702:5;1684:24;:::i;:::-;1677:5;1674:35;1664:63;;1723:1;1720;1713:12;1664:63;1611:122;:::o;1739:139::-;1785:5;1823:6;1810:20;1801:29;;1839:33;1866:5;1839:33;:::i;:::-;1739:139;;;;:::o;1884:329::-;1943:6;1992:2;1980:9;1971:7;1967:23;1963:32;1960:119;;;1998:79;;:::i;:::-;1960:119;2118:1;2143:53;2188:7;2179:6;2168:9;2164:22;2143:53;:::i;:::-;2133:63;;2089:117;1884:329;;;;:::o;2219:60::-;2247:3;2268:5;2261:12;;2219:60;;;:::o;2285:142::-;2335:9;2368:53;2386:34;2395:24;2413:5;2395:24;:::i;:::-;2386:34;:::i;:::-;2368:53;:::i;:::-;2355:66;;2285:142;;;:::o;2433:126::-;2483:9;2516:37;2547:5;2516:37;:::i;:::-;2503:50;;2433:126;;;:::o;2565:145::-;2634:9;2667:37;2698:5;2667:37;:::i;:::-;2654:50;;2565:145;;;:::o;2716:169::-;2822:56;2872:5;2822:56;:::i;:::-;2817:3;2810:69;2716:169;;:::o;2891:260::-;3003:4;3041:2;3030:9;3026:18;3018:26;;3054:90;3141:1;3130:9;3126:17;3117:6;3054:90;:::i;:::-;2891:260;;;;:::o;3157:118::-;3244:24;3262:5;3244:24;:::i;:::-;3239:3;3232:37;3157:118;;:::o;3281:222::-;3374:4;3412:2;3401:9;3397:18;3389:26;;3425:71;3493:1;3482:9;3478:17;3469:6;3425:71;:::i;:::-;3281:222;;;;:::o;3509:146::-;3579:9;3612:37;3643:5;3612:37;:::i;:::-;3599:50;;3509:146;;;:::o;3661:171::-;3768:57;3819:5;3768:57;:::i;:::-;3763:3;3756:70;3661:171;;:::o;3838:262::-;3951:4;3989:2;3978:9;3974:18;3966:26;;4002:91;4090:1;4079:9;4075:17;4066:6;4002:91;:::i;:::-;3838:262;;;;:::o;4106:169::-;4190:11;4224:6;4219:3;4212:19;4264:4;4259:3;4255:14;4240:29;;4106:169;;;;:::o;4281:177::-;4421:29;4417:1;4409:6;4405:14;4398:53;4281:177;:::o;4464:366::-;4606:3;4627:67;4691:2;4686:3;4627:67;:::i;:::-;4620:74;;4703:93;4792:3;4703:93;:::i;:::-;4821:2;4816:3;4812:12;4805:19;;4464:366;;;:::o;4836:419::-;5002:4;5040:2;5029:9;5025:18;5017:26;;5089:9;5083:4;5079:20;5075:1;5064:9;5060:17;5053:47;5117:131;5243:4;5117:131;:::i;:::-;5109:139;;4836:419;;;:::o;5261:180::-;5309:77;5306:1;5299:88;5406:4;5403:1;5396:15;5430:4;5427:1;5420:15;5447:194;5487:4;5507:20;5525:1;5507:20;:::i;:::-;5502:25;;5541:20;5559:1;5541:20;:::i;:::-;5536:25;;5585:1;5582;5578:9;5570:17;;5609:1;5603:4;5600:11;5597:37;;;5614:18;;:::i;:::-;5597:37;5447:194;;;;:::o;5647:332::-;5768:4;5806:2;5795:9;5791:18;5783:26;;5819:71;5887:1;5876:9;5872:17;5863:6;5819:71;:::i;:::-;5900:72;5968:2;5957:9;5953:18;5944:6;5900:72;:::i;:::-;5647:332;;;;;:::o;5985:90::-;6019:7;6062:5;6055:13;6048:21;6037:32;;5985:90;;;:::o;6081:116::-;6151:21;6166:5;6151:21;:::i;:::-;6144:5;6141:32;6131:60;;6187:1;6184;6177:12;6131:60;6081:116;:::o;6203:137::-;6257:5;6288:6;6282:13;6273:22;;6304:30;6328:5;6304:30;:::i;:::-;6203:137;;;;:::o;6346:345::-;6413:6;6462:2;6450:9;6441:7;6437:23;6433:32;6430:119;;;6468:79;;:::i;:::-;6430:119;6588:1;6613:61;6666:7;6657:6;6646:9;6642:22;6613:61;:::i;:::-;6603:71;;6559:125;6346:345;;;;:::o;6697:169::-;6837:21;6833:1;6825:6;6821:14;6814:45;6697:169;:::o;6872:366::-;7014:3;7035:67;7099:2;7094:3;7035:67;:::i;:::-;7028:74;;7111:93;7200:3;7111:93;:::i;:::-;7229:2;7224:3;7220:12;7213:19;;6872:366;;;:::o;7244:419::-;7410:4;7448:2;7437:9;7433:18;7425:26;;7497:9;7491:4;7487:20;7483:1;7472:9;7468:17;7461:47;7525:131;7651:4;7525:131;:::i;:::-;7517:139;;7244:419;;;:::o;7669:232::-;7809:34;7805:1;7797:6;7793:14;7786:58;7878:15;7873:2;7865:6;7861:15;7854:40;7669:232;:::o;7907:366::-;8049:3;8070:67;8134:2;8129:3;8070:67;:::i;:::-;8063:74;;8146:93;8235:3;8146:93;:::i;:::-;8264:2;8259:3;8255:12;8248:19;;7907:366;;;:::o;8279:419::-;8445:4;8483:2;8472:9;8468:18;8460:26;;8532:9;8526:4;8522:20;8518:1;8507:9;8503:17;8496:47;8560:131;8686:4;8560:131;:::i;:::-;8552:139;;8279:419;;;:::o;8704:332::-;8825:4;8863:2;8852:9;8848:18;8840:26;;8876:71;8944:1;8933:9;8929:17;8920:6;8876:71;:::i;:::-;8957:72;9025:2;9014:9;9010:18;9001:6;8957:72;:::i;:::-;8704:332;;;;;:::o;9042:143::-;9099:5;9130:6;9124:13;9115:22;;9146:33;9173:5;9146:33;:::i;:::-;9042:143;;;;:::o;9191:351::-;9261:6;9310:2;9298:9;9289:7;9285:23;9281:32;9278:119;;;9316:79;;:::i;:::-;9278:119;9436:1;9461:64;9517:7;9508:6;9497:9;9493:22;9461:64;:::i;:::-;9451:74;;9407:128;9191:351;;;;:::o;9548:226::-;9688:34;9684:1;9676:6;9672:14;9665:58;9757:9;9752:2;9744:6;9740:15;9733:34;9548:226;:::o;9780:366::-;9922:3;9943:67;10007:2;10002:3;9943:67;:::i;:::-;9936:74;;10019:93;10108:3;10019:93;:::i;:::-;10137:2;10132:3;10128:12;10121:19;;9780:366;;;:::o;10152:419::-;10318:4;10356:2;10345:9;10341:18;10333:26;;10405:9;10399:4;10395:20;10391:1;10380:9;10376:17;10369:47;10433:131;10559:4;10433:131;:::i;:::-;10425:139;;10152:419;;;:::o;10577:442::-;10726:4;10764:2;10753:9;10749:18;10741:26;;10777:71;10845:1;10834:9;10830:17;10821:6;10777:71;:::i;:::-;10858:72;10926:2;10915:9;10911:18;10902:6;10858:72;:::i;:::-;10940;11008:2;10997:9;10993:18;10984:6;10940:72;:::i;:::-;10577:442;;;;;;:::o;11025:191::-;11065:3;11084:20;11102:1;11084:20;:::i;:::-;11079:25;;11118:20;11136:1;11118:20;:::i;:::-;11113:25;;11161:1;11158;11154:9;11147:16;;11182:3;11179:1;11176:10;11173:36;;;11189:18;;:::i;:::-;11173:36;11025:191;;;;:::o;11222:410::-;11262:7;11285:20;11303:1;11285:20;:::i;:::-;11280:25;;11319:20;11337:1;11319:20;:::i;:::-;11314:25;;11374:1;11371;11367:9;11396:30;11414:11;11396:30;:::i;:::-;11385:41;;11575:1;11566:7;11562:15;11559:1;11556:22;11536:1;11529:9;11509:83;11486:139;;11605:18;;:::i;:::-;11486:139;11270:362;11222:410;;;;:::o;11638:180::-;11686:77;11683:1;11676:88;11783:4;11780:1;11773:15;11807:4;11804:1;11797:15;11824:185;11864:1;11881:20;11899:1;11881:20;:::i;:::-;11876:25;;11915:20;11933:1;11915:20;:::i;:::-;11910:25;;11954:1;11944:35;;11959:18;;:::i;:::-;11944:35;12001:1;11998;11994:9;11989:14;;11824:185;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "967600",
								"executionCost": "1006",
								"totalCost": "968606"
							},
							"external": {
								"calculateTotalRewards()": "infinite",
								"claimRewards()": "infinite",
								"owner()": "2567",
								"renounceOwnership()": "infinite",
								"rewardToken()": "infinite",
								"stake(uint256)": "infinite",
								"stakeToken()": "infinite",
								"transferOwnership(address)": "infinite",
								"userRewards(address)": "2803",
								"userStaked(address)": "2846",
								"withdraw(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 272,
									"end": 3486,
									"name": "PUSH",
									"source": 10,
									"value": "80"
								},
								{
									"begin": 272,
									"end": 3486,
									"name": "PUSH",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 272,
									"end": 3486,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 272,
									"end": 3486,
									"name": "CALLVALUE",
									"source": 10
								},
								{
									"begin": 272,
									"end": 3486,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 272,
									"end": 3486,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 272,
									"end": 3486,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 272,
									"end": 3486,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 272,
									"end": 3486,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 272,
									"end": 3486,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 272,
									"end": 3486,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 272,
									"end": 3486,
									"name": "tag",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 272,
									"end": 3486,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 272,
									"end": 3486,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 272,
									"end": 3486,
									"name": "PUSH #[$]",
									"source": 10,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 272,
									"end": 3486,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 272,
									"end": 3486,
									"name": "PUSH [$]",
									"source": 10,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 272,
									"end": 3486,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 272,
									"end": 3486,
									"name": "CODECOPY",
									"source": 10
								},
								{
									"begin": 272,
									"end": 3486,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 272,
									"end": 3486,
									"name": "RETURN",
									"source": 10
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220855c2a73ba96bfeb5da6664fb48529a41f28b9df79b113e82659c7c9d4ace50064736f6c634300081a0033",
									".code": [
										{
											"begin": 272,
											"end": 3486,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 272,
											"end": 3486,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 272,
											"end": 3486,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 272,
											"end": 3486,
											"name": "CALLVALUE",
											"source": 10
										},
										{
											"begin": 272,
											"end": 3486,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 272,
											"end": 3486,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 272,
											"end": 3486,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 272,
											"end": 3486,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 272,
											"end": 3486,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 272,
											"end": 3486,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 272,
											"end": 3486,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 272,
											"end": 3486,
											"name": "tag",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 272,
											"end": 3486,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 272,
											"end": 3486,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 272,
											"end": 3486,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 272,
											"end": 3486,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 272,
											"end": 3486,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 272,
											"end": 3486,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 272,
											"end": 3486,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 272,
											"end": 3486,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 272,
											"end": 3486,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 272,
											"end": 3486,
											"name": "PUSH",
											"source": 10,
											"value": "E0"
										},
										{
											"begin": 272,
											"end": 3486,
											"name": "SHR",
											"source": 10
										},
										{
											"begin": 272,
											"end": 3486,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 272,
											"end": 3486,
											"name": "PUSH",
											"source": 10,
											"value": "8DA5CB5B"
										},
										{
											"begin": 272,
											"end": 3486,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 272,
											"end": 3486,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "14"
										},
										{
											"begin": 272,
											"end": 3486,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 272,
											"end": 3486,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 272,
											"end": 3486,
											"name": "PUSH",
											"source": 10,
											"value": "8DA5CB5B"
										},
										{
											"begin": 272,
											"end": 3486,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 272,
											"end": 3486,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "8"
										},
										{
											"begin": 272,
											"end": 3486,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 272,
											"end": 3486,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 272,
											"end": 3486,
											"name": "PUSH",
											"source": 10,
											"value": "A694FC3A"
										},
										{
											"begin": 272,
											"end": 3486,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 272,
											"end": 3486,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "9"
										},
										{
											"begin": 272,
											"end": 3486,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 272,
											"end": 3486,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 272,
											"end": 3486,
											"name": "PUSH",
											"source": 10,
											"value": "ACC3A939"
										},
										{
											"begin": 272,
											"end": 3486,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 272,
											"end": 3486,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "10"
										},
										{
											"begin": 272,
											"end": 3486,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 272,
											"end": 3486,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 272,
											"end": 3486,
											"name": "PUSH",
											"source": 10,
											"value": "BA5A5319"
										},
										{
											"begin": 272,
											"end": 3486,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 272,
											"end": 3486,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "11"
										},
										{
											"begin": 272,
											"end": 3486,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 272,
											"end": 3486,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 272,
											"end": 3486,
											"name": "PUSH",
											"source": 10,
											"value": "F2FDE38B"
										},
										{
											"begin": 272,
											"end": 3486,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 272,
											"end": 3486,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "12"
										},
										{
											"begin": 272,
											"end": 3486,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 272,
											"end": 3486,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 272,
											"end": 3486,
											"name": "PUSH",
											"source": 10,
											"value": "F7C618C1"
										},
										{
											"begin": 272,
											"end": 3486,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 272,
											"end": 3486,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "13"
										},
										{
											"begin": 272,
											"end": 3486,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 272,
											"end": 3486,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 272,
											"end": 3486,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 272,
											"end": 3486,
											"name": "tag",
											"source": 10,
											"value": "14"
										},
										{
											"begin": 272,
											"end": 3486,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 272,
											"end": 3486,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 272,
											"end": 3486,
											"name": "PUSH",
											"source": 10,
											"value": "660F1E8"
										},
										{
											"begin": 272,
											"end": 3486,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 272,
											"end": 3486,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "3"
										},
										{
											"begin": 272,
											"end": 3486,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 272,
											"end": 3486,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 272,
											"end": 3486,
											"name": "PUSH",
											"source": 10,
											"value": "2E1A7D4D"
										},
										{
											"begin": 272,
											"end": 3486,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 272,
											"end": 3486,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 272,
											"end": 3486,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 272,
											"end": 3486,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 272,
											"end": 3486,
											"name": "PUSH",
											"source": 10,
											"value": "372500AB"
										},
										{
											"begin": 272,
											"end": 3486,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 272,
											"end": 3486,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "5"
										},
										{
											"begin": 272,
											"end": 3486,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 272,
											"end": 3486,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 272,
											"end": 3486,
											"name": "PUSH",
											"source": 10,
											"value": "51ED6A30"
										},
										{
											"begin": 272,
											"end": 3486,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 272,
											"end": 3486,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "6"
										},
										{
											"begin": 272,
											"end": 3486,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 272,
											"end": 3486,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 272,
											"end": 3486,
											"name": "PUSH",
											"source": 10,
											"value": "715018A6"
										},
										{
											"begin": 272,
											"end": 3486,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 272,
											"end": 3486,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "7"
										},
										{
											"begin": 272,
											"end": 3486,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 272,
											"end": 3486,
											"name": "tag",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 272,
											"end": 3486,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 272,
											"end": 3486,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 272,
											"end": 3486,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 272,
											"end": 3486,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 1156,
											"end": 1197,
											"name": "tag",
											"source": 10,
											"value": "3"
										},
										{
											"begin": 1156,
											"end": 1197,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1156,
											"end": 1197,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "15"
										},
										{
											"begin": 1156,
											"end": 1197,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 1156,
											"end": 1197,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1156,
											"end": 1197,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 1156,
											"end": 1197,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 1156,
											"end": 1197,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1156,
											"end": 1197,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1156,
											"end": 1197,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1156,
											"end": 1197,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "16"
										},
										{
											"begin": 1156,
											"end": 1197,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1156,
											"end": 1197,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1156,
											"end": 1197,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "17"
										},
										{
											"begin": 1156,
											"end": 1197,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1156,
											"end": 1197,
											"name": "tag",
											"source": 10,
											"value": "16"
										},
										{
											"begin": 1156,
											"end": 1197,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1156,
											"end": 1197,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "18"
										},
										{
											"begin": 1156,
											"end": 1197,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1156,
											"end": 1197,
											"name": "tag",
											"source": 10,
											"value": "15"
										},
										{
											"begin": 1156,
											"end": 1197,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1156,
											"end": 1197,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1156,
											"end": 1197,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1156,
											"end": 1197,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "19"
										},
										{
											"begin": 1156,
											"end": 1197,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1156,
											"end": 1197,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1156,
											"end": 1197,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1156,
											"end": 1197,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1156,
											"end": 1197,
											"name": "tag",
											"source": 10,
											"value": "19"
										},
										{
											"begin": 1156,
											"end": 1197,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1156,
											"end": 1197,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1156,
											"end": 1197,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1156,
											"end": 1197,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1156,
											"end": 1197,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1156,
											"end": 1197,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 1156,
											"end": 1197,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1156,
											"end": 1197,
											"name": "RETURN",
											"source": 10
										},
										{
											"begin": 2230,
											"end": 2627,
											"name": "tag",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 2230,
											"end": 2627,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2230,
											"end": 2627,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "21"
										},
										{
											"begin": 2230,
											"end": 2627,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 2230,
											"end": 2627,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2230,
											"end": 2627,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 2230,
											"end": 2627,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 2230,
											"end": 2627,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2230,
											"end": 2627,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2230,
											"end": 2627,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2230,
											"end": 2627,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "22"
										},
										{
											"begin": 2230,
											"end": 2627,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2230,
											"end": 2627,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2230,
											"end": 2627,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "23"
										},
										{
											"begin": 2230,
											"end": 2627,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2230,
											"end": 2627,
											"name": "tag",
											"source": 10,
											"value": "22"
										},
										{
											"begin": 2230,
											"end": 2627,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2230,
											"end": 2627,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 2230,
											"end": 2627,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2230,
											"end": 2627,
											"name": "tag",
											"source": 10,
											"value": "21"
										},
										{
											"begin": 2230,
											"end": 2627,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2230,
											"end": 2627,
											"name": "STOP",
											"source": 10
										},
										{
											"begin": 3165,
											"end": 3483,
											"name": "tag",
											"source": 10,
											"value": "5"
										},
										{
											"begin": 3165,
											"end": 3483,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3165,
											"end": 3483,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "25"
										},
										{
											"begin": 3165,
											"end": 3483,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "26"
										},
										{
											"begin": 3165,
											"end": 3483,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3165,
											"end": 3483,
											"name": "tag",
											"source": 10,
											"value": "25"
										},
										{
											"begin": 3165,
											"end": 3483,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3165,
											"end": 3483,
											"name": "STOP",
											"source": 10
										},
										{
											"begin": 338,
											"end": 366,
											"name": "tag",
											"source": 10,
											"value": "6"
										},
										{
											"begin": 338,
											"end": 366,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 338,
											"end": 366,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "27"
										},
										{
											"begin": 338,
											"end": 366,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "28"
										},
										{
											"begin": 338,
											"end": 366,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 338,
											"end": 366,
											"name": "tag",
											"source": 10,
											"value": "27"
										},
										{
											"begin": 338,
											"end": 366,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 338,
											"end": 366,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 338,
											"end": 366,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 338,
											"end": 366,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "29"
										},
										{
											"begin": 338,
											"end": 366,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 338,
											"end": 366,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 338,
											"end": 366,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "30"
										},
										{
											"begin": 338,
											"end": 366,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 338,
											"end": 366,
											"name": "tag",
											"source": 10,
											"value": "29"
										},
										{
											"begin": 338,
											"end": 366,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 338,
											"end": 366,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 338,
											"end": 366,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 338,
											"end": 366,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 338,
											"end": 366,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 338,
											"end": 366,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 338,
											"end": 366,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 338,
											"end": 366,
											"name": "RETURN",
											"source": 10
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 3155,
											"end": 3256,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "tag",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 2441,
											"end": 2585,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "tag",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 2441,
											"end": 2585,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "tag",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1448,
											"end": 2183,
											"name": "tag",
											"source": 10,
											"value": "9"
										},
										{
											"begin": 1448,
											"end": 2183,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1448,
											"end": 2183,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "37"
										},
										{
											"begin": 1448,
											"end": 2183,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 1448,
											"end": 2183,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1448,
											"end": 2183,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 1448,
											"end": 2183,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 1448,
											"end": 2183,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1448,
											"end": 2183,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1448,
											"end": 2183,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1448,
											"end": 2183,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "38"
										},
										{
											"begin": 1448,
											"end": 2183,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1448,
											"end": 2183,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1448,
											"end": 2183,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "23"
										},
										{
											"begin": 1448,
											"end": 2183,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1448,
											"end": 2183,
											"name": "tag",
											"source": 10,
											"value": "38"
										},
										{
											"begin": 1448,
											"end": 2183,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1448,
											"end": 2183,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "39"
										},
										{
											"begin": 1448,
											"end": 2183,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1448,
											"end": 2183,
											"name": "tag",
											"source": 10,
											"value": "37"
										},
										{
											"begin": 1448,
											"end": 2183,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1448,
											"end": 2183,
											"name": "STOP",
											"source": 10
										},
										{
											"begin": 1109,
											"end": 1149,
											"name": "tag",
											"source": 10,
											"value": "10"
										},
										{
											"begin": 1109,
											"end": 1149,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1109,
											"end": 1149,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1109,
											"end": 1149,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 1109,
											"end": 1149,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1109,
											"end": 1149,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 1109,
											"end": 1149,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 1109,
											"end": 1149,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1109,
											"end": 1149,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1109,
											"end": 1149,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1109,
											"end": 1149,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "41"
										},
										{
											"begin": 1109,
											"end": 1149,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1109,
											"end": 1149,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1109,
											"end": 1149,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "17"
										},
										{
											"begin": 1109,
											"end": 1149,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1109,
											"end": 1149,
											"name": "tag",
											"source": 10,
											"value": "41"
										},
										{
											"begin": 1109,
											"end": 1149,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1109,
											"end": 1149,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "42"
										},
										{
											"begin": 1109,
											"end": 1149,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1109,
											"end": 1149,
											"name": "tag",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1109,
											"end": 1149,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1109,
											"end": 1149,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1109,
											"end": 1149,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1109,
											"end": 1149,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "43"
										},
										{
											"begin": 1109,
											"end": 1149,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1109,
											"end": 1149,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1109,
											"end": 1149,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1109,
											"end": 1149,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1109,
											"end": 1149,
											"name": "tag",
											"source": 10,
											"value": "43"
										},
										{
											"begin": 1109,
											"end": 1149,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1109,
											"end": 1149,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1109,
											"end": 1149,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1109,
											"end": 1149,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1109,
											"end": 1149,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1109,
											"end": 1149,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 1109,
											"end": 1149,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1109,
											"end": 1149,
											"name": "RETURN",
											"source": 10
										},
										{
											"begin": 2724,
											"end": 3118,
											"name": "tag",
											"source": 10,
											"value": "11"
										},
										{
											"begin": 2724,
											"end": 3118,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2724,
											"end": 3118,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 2724,
											"end": 3118,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "45"
										},
										{
											"begin": 2724,
											"end": 3118,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2724,
											"end": 3118,
											"name": "tag",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 2724,
											"end": 3118,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2724,
											"end": 3118,
											"name": "STOP",
											"source": 10
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 3405,
											"end": 3620,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "tag",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 3405,
											"end": 3620,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "tag",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 373,
											"end": 403,
											"name": "tag",
											"source": 10,
											"value": "13"
										},
										{
											"begin": 373,
											"end": 403,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 373,
											"end": 403,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "49"
										},
										{
											"begin": 373,
											"end": 403,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "50"
										},
										{
											"begin": 373,
											"end": 403,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 373,
											"end": 403,
											"name": "tag",
											"source": 10,
											"value": "49"
										},
										{
											"begin": 373,
											"end": 403,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 373,
											"end": 403,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 373,
											"end": 403,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 373,
											"end": 403,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "51"
										},
										{
											"begin": 373,
											"end": 403,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 373,
											"end": 403,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 373,
											"end": 403,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "52"
										},
										{
											"begin": 373,
											"end": 403,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 373,
											"end": 403,
											"name": "tag",
											"source": 10,
											"value": "51"
										},
										{
											"begin": 373,
											"end": 403,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 373,
											"end": 403,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 373,
											"end": 403,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 373,
											"end": 403,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 373,
											"end": 403,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 373,
											"end": 403,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 373,
											"end": 403,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 373,
											"end": 403,
											"name": "RETURN",
											"source": 10
										},
										{
											"begin": 1156,
											"end": 1197,
											"name": "tag",
											"source": 10,
											"value": "18"
										},
										{
											"begin": 1156,
											"end": 1197,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1156,
											"end": 1197,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 1156,
											"end": 1197,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1156,
											"end": 1197,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1156,
											"end": 1197,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1156,
											"end": 1197,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1156,
											"end": 1197,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1156,
											"end": 1197,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1156,
											"end": 1197,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1156,
											"end": 1197,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 1156,
											"end": 1197,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1156,
											"end": 1197,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1156,
											"end": 1197,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1156,
											"end": 1197,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1156,
											"end": 1197,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1156,
											"end": 1197,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 1156,
											"end": 1197,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1156,
											"end": 1197,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2230,
											"end": 2627,
											"name": "tag",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 2230,
											"end": 2627,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2309,
											"end": 2310,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2286,
											"end": 2296,
											"name": "PUSH",
											"source": 10,
											"value": "3"
										},
										{
											"begin": 2286,
											"end": 2308,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2297,
											"end": 2307,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 2286,
											"end": 2308,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2286,
											"end": 2308,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2286,
											"end": 2308,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2286,
											"end": 2308,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2286,
											"end": 2308,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2286,
											"end": 2308,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2286,
											"end": 2308,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2286,
											"end": 2308,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2286,
											"end": 2308,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2286,
											"end": 2308,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2286,
											"end": 2308,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2286,
											"end": 2308,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2286,
											"end": 2308,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2286,
											"end": 2308,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2286,
											"end": 2308,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 2286,
											"end": 2308,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 2286,
											"end": 2310,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 2278,
											"end": 2341,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "54"
										},
										{
											"begin": 2278,
											"end": 2341,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2278,
											"end": 2341,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2278,
											"end": 2341,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2278,
											"end": 2341,
											"name": "PUSH",
											"source": 10,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2278,
											"end": 2341,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2278,
											"end": 2341,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2278,
											"end": 2341,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 2278,
											"end": 2341,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2278,
											"end": 2341,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "55"
										},
										{
											"begin": 2278,
											"end": 2341,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2278,
											"end": 2341,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "56"
										},
										{
											"begin": 2278,
											"end": 2341,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2278,
											"end": 2341,
											"name": "tag",
											"source": 10,
											"value": "55"
										},
										{
											"begin": 2278,
											"end": 2341,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2278,
											"end": 2341,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2278,
											"end": 2341,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2278,
											"end": 2341,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2278,
											"end": 2341,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2278,
											"end": 2341,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 2278,
											"end": 2341,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2278,
											"end": 2341,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 2278,
											"end": 2341,
											"name": "tag",
											"source": 10,
											"value": "54"
										},
										{
											"begin": 2278,
											"end": 2341,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2352,
											"end": 2375,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "57"
										},
										{
											"begin": 2352,
											"end": 2373,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "45"
										},
										{
											"begin": 2352,
											"end": 2375,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2352,
											"end": 2375,
											"name": "tag",
											"source": 10,
											"value": "57"
										},
										{
											"begin": 2352,
											"end": 2375,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2432,
											"end": 2438,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2409,
											"end": 2419,
											"name": "PUSH",
											"source": 10,
											"value": "3"
										},
										{
											"begin": 2409,
											"end": 2431,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2420,
											"end": 2430,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 2409,
											"end": 2431,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2409,
											"end": 2431,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2409,
											"end": 2431,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2409,
											"end": 2431,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2409,
											"end": 2431,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2409,
											"end": 2431,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2409,
											"end": 2431,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2409,
											"end": 2431,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2409,
											"end": 2431,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2409,
											"end": 2431,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2409,
											"end": 2431,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2409,
											"end": 2431,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2409,
											"end": 2431,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2409,
											"end": 2431,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2409,
											"end": 2431,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 2409,
											"end": 2431,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 2409,
											"end": 2438,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "58"
										},
										{
											"begin": 2409,
											"end": 2438,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2409,
											"end": 2438,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2409,
											"end": 2438,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "59"
										},
										{
											"begin": 2409,
											"end": 2438,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2409,
											"end": 2438,
											"name": "tag",
											"source": 10,
											"value": "58"
										},
										{
											"begin": 2409,
											"end": 2438,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2386,
											"end": 2396,
											"name": "PUSH",
											"source": 10,
											"value": "3"
										},
										{
											"begin": 2386,
											"end": 2408,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2397,
											"end": 2407,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 2386,
											"end": 2408,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2386,
											"end": 2408,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2386,
											"end": 2408,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2386,
											"end": 2408,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2386,
											"end": 2408,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2386,
											"end": 2408,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2386,
											"end": 2408,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2386,
											"end": 2408,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2386,
											"end": 2408,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2386,
											"end": 2408,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2386,
											"end": 2408,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2386,
											"end": 2408,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2386,
											"end": 2408,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2386,
											"end": 2408,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2386,
											"end": 2408,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 2386,
											"end": 2438,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2386,
											"end": 2438,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2386,
											"end": 2438,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 2386,
											"end": 2438,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2449,
											"end": 2459,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2449,
											"end": 2459,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2449,
											"end": 2459,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 2449,
											"end": 2459,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2449,
											"end": 2459,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 2449,
											"end": 2459,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 2449,
											"end": 2459,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2449,
											"end": 2459,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 2449,
											"end": 2459,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2449,
											"end": 2459,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2449,
											"end": 2468,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2449,
											"end": 2468,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2449,
											"end": 2468,
											"name": "PUSH",
											"source": 10,
											"value": "A9059CBB"
										},
										{
											"begin": 2469,
											"end": 2479,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 2480,
											"end": 2486,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 2449,
											"end": 2487,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2449,
											"end": 2487,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2449,
											"end": 2487,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 2449,
											"end": 2487,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2449,
											"end": 2487,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2449,
											"end": 2487,
											"name": "PUSH",
											"source": 10,
											"value": "E0"
										},
										{
											"begin": 2449,
											"end": 2487,
											"name": "SHL",
											"source": 10
										},
										{
											"begin": 2449,
											"end": 2487,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2449,
											"end": 2487,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2449,
											"end": 2487,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 2449,
											"end": 2487,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2449,
											"end": 2487,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 2449,
											"end": 2487,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 2449,
											"end": 2487,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2449,
											"end": 2487,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2449,
											"end": 2487,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "61"
										},
										{
											"begin": 2449,
											"end": 2487,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2449,
											"end": 2487,
											"name": "tag",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 2449,
											"end": 2487,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2449,
											"end": 2487,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2449,
											"end": 2487,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2449,
											"end": 2487,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2449,
											"end": 2487,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2449,
											"end": 2487,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 2449,
											"end": 2487,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 2449,
											"end": 2487,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2449,
											"end": 2487,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2449,
											"end": 2487,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 2449,
											"end": 2487,
											"name": "GAS",
											"source": 10
										},
										{
											"begin": 2449,
											"end": 2487,
											"name": "CALL",
											"source": 10
										},
										{
											"begin": 2449,
											"end": 2487,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2449,
											"end": 2487,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2449,
											"end": 2487,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2449,
											"end": 2487,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "63"
										},
										{
											"begin": 2449,
											"end": 2487,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2449,
											"end": 2487,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 2449,
											"end": 2487,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2449,
											"end": 2487,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2449,
											"end": 2487,
											"name": "RETURNDATACOPY",
											"source": 10
										},
										{
											"begin": 2449,
											"end": 2487,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 2449,
											"end": 2487,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2449,
											"end": 2487,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 2449,
											"end": 2487,
											"name": "tag",
											"source": 10,
											"value": "63"
										},
										{
											"begin": 2449,
											"end": 2487,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2449,
											"end": 2487,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2449,
											"end": 2487,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2449,
											"end": 2487,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2449,
											"end": 2487,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2449,
											"end": 2487,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2449,
											"end": 2487,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2449,
											"end": 2487,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 2449,
											"end": 2487,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 2449,
											"end": 2487,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 2449,
											"end": 2487,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 2449,
											"end": 2487,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2449,
											"end": 2487,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2449,
											"end": 2487,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2449,
											"end": 2487,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2449,
											"end": 2487,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2449,
											"end": 2487,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2449,
											"end": 2487,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2449,
											"end": 2487,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2449,
											"end": 2487,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2449,
											"end": 2487,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2449,
											"end": 2487,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2449,
											"end": 2487,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2449,
											"end": 2487,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 2449,
											"end": 2487,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2449,
											"end": 2487,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2449,
											"end": 2487,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "65"
										},
										{
											"begin": 2449,
											"end": 2487,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2449,
											"end": 2487,
											"name": "tag",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 2449,
											"end": 2487,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2449,
											"end": 2487,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2514,
											"end": 2529,
											"name": "TIMESTAMP",
											"source": 10
										},
										{
											"begin": 2498,
											"end": 2513,
											"name": "PUSH",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 2498,
											"end": 2529,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2498,
											"end": 2529,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2498,
											"end": 2529,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 2498,
											"end": 2529,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2601,
											"end": 2611,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 2592,
											"end": 2619,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2592,
											"end": 2619,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2592,
											"end": 2619,
											"name": "PUSH",
											"source": 10,
											"value": "884EDAD9CE6FA2440D8A54CC123490EB96D2768479D49FF9C7366125A9424364"
										},
										{
											"begin": 2612,
											"end": 2618,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2592,
											"end": 2619,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2592,
											"end": 2619,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2592,
											"end": 2619,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "66"
										},
										{
											"begin": 2592,
											"end": 2619,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2592,
											"end": 2619,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2592,
											"end": 2619,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2592,
											"end": 2619,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2592,
											"end": 2619,
											"name": "tag",
											"source": 10,
											"value": "66"
										},
										{
											"begin": 2592,
											"end": 2619,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2592,
											"end": 2619,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2592,
											"end": 2619,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2592,
											"end": 2619,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2592,
											"end": 2619,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2592,
											"end": 2619,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 2592,
											"end": 2619,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2592,
											"end": 2619,
											"name": "LOG2",
											"source": 10
										},
										{
											"begin": 2230,
											"end": 2627,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2230,
											"end": 2627,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3165,
											"end": 3483,
											"name": "tag",
											"source": 10,
											"value": "26"
										},
										{
											"begin": 3165,
											"end": 3483,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3238,
											"end": 3239,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3214,
											"end": 3225,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 3214,
											"end": 3237,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3226,
											"end": 3236,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 3214,
											"end": 3237,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3214,
											"end": 3237,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 3214,
											"end": 3237,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3214,
											"end": 3237,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 3214,
											"end": 3237,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3214,
											"end": 3237,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3214,
											"end": 3237,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3214,
											"end": 3237,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3214,
											"end": 3237,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3214,
											"end": 3237,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3214,
											"end": 3237,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3214,
											"end": 3237,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3214,
											"end": 3237,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3214,
											"end": 3237,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3214,
											"end": 3237,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 3214,
											"end": 3237,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 3214,
											"end": 3239,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 3206,
											"end": 3262,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "68"
										},
										{
											"begin": 3206,
											"end": 3262,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3206,
											"end": 3262,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 3206,
											"end": 3262,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 3206,
											"end": 3262,
											"name": "PUSH",
											"source": 10,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3206,
											"end": 3262,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3206,
											"end": 3262,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3206,
											"end": 3262,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 3206,
											"end": 3262,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3206,
											"end": 3262,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "69"
										},
										{
											"begin": 3206,
											"end": 3262,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3206,
											"end": 3262,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "70"
										},
										{
											"begin": 3206,
											"end": 3262,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3206,
											"end": 3262,
											"name": "tag",
											"source": 10,
											"value": "69"
										},
										{
											"begin": 3206,
											"end": 3262,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3206,
											"end": 3262,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 3206,
											"end": 3262,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 3206,
											"end": 3262,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3206,
											"end": 3262,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3206,
											"end": 3262,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 3206,
											"end": 3262,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3206,
											"end": 3262,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 3206,
											"end": 3262,
											"name": "tag",
											"source": 10,
											"value": "68"
										},
										{
											"begin": 3206,
											"end": 3262,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3273,
											"end": 3284,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 3273,
											"end": 3284,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3273,
											"end": 3284,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3273,
											"end": 3284,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 3273,
											"end": 3284,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3273,
											"end": 3284,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 3273,
											"end": 3284,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 3273,
											"end": 3284,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3273,
											"end": 3284,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 3273,
											"end": 3284,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3273,
											"end": 3284,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 3273,
											"end": 3293,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3273,
											"end": 3293,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 3273,
											"end": 3293,
											"name": "PUSH",
											"source": 10,
											"value": "A9059CBB"
										},
										{
											"begin": 3294,
											"end": 3304,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 3305,
											"end": 3316,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 3305,
											"end": 3328,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3317,
											"end": 3327,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 3305,
											"end": 3328,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3305,
											"end": 3328,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 3305,
											"end": 3328,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3305,
											"end": 3328,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 3305,
											"end": 3328,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3305,
											"end": 3328,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3305,
											"end": 3328,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3305,
											"end": 3328,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3305,
											"end": 3328,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3305,
											"end": 3328,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3305,
											"end": 3328,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3305,
											"end": 3328,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3305,
											"end": 3328,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3305,
											"end": 3328,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3305,
											"end": 3328,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 3305,
											"end": 3328,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 3273,
											"end": 3329,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 3273,
											"end": 3329,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 3273,
											"end": 3329,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3273,
											"end": 3329,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3273,
											"end": 3329,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 3273,
											"end": 3329,
											"name": "PUSH",
											"source": 10,
											"value": "E0"
										},
										{
											"begin": 3273,
											"end": 3329,
											"name": "SHL",
											"source": 10
										},
										{
											"begin": 3273,
											"end": 3329,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3273,
											"end": 3329,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3273,
											"end": 3329,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 3273,
											"end": 3329,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3273,
											"end": 3329,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "71"
										},
										{
											"begin": 3273,
											"end": 3329,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 3273,
											"end": 3329,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3273,
											"end": 3329,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3273,
											"end": 3329,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "61"
										},
										{
											"begin": 3273,
											"end": 3329,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3273,
											"end": 3329,
											"name": "tag",
											"source": 10,
											"value": "71"
										},
										{
											"begin": 3273,
											"end": 3329,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3273,
											"end": 3329,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3273,
											"end": 3329,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 3273,
											"end": 3329,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 3273,
											"end": 3329,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3273,
											"end": 3329,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3273,
											"end": 3329,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 3273,
											"end": 3329,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3273,
											"end": 3329,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3273,
											"end": 3329,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 3273,
											"end": 3329,
											"name": "GAS",
											"source": 10
										},
										{
											"begin": 3273,
											"end": 3329,
											"name": "CALL",
											"source": 10
										},
										{
											"begin": 3273,
											"end": 3329,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 3273,
											"end": 3329,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3273,
											"end": 3329,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 3273,
											"end": 3329,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "73"
										},
										{
											"begin": 3273,
											"end": 3329,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3273,
											"end": 3329,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 3273,
											"end": 3329,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3273,
											"end": 3329,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3273,
											"end": 3329,
											"name": "RETURNDATACOPY",
											"source": 10
										},
										{
											"begin": 3273,
											"end": 3329,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 3273,
											"end": 3329,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3273,
											"end": 3329,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 3273,
											"end": 3329,
											"name": "tag",
											"source": 10,
											"value": "73"
										},
										{
											"begin": 3273,
											"end": 3329,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3273,
											"end": 3329,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3273,
											"end": 3329,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3273,
											"end": 3329,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3273,
											"end": 3329,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3273,
											"end": 3329,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 3273,
											"end": 3329,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 3273,
											"end": 3329,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 3273,
											"end": 3329,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 3273,
											"end": 3329,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 3273,
											"end": 3329,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 3273,
											"end": 3329,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3273,
											"end": 3329,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3273,
											"end": 3329,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 3273,
											"end": 3329,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3273,
											"end": 3329,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3273,
											"end": 3329,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3273,
											"end": 3329,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 3273,
											"end": 3329,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3273,
											"end": 3329,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3273,
											"end": 3329,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3273,
											"end": 3329,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3273,
											"end": 3329,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3273,
											"end": 3329,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "74"
										},
										{
											"begin": 3273,
											"end": 3329,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3273,
											"end": 3329,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3273,
											"end": 3329,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "65"
										},
										{
											"begin": 3273,
											"end": 3329,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3273,
											"end": 3329,
											"name": "tag",
											"source": 10,
											"value": "74"
										},
										{
											"begin": 3273,
											"end": 3329,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3273,
											"end": 3329,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3404,
											"end": 3414,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 3389,
											"end": 3439,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3389,
											"end": 3439,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 3389,
											"end": 3439,
											"name": "PUSH",
											"source": 10,
											"value": "FC30CDDEA38E2BF4D6EA7D3F9ED3B6AD7F176419F4963BD81318067A4AEE73FE"
										},
										{
											"begin": 3415,
											"end": 3426,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 3415,
											"end": 3438,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3427,
											"end": 3437,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 3415,
											"end": 3438,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3415,
											"end": 3438,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 3415,
											"end": 3438,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3415,
											"end": 3438,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 3415,
											"end": 3438,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3415,
											"end": 3438,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3415,
											"end": 3438,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3415,
											"end": 3438,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3415,
											"end": 3438,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3415,
											"end": 3438,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3415,
											"end": 3438,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3415,
											"end": 3438,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3415,
											"end": 3438,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3415,
											"end": 3438,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3415,
											"end": 3438,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 3415,
											"end": 3438,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 3389,
											"end": 3439,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 3389,
											"end": 3439,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 3389,
											"end": 3439,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "75"
										},
										{
											"begin": 3389,
											"end": 3439,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3389,
											"end": 3439,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3389,
											"end": 3439,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3389,
											"end": 3439,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3389,
											"end": 3439,
											"name": "tag",
											"source": 10,
											"value": "75"
										},
										{
											"begin": 3389,
											"end": 3439,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3389,
											"end": 3439,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 3389,
											"end": 3439,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 3389,
											"end": 3439,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3389,
											"end": 3439,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3389,
											"end": 3439,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 3389,
											"end": 3439,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3389,
											"end": 3439,
											"name": "LOG2",
											"source": 10
										},
										{
											"begin": 3474,
											"end": 3475,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3450,
											"end": 3461,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 3450,
											"end": 3473,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3462,
											"end": 3472,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 3450,
											"end": 3473,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3450,
											"end": 3473,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 3450,
											"end": 3473,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3450,
											"end": 3473,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 3450,
											"end": 3473,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3450,
											"end": 3473,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3450,
											"end": 3473,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3450,
											"end": 3473,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3450,
											"end": 3473,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3450,
											"end": 3473,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3450,
											"end": 3473,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3450,
											"end": 3473,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3450,
											"end": 3473,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3450,
											"end": 3473,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3450,
											"end": 3473,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 3450,
											"end": 3475,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3450,
											"end": 3475,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3450,
											"end": 3475,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 3450,
											"end": 3475,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3165,
											"end": 3483,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 338,
											"end": 366,
											"name": "tag",
											"source": 10,
											"value": "28"
										},
										{
											"begin": 338,
											"end": 366,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 338,
											"end": 366,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 338,
											"end": 366,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 338,
											"end": 366,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 338,
											"end": 366,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 338,
											"end": 366,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 338,
											"end": 366,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 338,
											"end": 366,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 338,
											"end": 366,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 338,
											"end": 366,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 338,
											"end": 366,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 338,
											"end": 366,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 338,
											"end": 366,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "tag",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 2334,
											"end": 2345,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 2334,
											"end": 2347,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "tag",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3219,
											"end": 3249,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 3246,
											"end": 3247,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3219,
											"end": 3237,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 3219,
											"end": 3249,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3219,
											"end": 3249,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 3219,
											"end": 3249,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3155,
											"end": 3256,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "tag",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2487,
											"end": 2494,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2506,
											"end": 2530,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2533,
											"end": 2553,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 2533,
											"end": 2551,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 2533,
											"end": 2553,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2533,
											"end": 2553,
											"name": "tag",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 2533,
											"end": 2553,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2506,
											"end": 2553,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2506,
											"end": 2553,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2570,
											"end": 2571,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2570,
											"end": 2578,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2570,
											"end": 2578,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2570,
											"end": 2578,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2570,
											"end": 2578,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2570,
											"end": 2578,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2570,
											"end": 2578,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2570,
											"end": 2578,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2570,
											"end": 2578,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 2570,
											"end": 2578,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2570,
											"end": 2578,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2570,
											"end": 2578,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2570,
											"end": 2578,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2563,
											"end": 2578,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2563,
											"end": 2578,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2563,
											"end": 2578,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1448,
											"end": 2183,
											"name": "tag",
											"source": 10,
											"value": "39"
										},
										{
											"begin": 1448,
											"end": 2183,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1508,
											"end": 1509,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1501,
											"end": 1507,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1501,
											"end": 1509,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 1493,
											"end": 1558,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "86"
										},
										{
											"begin": 1493,
											"end": 1558,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1493,
											"end": 1558,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1493,
											"end": 1558,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1493,
											"end": 1558,
											"name": "PUSH",
											"source": 10,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1493,
											"end": 1558,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1493,
											"end": 1558,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1493,
											"end": 1558,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 1493,
											"end": 1558,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1493,
											"end": 1558,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "87"
										},
										{
											"begin": 1493,
											"end": 1558,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1493,
											"end": 1558,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "88"
										},
										{
											"begin": 1493,
											"end": 1558,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1493,
											"end": 1558,
											"name": "tag",
											"source": 10,
											"value": "87"
										},
										{
											"begin": 1493,
											"end": 1558,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1493,
											"end": 1558,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1493,
											"end": 1558,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1493,
											"end": 1558,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1493,
											"end": 1558,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1493,
											"end": 1558,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 1493,
											"end": 1558,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1493,
											"end": 1558,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 1493,
											"end": 1558,
											"name": "tag",
											"source": 10,
											"value": "86"
										},
										{
											"begin": 1493,
											"end": 1558,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1668,
											"end": 1674,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1620,
											"end": 1630,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1620,
											"end": 1630,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1620,
											"end": 1630,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 1620,
											"end": 1630,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1620,
											"end": 1630,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 1620,
											"end": 1630,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 1620,
											"end": 1630,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1620,
											"end": 1630,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 1620,
											"end": 1630,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1620,
											"end": 1630,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1620,
											"end": 1640,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1620,
											"end": 1640,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1620,
											"end": 1640,
											"name": "PUSH",
											"source": 10,
											"value": "DD62ED3E"
										},
										{
											"begin": 1641,
											"end": 1651,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 1660,
											"end": 1664,
											"name": "ADDRESS",
											"source": 10
										},
										{
											"begin": 1620,
											"end": 1666,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1620,
											"end": 1666,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1620,
											"end": 1666,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1620,
											"end": 1666,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1620,
											"end": 1666,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1620,
											"end": 1666,
											"name": "PUSH",
											"source": 10,
											"value": "E0"
										},
										{
											"begin": 1620,
											"end": 1666,
											"name": "SHL",
											"source": 10
										},
										{
											"begin": 1620,
											"end": 1666,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1620,
											"end": 1666,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1620,
											"end": 1666,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 1620,
											"end": 1666,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1620,
											"end": 1666,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "89"
										},
										{
											"begin": 1620,
											"end": 1666,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 1620,
											"end": 1666,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1620,
											"end": 1666,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1620,
											"end": 1666,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "90"
										},
										{
											"begin": 1620,
											"end": 1666,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1620,
											"end": 1666,
											"name": "tag",
											"source": 10,
											"value": "89"
										},
										{
											"begin": 1620,
											"end": 1666,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1620,
											"end": 1666,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1620,
											"end": 1666,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1620,
											"end": 1666,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1620,
											"end": 1666,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1620,
											"end": 1666,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1620,
											"end": 1666,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 1620,
											"end": 1666,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1620,
											"end": 1666,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 1620,
											"end": 1666,
											"name": "GAS",
											"source": 10
										},
										{
											"begin": 1620,
											"end": 1666,
											"name": "STATICCALL",
											"source": 10
										},
										{
											"begin": 1620,
											"end": 1666,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1620,
											"end": 1666,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1620,
											"end": 1666,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1620,
											"end": 1666,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "92"
										},
										{
											"begin": 1620,
											"end": 1666,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1620,
											"end": 1666,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 1620,
											"end": 1666,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1620,
											"end": 1666,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1620,
											"end": 1666,
											"name": "RETURNDATACOPY",
											"source": 10
										},
										{
											"begin": 1620,
											"end": 1666,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 1620,
											"end": 1666,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1620,
											"end": 1666,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 1620,
											"end": 1666,
											"name": "tag",
											"source": 10,
											"value": "92"
										},
										{
											"begin": 1620,
											"end": 1666,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1620,
											"end": 1666,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1620,
											"end": 1666,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1620,
											"end": 1666,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1620,
											"end": 1666,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1620,
											"end": 1666,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1620,
											"end": 1666,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1620,
											"end": 1666,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 1620,
											"end": 1666,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 1620,
											"end": 1666,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 1620,
											"end": 1666,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 1620,
											"end": 1666,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1620,
											"end": 1666,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1620,
											"end": 1666,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1620,
											"end": 1666,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1620,
											"end": 1666,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1620,
											"end": 1666,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1620,
											"end": 1666,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1620,
											"end": 1666,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1620,
											"end": 1666,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1620,
											"end": 1666,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1620,
											"end": 1666,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1620,
											"end": 1666,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1620,
											"end": 1666,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "93"
										},
										{
											"begin": 1620,
											"end": 1666,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1620,
											"end": 1666,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1620,
											"end": 1666,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "94"
										},
										{
											"begin": 1620,
											"end": 1666,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1620,
											"end": 1666,
											"name": "tag",
											"source": 10,
											"value": "93"
										},
										{
											"begin": 1620,
											"end": 1666,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1620,
											"end": 1674,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 1620,
											"end": 1674,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1612,
											"end": 1717,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "95"
										},
										{
											"begin": 1612,
											"end": 1717,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1612,
											"end": 1717,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1612,
											"end": 1717,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1612,
											"end": 1717,
											"name": "PUSH",
											"source": 10,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1612,
											"end": 1717,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1612,
											"end": 1717,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1612,
											"end": 1717,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 1612,
											"end": 1717,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1612,
											"end": 1717,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "96"
										},
										{
											"begin": 1612,
											"end": 1717,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1612,
											"end": 1717,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "97"
										},
										{
											"begin": 1612,
											"end": 1717,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1612,
											"end": 1717,
											"name": "tag",
											"source": 10,
											"value": "96"
										},
										{
											"begin": 1612,
											"end": 1717,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1612,
											"end": 1717,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1612,
											"end": 1717,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1612,
											"end": 1717,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1612,
											"end": 1717,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1612,
											"end": 1717,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 1612,
											"end": 1717,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1612,
											"end": 1717,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 1612,
											"end": 1717,
											"name": "tag",
											"source": 10,
											"value": "95"
										},
										{
											"begin": 1612,
											"end": 1717,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1770,
											"end": 1780,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1770,
											"end": 1780,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1770,
											"end": 1780,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 1770,
											"end": 1780,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1770,
											"end": 1780,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 1770,
											"end": 1780,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 1770,
											"end": 1780,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1770,
											"end": 1780,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 1770,
											"end": 1780,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1770,
											"end": 1780,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1770,
											"end": 1793,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1770,
											"end": 1793,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1770,
											"end": 1793,
											"name": "PUSH",
											"source": 10,
											"value": "23B872DD"
										},
										{
											"begin": 1794,
											"end": 1804,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 1813,
											"end": 1817,
											"name": "ADDRESS",
											"source": 10
										},
										{
											"begin": 1819,
											"end": 1825,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 1770,
											"end": 1826,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1770,
											"end": 1826,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1770,
											"end": 1826,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 1770,
											"end": 1826,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1770,
											"end": 1826,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1770,
											"end": 1826,
											"name": "PUSH",
											"source": 10,
											"value": "E0"
										},
										{
											"begin": 1770,
											"end": 1826,
											"name": "SHL",
											"source": 10
										},
										{
											"begin": 1770,
											"end": 1826,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1770,
											"end": 1826,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1770,
											"end": 1826,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 1770,
											"end": 1826,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1770,
											"end": 1826,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "98"
										},
										{
											"begin": 1770,
											"end": 1826,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 1770,
											"end": 1826,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 1770,
											"end": 1826,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1770,
											"end": 1826,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1770,
											"end": 1826,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "99"
										},
										{
											"begin": 1770,
											"end": 1826,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1770,
											"end": 1826,
											"name": "tag",
											"source": 10,
											"value": "98"
										},
										{
											"begin": 1770,
											"end": 1826,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1770,
											"end": 1826,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1770,
											"end": 1826,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1770,
											"end": 1826,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1770,
											"end": 1826,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1770,
											"end": 1826,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1770,
											"end": 1826,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 1770,
											"end": 1826,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1770,
											"end": 1826,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1770,
											"end": 1826,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 1770,
											"end": 1826,
											"name": "GAS",
											"source": 10
										},
										{
											"begin": 1770,
											"end": 1826,
											"name": "CALL",
											"source": 10
										},
										{
											"begin": 1770,
											"end": 1826,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1770,
											"end": 1826,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1770,
											"end": 1826,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1770,
											"end": 1826,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "101"
										},
										{
											"begin": 1770,
											"end": 1826,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1770,
											"end": 1826,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 1770,
											"end": 1826,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1770,
											"end": 1826,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1770,
											"end": 1826,
											"name": "RETURNDATACOPY",
											"source": 10
										},
										{
											"begin": 1770,
											"end": 1826,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 1770,
											"end": 1826,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1770,
											"end": 1826,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 1770,
											"end": 1826,
											"name": "tag",
											"source": 10,
											"value": "101"
										},
										{
											"begin": 1770,
											"end": 1826,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1770,
											"end": 1826,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1770,
											"end": 1826,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1770,
											"end": 1826,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1770,
											"end": 1826,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1770,
											"end": 1826,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1770,
											"end": 1826,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1770,
											"end": 1826,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 1770,
											"end": 1826,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 1770,
											"end": 1826,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 1770,
											"end": 1826,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 1770,
											"end": 1826,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1770,
											"end": 1826,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1770,
											"end": 1826,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1770,
											"end": 1826,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1770,
											"end": 1826,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1770,
											"end": 1826,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1770,
											"end": 1826,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1770,
											"end": 1826,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1770,
											"end": 1826,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1770,
											"end": 1826,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1770,
											"end": 1826,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1770,
											"end": 1826,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1770,
											"end": 1826,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "102"
										},
										{
											"begin": 1770,
											"end": 1826,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1770,
											"end": 1826,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1770,
											"end": 1826,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "65"
										},
										{
											"begin": 1770,
											"end": 1826,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1770,
											"end": 1826,
											"name": "tag",
											"source": 10,
											"value": "102"
										},
										{
											"begin": 1770,
											"end": 1826,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1770,
											"end": 1826,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1932,
											"end": 1933,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1915,
											"end": 1930,
											"name": "PUSH",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 1915,
											"end": 1930,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 1915,
											"end": 1933,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 1912,
											"end": 1984,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "103"
										},
										{
											"begin": 1912,
											"end": 1984,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1949,
											"end": 1972,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "104"
										},
										{
											"begin": 1949,
											"end": 1970,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "45"
										},
										{
											"begin": 1949,
											"end": 1972,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1949,
											"end": 1972,
											"name": "tag",
											"source": 10,
											"value": "104"
										},
										{
											"begin": 1949,
											"end": 1972,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1912,
											"end": 1984,
											"name": "tag",
											"source": 10,
											"value": "103"
										},
										{
											"begin": 1912,
											"end": 1984,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2042,
											"end": 2048,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2019,
											"end": 2029,
											"name": "PUSH",
											"source": 10,
											"value": "3"
										},
										{
											"begin": 2019,
											"end": 2041,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2030,
											"end": 2040,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 2019,
											"end": 2041,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2019,
											"end": 2041,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2019,
											"end": 2041,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2019,
											"end": 2041,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2019,
											"end": 2041,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2019,
											"end": 2041,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2019,
											"end": 2041,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2019,
											"end": 2041,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2019,
											"end": 2041,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2019,
											"end": 2041,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2019,
											"end": 2041,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2019,
											"end": 2041,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2019,
											"end": 2041,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2019,
											"end": 2041,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2019,
											"end": 2041,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 2019,
											"end": 2041,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 2019,
											"end": 2048,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "105"
										},
										{
											"begin": 2019,
											"end": 2048,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2019,
											"end": 2048,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2019,
											"end": 2048,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "106"
										},
										{
											"begin": 2019,
											"end": 2048,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2019,
											"end": 2048,
											"name": "tag",
											"source": 10,
											"value": "105"
										},
										{
											"begin": 2019,
											"end": 2048,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1996,
											"end": 2006,
											"name": "PUSH",
											"source": 10,
											"value": "3"
										},
										{
											"begin": 1996,
											"end": 2018,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2007,
											"end": 2017,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 1996,
											"end": 2018,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1996,
											"end": 2018,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1996,
											"end": 2018,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1996,
											"end": 2018,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1996,
											"end": 2018,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1996,
											"end": 2018,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1996,
											"end": 2018,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1996,
											"end": 2018,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1996,
											"end": 2018,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1996,
											"end": 2018,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1996,
											"end": 2018,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1996,
											"end": 2018,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1996,
											"end": 2018,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1996,
											"end": 2018,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1996,
											"end": 2018,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 1996,
											"end": 2048,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1996,
											"end": 2048,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1996,
											"end": 2048,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 1996,
											"end": 2048,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2075,
											"end": 2090,
											"name": "TIMESTAMP",
											"source": 10
										},
										{
											"begin": 2059,
											"end": 2074,
											"name": "PUSH",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 2059,
											"end": 2090,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2059,
											"end": 2090,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2059,
											"end": 2090,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 2059,
											"end": 2090,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2157,
											"end": 2167,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 2150,
											"end": 2175,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2150,
											"end": 2175,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2150,
											"end": 2175,
											"name": "PUSH",
											"source": 10,
											"value": "9E71BC8EEA02A63969F509818F2DAFB9254532904319F9DBDA79B67BD34A5F3D"
										},
										{
											"begin": 2168,
											"end": 2174,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2150,
											"end": 2175,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2150,
											"end": 2175,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2150,
											"end": 2175,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "107"
										},
										{
											"begin": 2150,
											"end": 2175,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2150,
											"end": 2175,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2150,
											"end": 2175,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2150,
											"end": 2175,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2150,
											"end": 2175,
											"name": "tag",
											"source": 10,
											"value": "107"
										},
										{
											"begin": 2150,
											"end": 2175,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2150,
											"end": 2175,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2150,
											"end": 2175,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2150,
											"end": 2175,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2150,
											"end": 2175,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2150,
											"end": 2175,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 2150,
											"end": 2175,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2150,
											"end": 2175,
											"name": "LOG2",
											"source": 10
										},
										{
											"begin": 1448,
											"end": 2183,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1448,
											"end": 2183,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1109,
											"end": 1149,
											"name": "tag",
											"source": 10,
											"value": "42"
										},
										{
											"begin": 1109,
											"end": 1149,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1109,
											"end": 1149,
											"name": "PUSH",
											"source": 10,
											"value": "3"
										},
										{
											"begin": 1109,
											"end": 1149,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1109,
											"end": 1149,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1109,
											"end": 1149,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1109,
											"end": 1149,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1109,
											"end": 1149,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1109,
											"end": 1149,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1109,
											"end": 1149,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1109,
											"end": 1149,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 1109,
											"end": 1149,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1109,
											"end": 1149,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1109,
											"end": 1149,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1109,
											"end": 1149,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1109,
											"end": 1149,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1109,
											"end": 1149,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 1109,
											"end": 1149,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1109,
											"end": 1149,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2724,
											"end": 3118,
											"name": "tag",
											"source": 10,
											"value": "45"
										},
										{
											"begin": 2724,
											"end": 3118,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2774,
											"end": 2793,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2810,
											"end": 2825,
											"name": "PUSH",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 2810,
											"end": 2825,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 2794,
											"end": 2809,
											"name": "TIMESTAMP",
											"source": 10
										},
										{
											"begin": 2794,
											"end": 2825,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "109"
										},
										{
											"begin": 2794,
											"end": 2825,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2794,
											"end": 2825,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2794,
											"end": 2825,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "59"
										},
										{
											"begin": 2794,
											"end": 2825,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2794,
											"end": 2825,
											"name": "tag",
											"source": 10,
											"value": "109"
										},
										{
											"begin": 2794,
											"end": 2825,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2774,
											"end": 2825,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2774,
											"end": 2825,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2897,
											"end": 2923,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2951,
											"end": 2954,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 2948,
											"end": 2949,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 2925,
											"end": 2935,
											"name": "PUSH",
											"source": 10,
											"value": "3"
										},
										{
											"begin": 2925,
											"end": 2947,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2936,
											"end": 2946,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 2925,
											"end": 2947,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2925,
											"end": 2947,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2925,
											"end": 2947,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2925,
											"end": 2947,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2925,
											"end": 2947,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2925,
											"end": 2947,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2925,
											"end": 2947,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2925,
											"end": 2947,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2925,
											"end": 2947,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2925,
											"end": 2947,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2925,
											"end": 2947,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2925,
											"end": 2947,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2925,
											"end": 2947,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2925,
											"end": 2947,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2925,
											"end": 2947,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 2925,
											"end": 2947,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 2925,
											"end": 2949,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "110"
										},
										{
											"begin": 2925,
											"end": 2949,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2925,
											"end": 2949,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2925,
											"end": 2949,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "111"
										},
										{
											"begin": 2925,
											"end": 2949,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2925,
											"end": 2949,
											"name": "tag",
											"source": 10,
											"value": "110"
										},
										{
											"begin": 2925,
											"end": 2949,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2924,
											"end": 2954,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "112"
										},
										{
											"begin": 2924,
											"end": 2954,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2924,
											"end": 2954,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2924,
											"end": 2954,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "113"
										},
										{
											"begin": 2924,
											"end": 2954,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2924,
											"end": 2954,
											"name": "tag",
											"source": 10,
											"value": "112"
										},
										{
											"begin": 2924,
											"end": 2954,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2897,
											"end": 2954,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2897,
											"end": 2954,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2965,
											"end": 2992,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3015,
											"end": 3029,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2993,
											"end": 3014,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2993,
											"end": 3029,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "114"
										},
										{
											"begin": 2993,
											"end": 3029,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2993,
											"end": 3029,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2993,
											"end": 3029,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "111"
										},
										{
											"begin": 2993,
											"end": 3029,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2993,
											"end": 3029,
											"name": "tag",
											"source": 10,
											"value": "114"
										},
										{
											"begin": 2993,
											"end": 3029,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2965,
											"end": 3029,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2965,
											"end": 3029,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3088,
											"end": 3110,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3064,
											"end": 3075,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 3064,
											"end": 3087,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3076,
											"end": 3086,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 3064,
											"end": 3087,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3064,
											"end": 3087,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 3064,
											"end": 3087,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3064,
											"end": 3087,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 3064,
											"end": 3087,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3064,
											"end": 3087,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3064,
											"end": 3087,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3064,
											"end": 3087,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3064,
											"end": 3087,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3064,
											"end": 3087,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3064,
											"end": 3087,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3064,
											"end": 3087,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3064,
											"end": 3087,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3064,
											"end": 3087,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3064,
											"end": 3087,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 3064,
											"end": 3087,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 3064,
											"end": 3110,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "115"
										},
										{
											"begin": 3064,
											"end": 3110,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3064,
											"end": 3110,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3064,
											"end": 3110,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "106"
										},
										{
											"begin": 3064,
											"end": 3110,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3064,
											"end": 3110,
											"name": "tag",
											"source": 10,
											"value": "115"
										},
										{
											"begin": 3064,
											"end": 3110,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3040,
											"end": 3051,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 3040,
											"end": 3063,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3052,
											"end": 3062,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 3040,
											"end": 3063,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3040,
											"end": 3063,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 3040,
											"end": 3063,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3040,
											"end": 3063,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 3040,
											"end": 3063,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3040,
											"end": 3063,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3040,
											"end": 3063,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3040,
											"end": 3063,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3040,
											"end": 3063,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3040,
											"end": 3063,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3040,
											"end": 3063,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3040,
											"end": 3063,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3040,
											"end": 3063,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3040,
											"end": 3063,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3040,
											"end": 3063,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 3040,
											"end": 3110,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3040,
											"end": 3110,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3040,
											"end": 3110,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 3040,
											"end": 3110,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2763,
											"end": 3118,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2763,
											"end": 3118,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2763,
											"end": 3118,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2724,
											"end": 3118,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "tag",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 2334,
											"end": 2345,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 2334,
											"end": 2347,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "tag",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3509,
											"end": 3510,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3489,
											"end": 3511,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3489,
											"end": 3511,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3489,
											"end": 3497,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3489,
											"end": 3511,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3489,
											"end": 3511,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3489,
											"end": 3511,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3485,
											"end": 3576,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 3485,
											"end": 3576,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3562,
											"end": 3563,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 3534,
											"end": 3565,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3485,
											"end": 3576,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 3485,
											"end": 3576,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3585,
											"end": 3613,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 3604,
											"end": 3612,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3585,
											"end": 3603,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 3585,
											"end": 3613,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3585,
											"end": 3613,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 3585,
											"end": 3613,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 373,
											"end": 403,
											"name": "tag",
											"source": 10,
											"value": "50"
										},
										{
											"begin": 373,
											"end": 403,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 373,
											"end": 403,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 373,
											"end": 403,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 373,
											"end": 403,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 373,
											"end": 403,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 373,
											"end": 403,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 373,
											"end": 403,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 373,
											"end": 403,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 373,
											"end": 403,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 373,
											"end": 403,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 373,
											"end": 403,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 373,
											"end": 403,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 373,
											"end": 403,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 373,
											"end": 403,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2658,
											"end": 2820,
											"name": "tag",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 2658,
											"end": 2820,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2728,
											"end": 2740,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 2728,
											"end": 2738,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 2728,
											"end": 2740,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2728,
											"end": 2740,
											"name": "tag",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 2728,
											"end": 2740,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2717,
											"end": 2740,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2717,
											"end": 2740,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2717,
											"end": 2724,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 2717,
											"end": 2722,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 2717,
											"end": 2724,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2717,
											"end": 2724,
											"name": "tag",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 2717,
											"end": 2724,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2717,
											"end": 2740,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2717,
											"end": 2740,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2717,
											"end": 2740,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2713,
											"end": 2814,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 2713,
											"end": 2814,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2790,
											"end": 2802,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 2790,
											"end": 2800,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 2790,
											"end": 2802,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2790,
											"end": 2802,
											"name": "tag",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 2790,
											"end": 2802,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "PUSH",
											"source": 0,
											"value": "118CDAA700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 2763,
											"end": 2803,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "tag",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2713,
											"end": 2814,
											"name": "tag",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 2713,
											"end": 2814,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2658,
											"end": 2820,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3774,
											"end": 4022,
											"name": "tag",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 3774,
											"end": 4022,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3847,
											"end": 3871,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3874,
											"end": 3894,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 3874,
											"end": 3892,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 3874,
											"end": 3894,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3874,
											"end": 3894,
											"name": "tag",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 3874,
											"end": 3894,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3847,
											"end": 3894,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3847,
											"end": 3894,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3904,
											"end": 3920,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3923,
											"end": 3924,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3923,
											"end": 3931,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3923,
											"end": 3931,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3923,
											"end": 3931,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3923,
											"end": 3931,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3923,
											"end": 3931,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3923,
											"end": 3931,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3923,
											"end": 3931,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3923,
											"end": 3931,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3923,
											"end": 3931,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3923,
											"end": 3931,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 3923,
											"end": 3931,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3923,
											"end": 3931,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3904,
											"end": 3931,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3904,
											"end": 3931,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3952,
											"end": 3960,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3942,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3949,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3941,
											"end": 3949,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3949,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4006,
											"end": 4014,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3996,
											"end": 4004,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 3837,
											"end": 4022,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3837,
											"end": 4022,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3774,
											"end": 4022,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3774,
											"end": 4022,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1192,
											"end": 1351,
											"name": "tag",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 1192,
											"end": 1351,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1244,
											"end": 1268,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1313,
											"end": 1335,
											"name": "PUSH",
											"source": 0,
											"value": "9016D09D72D40FDAE2FD8CEAC6B6234C7706214FD39C1CD1E609A0528C199300"
										},
										{
											"begin": 1303,
											"end": 1335,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1303,
											"end": 1335,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1192,
											"end": 1351,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1192,
											"end": 1351,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 887,
											"end": 983,
											"name": "tag",
											"source": 2,
											"value": "124"
										},
										{
											"begin": 887,
											"end": 983,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 940,
											"end": 947,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 966,
											"end": 976,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 959,
											"end": 976,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 959,
											"end": 976,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 887,
											"end": 983,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 887,
											"end": 983,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 11,
											"value": "134"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 334,
											"end": 460,
											"name": "tag",
											"source": 11,
											"value": "136"
										},
										{
											"begin": 334,
											"end": 460,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 371,
											"end": 378,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 411,
											"end": 453,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 404,
											"end": 409,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 400,
											"end": 454,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 389,
											"end": 454,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 389,
											"end": 454,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 334,
											"end": 460,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 334,
											"end": 460,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 334,
											"end": 460,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 334,
											"end": 460,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 466,
											"end": 562,
											"name": "tag",
											"source": 11,
											"value": "137"
										},
										{
											"begin": 466,
											"end": 562,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 503,
											"end": 510,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "173"
										},
										{
											"begin": 550,
											"end": 555,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 532,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "136"
										},
										{
											"begin": 532,
											"end": 556,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 532,
											"end": 556,
											"name": "tag",
											"source": 11,
											"value": "173"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 521,
											"end": 556,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 521,
											"end": 556,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 466,
											"end": 562,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 466,
											"end": 562,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 466,
											"end": 562,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 466,
											"end": 562,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 568,
											"end": 690,
											"name": "tag",
											"source": 11,
											"value": "138"
										},
										{
											"begin": 568,
											"end": 690,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 641,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "175"
										},
										{
											"begin": 659,
											"end": 664,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 641,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "137"
										},
										{
											"begin": 641,
											"end": 665,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 641,
											"end": 665,
											"name": "tag",
											"source": 11,
											"value": "175"
										},
										{
											"begin": 641,
											"end": 665,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 634,
											"end": 639,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 631,
											"end": 666,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 621,
											"end": 684,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "176"
										},
										{
											"begin": 621,
											"end": 684,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 680,
											"end": 681,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 677,
											"end": 678,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 670,
											"end": 682,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 621,
											"end": 684,
											"name": "tag",
											"source": 11,
											"value": "176"
										},
										{
											"begin": 621,
											"end": 684,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 568,
											"end": 690,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 568,
											"end": 690,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 696,
											"end": 835,
											"name": "tag",
											"source": 11,
											"value": "139"
										},
										{
											"begin": 696,
											"end": 835,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 742,
											"end": 747,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 780,
											"end": 786,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 767,
											"end": 787,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 758,
											"end": 787,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 758,
											"end": 787,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 796,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "178"
										},
										{
											"begin": 823,
											"end": 828,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 796,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "138"
										},
										{
											"begin": 796,
											"end": 829,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 796,
											"end": 829,
											"name": "tag",
											"source": 11,
											"value": "178"
										},
										{
											"begin": 796,
											"end": 829,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 696,
											"end": 835,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 696,
											"end": 835,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 696,
											"end": 835,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 696,
											"end": 835,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 696,
											"end": 835,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "tag",
											"source": 11,
											"value": "17"
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 900,
											"end": 906,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 949,
											"end": 951,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 937,
											"end": 946,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 928,
											"end": 935,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 924,
											"end": 947,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 920,
											"end": 952,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "180"
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "181"
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "134"
										},
										{
											"begin": 955,
											"end": 1034,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "tag",
											"source": 11,
											"value": "181"
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "tag",
											"source": 11,
											"value": "180"
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1075,
											"end": 1076,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "182"
										},
										{
											"begin": 1145,
											"end": 1152,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 1136,
											"end": 1142,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1125,
											"end": 1134,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 1121,
											"end": 1143,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "139"
										},
										{
											"begin": 1100,
											"end": 1153,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "tag",
											"source": 11,
											"value": "182"
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1090,
											"end": 1153,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1090,
											"end": 1153,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1046,
											"end": 1163,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 841,
											"end": 1170,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1176,
											"end": 1253,
											"name": "tag",
											"source": 11,
											"value": "140"
										},
										{
											"begin": 1176,
											"end": 1253,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1213,
											"end": 1220,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1242,
											"end": 1247,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1231,
											"end": 1247,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1231,
											"end": 1247,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1176,
											"end": 1253,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1176,
											"end": 1253,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1176,
											"end": 1253,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1176,
											"end": 1253,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1259,
											"end": 1377,
											"name": "tag",
											"source": 11,
											"value": "141"
										},
										{
											"begin": 1259,
											"end": 1377,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1346,
											"end": 1370,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "185"
										},
										{
											"begin": 1364,
											"end": 1369,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1346,
											"end": 1370,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "140"
										},
										{
											"begin": 1346,
											"end": 1370,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1346,
											"end": 1370,
											"name": "tag",
											"source": 11,
											"value": "185"
										},
										{
											"begin": 1346,
											"end": 1370,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1341,
											"end": 1344,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1334,
											"end": 1371,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1259,
											"end": 1377,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1259,
											"end": 1377,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1259,
											"end": 1377,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1383,
											"end": 1605,
											"name": "tag",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1383,
											"end": 1605,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1476,
											"end": 1480,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1514,
											"end": 1516,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1503,
											"end": 1512,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1499,
											"end": 1517,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1491,
											"end": 1517,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1491,
											"end": 1517,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1527,
											"end": 1598,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "187"
										},
										{
											"begin": 1595,
											"end": 1596,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1584,
											"end": 1593,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 1580,
											"end": 1597,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1571,
											"end": 1577,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 1527,
											"end": 1598,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "141"
										},
										{
											"begin": 1527,
											"end": 1598,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1527,
											"end": 1598,
											"name": "tag",
											"source": 11,
											"value": "187"
										},
										{
											"begin": 1527,
											"end": 1598,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1383,
											"end": 1605,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 1383,
											"end": 1605,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1383,
											"end": 1605,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1383,
											"end": 1605,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1383,
											"end": 1605,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1611,
											"end": 1733,
											"name": "tag",
											"source": 11,
											"value": "142"
										},
										{
											"begin": 1611,
											"end": 1733,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1684,
											"end": 1708,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "189"
										},
										{
											"begin": 1702,
											"end": 1707,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1684,
											"end": 1708,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "140"
										},
										{
											"begin": 1684,
											"end": 1708,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1684,
											"end": 1708,
											"name": "tag",
											"source": 11,
											"value": "189"
										},
										{
											"begin": 1684,
											"end": 1708,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1677,
											"end": 1682,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1674,
											"end": 1709,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 1664,
											"end": 1727,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "190"
										},
										{
											"begin": 1664,
											"end": 1727,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1723,
											"end": 1724,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1720,
											"end": 1721,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1713,
											"end": 1725,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 1664,
											"end": 1727,
											"name": "tag",
											"source": 11,
											"value": "190"
										},
										{
											"begin": 1664,
											"end": 1727,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1611,
											"end": 1733,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1611,
											"end": 1733,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1739,
											"end": 1878,
											"name": "tag",
											"source": 11,
											"value": "143"
										},
										{
											"begin": 1739,
											"end": 1878,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1785,
											"end": 1790,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1823,
											"end": 1829,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1810,
											"end": 1830,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 1801,
											"end": 1830,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1801,
											"end": 1830,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1839,
											"end": 1872,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "192"
										},
										{
											"begin": 1866,
											"end": 1871,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1839,
											"end": 1872,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "142"
										},
										{
											"begin": 1839,
											"end": 1872,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1839,
											"end": 1872,
											"name": "tag",
											"source": 11,
											"value": "192"
										},
										{
											"begin": 1839,
											"end": 1872,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1739,
											"end": 1878,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 1739,
											"end": 1878,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1739,
											"end": 1878,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1739,
											"end": 1878,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1739,
											"end": 1878,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1884,
											"end": 2213,
											"name": "tag",
											"source": 11,
											"value": "23"
										},
										{
											"begin": 1884,
											"end": 2213,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1943,
											"end": 1949,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1992,
											"end": 1994,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1980,
											"end": 1989,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1971,
											"end": 1978,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 1967,
											"end": 1990,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 1963,
											"end": 1995,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 1960,
											"end": 2079,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 1960,
											"end": 2079,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "194"
										},
										{
											"begin": 1960,
											"end": 2079,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1998,
											"end": 2077,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "195"
										},
										{
											"begin": 1998,
											"end": 2077,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "134"
										},
										{
											"begin": 1998,
											"end": 2077,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1998,
											"end": 2077,
											"name": "tag",
											"source": 11,
											"value": "195"
										},
										{
											"begin": 1998,
											"end": 2077,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1960,
											"end": 2079,
											"name": "tag",
											"source": 11,
											"value": "194"
										},
										{
											"begin": 1960,
											"end": 2079,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2118,
											"end": 2119,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2143,
											"end": 2196,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "196"
										},
										{
											"begin": 2188,
											"end": 2195,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 2179,
											"end": 2185,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2168,
											"end": 2177,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 2164,
											"end": 2186,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2143,
											"end": 2196,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "143"
										},
										{
											"begin": 2143,
											"end": 2196,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2143,
											"end": 2196,
											"name": "tag",
											"source": 11,
											"value": "196"
										},
										{
											"begin": 2143,
											"end": 2196,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2133,
											"end": 2196,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2133,
											"end": 2196,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2089,
											"end": 2206,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1884,
											"end": 2213,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 1884,
											"end": 2213,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1884,
											"end": 2213,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1884,
											"end": 2213,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1884,
											"end": 2213,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2219,
											"end": 2279,
											"name": "tag",
											"source": 11,
											"value": "144"
										},
										{
											"begin": 2219,
											"end": 2279,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2247,
											"end": 2250,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2268,
											"end": 2273,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2261,
											"end": 2273,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2261,
											"end": 2273,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2219,
											"end": 2279,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2219,
											"end": 2279,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2219,
											"end": 2279,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2219,
											"end": 2279,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2285,
											"end": 2427,
											"name": "tag",
											"source": 11,
											"value": "145"
										},
										{
											"begin": 2285,
											"end": 2427,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2335,
											"end": 2344,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2368,
											"end": 2421,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "199"
										},
										{
											"begin": 2386,
											"end": 2420,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "200"
										},
										{
											"begin": 2395,
											"end": 2419,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "201"
										},
										{
											"begin": 2413,
											"end": 2418,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 2395,
											"end": 2419,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "136"
										},
										{
											"begin": 2395,
											"end": 2419,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2395,
											"end": 2419,
											"name": "tag",
											"source": 11,
											"value": "201"
										},
										{
											"begin": 2395,
											"end": 2419,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2386,
											"end": 2420,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "144"
										},
										{
											"begin": 2386,
											"end": 2420,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2386,
											"end": 2420,
											"name": "tag",
											"source": 11,
											"value": "200"
										},
										{
											"begin": 2386,
											"end": 2420,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2368,
											"end": 2421,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "136"
										},
										{
											"begin": 2368,
											"end": 2421,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2368,
											"end": 2421,
											"name": "tag",
											"source": 11,
											"value": "199"
										},
										{
											"begin": 2368,
											"end": 2421,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2355,
											"end": 2421,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2355,
											"end": 2421,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2285,
											"end": 2427,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2285,
											"end": 2427,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2285,
											"end": 2427,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2285,
											"end": 2427,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2433,
											"end": 2559,
											"name": "tag",
											"source": 11,
											"value": "146"
										},
										{
											"begin": 2433,
											"end": 2559,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2483,
											"end": 2492,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2516,
											"end": 2553,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "203"
										},
										{
											"begin": 2547,
											"end": 2552,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2516,
											"end": 2553,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "145"
										},
										{
											"begin": 2516,
											"end": 2553,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2516,
											"end": 2553,
											"name": "tag",
											"source": 11,
											"value": "203"
										},
										{
											"begin": 2516,
											"end": 2553,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2503,
											"end": 2553,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2503,
											"end": 2553,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2433,
											"end": 2559,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2433,
											"end": 2559,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2433,
											"end": 2559,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2433,
											"end": 2559,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2565,
											"end": 2710,
											"name": "tag",
											"source": 11,
											"value": "147"
										},
										{
											"begin": 2565,
											"end": 2710,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2634,
											"end": 2643,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2667,
											"end": 2704,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "205"
										},
										{
											"begin": 2698,
											"end": 2703,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2667,
											"end": 2704,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "146"
										},
										{
											"begin": 2667,
											"end": 2704,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2667,
											"end": 2704,
											"name": "tag",
											"source": 11,
											"value": "205"
										},
										{
											"begin": 2667,
											"end": 2704,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2654,
											"end": 2704,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2654,
											"end": 2704,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2565,
											"end": 2710,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2565,
											"end": 2710,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2565,
											"end": 2710,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2565,
											"end": 2710,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2716,
											"end": 2885,
											"name": "tag",
											"source": 11,
											"value": "148"
										},
										{
											"begin": 2716,
											"end": 2885,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2822,
											"end": 2878,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "207"
										},
										{
											"begin": 2872,
											"end": 2877,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2822,
											"end": 2878,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "147"
										},
										{
											"begin": 2822,
											"end": 2878,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2822,
											"end": 2878,
											"name": "tag",
											"source": 11,
											"value": "207"
										},
										{
											"begin": 2822,
											"end": 2878,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2817,
											"end": 2820,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2810,
											"end": 2879,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2716,
											"end": 2885,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2716,
											"end": 2885,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2716,
											"end": 2885,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2891,
											"end": 3151,
											"name": "tag",
											"source": 11,
											"value": "30"
										},
										{
											"begin": 2891,
											"end": 3151,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3003,
											"end": 3007,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3041,
											"end": 3043,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 3030,
											"end": 3039,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3026,
											"end": 3044,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3018,
											"end": 3044,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3018,
											"end": 3044,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3054,
											"end": 3144,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "209"
										},
										{
											"begin": 3141,
											"end": 3142,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3130,
											"end": 3139,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 3126,
											"end": 3143,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3117,
											"end": 3123,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 3054,
											"end": 3144,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "148"
										},
										{
											"begin": 3054,
											"end": 3144,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3054,
											"end": 3144,
											"name": "tag",
											"source": 11,
											"value": "209"
										},
										{
											"begin": 3054,
											"end": 3144,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2891,
											"end": 3151,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 2891,
											"end": 3151,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2891,
											"end": 3151,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2891,
											"end": 3151,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2891,
											"end": 3151,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3157,
											"end": 3275,
											"name": "tag",
											"source": 11,
											"value": "149"
										},
										{
											"begin": 3157,
											"end": 3275,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3244,
											"end": 3268,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "211"
										},
										{
											"begin": 3262,
											"end": 3267,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3244,
											"end": 3268,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "137"
										},
										{
											"begin": 3244,
											"end": 3268,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3244,
											"end": 3268,
											"name": "tag",
											"source": 11,
											"value": "211"
										},
										{
											"begin": 3244,
											"end": 3268,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3239,
											"end": 3242,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3232,
											"end": 3269,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3157,
											"end": 3275,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3157,
											"end": 3275,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3157,
											"end": 3275,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3281,
											"end": 3503,
											"name": "tag",
											"source": 11,
											"value": "36"
										},
										{
											"begin": 3281,
											"end": 3503,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3374,
											"end": 3378,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3412,
											"end": 3414,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 3401,
											"end": 3410,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3397,
											"end": 3415,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3389,
											"end": 3415,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3389,
											"end": 3415,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3425,
											"end": 3496,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "213"
										},
										{
											"begin": 3493,
											"end": 3494,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3482,
											"end": 3491,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 3478,
											"end": 3495,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3469,
											"end": 3475,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 3425,
											"end": 3496,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "149"
										},
										{
											"begin": 3425,
											"end": 3496,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3425,
											"end": 3496,
											"name": "tag",
											"source": 11,
											"value": "213"
										},
										{
											"begin": 3425,
											"end": 3496,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3281,
											"end": 3503,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 3281,
											"end": 3503,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3281,
											"end": 3503,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3281,
											"end": 3503,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3281,
											"end": 3503,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3509,
											"end": 3655,
											"name": "tag",
											"source": 11,
											"value": "150"
										},
										{
											"begin": 3509,
											"end": 3655,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3579,
											"end": 3588,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3612,
											"end": 3649,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "215"
										},
										{
											"begin": 3643,
											"end": 3648,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3612,
											"end": 3649,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "146"
										},
										{
											"begin": 3612,
											"end": 3649,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3612,
											"end": 3649,
											"name": "tag",
											"source": 11,
											"value": "215"
										},
										{
											"begin": 3612,
											"end": 3649,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3599,
											"end": 3649,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3599,
											"end": 3649,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3509,
											"end": 3655,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3509,
											"end": 3655,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3509,
											"end": 3655,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3509,
											"end": 3655,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3661,
											"end": 3832,
											"name": "tag",
											"source": 11,
											"value": "151"
										},
										{
											"begin": 3661,
											"end": 3832,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3768,
											"end": 3825,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "217"
										},
										{
											"begin": 3819,
											"end": 3824,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3768,
											"end": 3825,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "150"
										},
										{
											"begin": 3768,
											"end": 3825,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3768,
											"end": 3825,
											"name": "tag",
											"source": 11,
											"value": "217"
										},
										{
											"begin": 3768,
											"end": 3825,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3763,
											"end": 3766,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3756,
											"end": 3826,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3661,
											"end": 3832,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3661,
											"end": 3832,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3661,
											"end": 3832,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3838,
											"end": 4100,
											"name": "tag",
											"source": 11,
											"value": "52"
										},
										{
											"begin": 3838,
											"end": 4100,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3951,
											"end": 3955,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3989,
											"end": 3991,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 3978,
											"end": 3987,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3974,
											"end": 3992,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3966,
											"end": 3992,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3966,
											"end": 3992,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4002,
											"end": 4093,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "219"
										},
										{
											"begin": 4090,
											"end": 4091,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4079,
											"end": 4088,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 4075,
											"end": 4092,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4066,
											"end": 4072,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 4002,
											"end": 4093,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "151"
										},
										{
											"begin": 4002,
											"end": 4093,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4002,
											"end": 4093,
											"name": "tag",
											"source": 11,
											"value": "219"
										},
										{
											"begin": 4002,
											"end": 4093,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3838,
											"end": 4100,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 3838,
											"end": 4100,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3838,
											"end": 4100,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3838,
											"end": 4100,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3838,
											"end": 4100,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4106,
											"end": 4275,
											"name": "tag",
											"source": 11,
											"value": "152"
										},
										{
											"begin": 4106,
											"end": 4275,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4190,
											"end": 4201,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4224,
											"end": 4230,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4219,
											"end": 4222,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4212,
											"end": 4231,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 4264,
											"end": 4268,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 4259,
											"end": 4262,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4255,
											"end": 4269,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4240,
											"end": 4269,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4240,
											"end": 4269,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4106,
											"end": 4275,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 4106,
											"end": 4275,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4106,
											"end": 4275,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4106,
											"end": 4275,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4106,
											"end": 4275,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4281,
											"end": 4458,
											"name": "tag",
											"source": 11,
											"value": "153"
										},
										{
											"begin": 4281,
											"end": 4458,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4421,
											"end": 4450,
											"name": "PUSH",
											"source": 11,
											"value": "496E73756666696369656E74207374616B65642062616C616E63650000000000"
										},
										{
											"begin": 4417,
											"end": 4418,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4409,
											"end": 4415,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4405,
											"end": 4419,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4398,
											"end": 4451,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 4281,
											"end": 4458,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4281,
											"end": 4458,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4464,
											"end": 4830,
											"name": "tag",
											"source": 11,
											"value": "154"
										},
										{
											"begin": 4464,
											"end": 4830,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4606,
											"end": 4609,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4627,
											"end": 4694,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "223"
										},
										{
											"begin": 4691,
											"end": 4693,
											"name": "PUSH",
											"source": 11,
											"value": "1B"
										},
										{
											"begin": 4686,
											"end": 4689,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 4627,
											"end": 4694,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "152"
										},
										{
											"begin": 4627,
											"end": 4694,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4627,
											"end": 4694,
											"name": "tag",
											"source": 11,
											"value": "223"
										},
										{
											"begin": 4627,
											"end": 4694,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4620,
											"end": 4694,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4620,
											"end": 4694,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4703,
											"end": 4796,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "224"
										},
										{
											"begin": 4792,
											"end": 4795,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4703,
											"end": 4796,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "153"
										},
										{
											"begin": 4703,
											"end": 4796,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4703,
											"end": 4796,
											"name": "tag",
											"source": 11,
											"value": "224"
										},
										{
											"begin": 4703,
											"end": 4796,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4821,
											"end": 4823,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 4816,
											"end": 4819,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4812,
											"end": 4824,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4805,
											"end": 4824,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4805,
											"end": 4824,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4464,
											"end": 4830,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4464,
											"end": 4830,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4464,
											"end": 4830,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4464,
											"end": 4830,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4836,
											"end": 5255,
											"name": "tag",
											"source": 11,
											"value": "56"
										},
										{
											"begin": 4836,
											"end": 5255,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5002,
											"end": 5006,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5040,
											"end": 5042,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 5029,
											"end": 5038,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5025,
											"end": 5043,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5017,
											"end": 5043,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5017,
											"end": 5043,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5089,
											"end": 5098,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5083,
											"end": 5087,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5079,
											"end": 5099,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 5075,
											"end": 5076,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5064,
											"end": 5073,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 5060,
											"end": 5077,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5053,
											"end": 5100,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 5117,
											"end": 5248,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "226"
										},
										{
											"begin": 5243,
											"end": 5247,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5117,
											"end": 5248,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "154"
										},
										{
											"begin": 5117,
											"end": 5248,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5117,
											"end": 5248,
											"name": "tag",
											"source": 11,
											"value": "226"
										},
										{
											"begin": 5117,
											"end": 5248,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5109,
											"end": 5248,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5109,
											"end": 5248,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4836,
											"end": 5255,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4836,
											"end": 5255,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4836,
											"end": 5255,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4836,
											"end": 5255,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5261,
											"end": 5441,
											"name": "tag",
											"source": 11,
											"value": "155"
										},
										{
											"begin": 5261,
											"end": 5441,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5309,
											"end": 5386,
											"name": "PUSH",
											"source": 11,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5306,
											"end": 5307,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5299,
											"end": 5387,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 5406,
											"end": 5410,
											"name": "PUSH",
											"source": 11,
											"value": "11"
										},
										{
											"begin": 5403,
											"end": 5404,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 5396,
											"end": 5411,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 5430,
											"end": 5434,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 5427,
											"end": 5428,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5420,
											"end": 5435,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 5447,
											"end": 5641,
											"name": "tag",
											"source": 11,
											"value": "59"
										},
										{
											"begin": 5447,
											"end": 5641,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5487,
											"end": 5491,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5507,
											"end": 5527,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "229"
										},
										{
											"begin": 5525,
											"end": 5526,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5507,
											"end": 5527,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "140"
										},
										{
											"begin": 5507,
											"end": 5527,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5507,
											"end": 5527,
											"name": "tag",
											"source": 11,
											"value": "229"
										},
										{
											"begin": 5507,
											"end": 5527,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5502,
											"end": 5527,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5502,
											"end": 5527,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5541,
											"end": 5561,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "230"
										},
										{
											"begin": 5559,
											"end": 5560,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 5541,
											"end": 5561,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "140"
										},
										{
											"begin": 5541,
											"end": 5561,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5541,
											"end": 5561,
											"name": "tag",
											"source": 11,
											"value": "230"
										},
										{
											"begin": 5541,
											"end": 5561,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5536,
											"end": 5561,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 5536,
											"end": 5561,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5585,
											"end": 5586,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5582,
											"end": 5583,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5578,
											"end": 5587,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 5570,
											"end": 5587,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5570,
											"end": 5587,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5609,
											"end": 5610,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5603,
											"end": 5607,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5600,
											"end": 5611,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 5597,
											"end": 5634,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 5597,
											"end": 5634,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "231"
										},
										{
											"begin": 5597,
											"end": 5634,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 5614,
											"end": 5632,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "232"
										},
										{
											"begin": 5614,
											"end": 5632,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "155"
										},
										{
											"begin": 5614,
											"end": 5632,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5614,
											"end": 5632,
											"name": "tag",
											"source": 11,
											"value": "232"
										},
										{
											"begin": 5614,
											"end": 5632,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5597,
											"end": 5634,
											"name": "tag",
											"source": 11,
											"value": "231"
										},
										{
											"begin": 5597,
											"end": 5634,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5447,
											"end": 5641,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 5447,
											"end": 5641,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5447,
											"end": 5641,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5447,
											"end": 5641,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5447,
											"end": 5641,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5647,
											"end": 5979,
											"name": "tag",
											"source": 11,
											"value": "61"
										},
										{
											"begin": 5647,
											"end": 5979,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5768,
											"end": 5772,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5806,
											"end": 5808,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 5795,
											"end": 5804,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5791,
											"end": 5809,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5783,
											"end": 5809,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5783,
											"end": 5809,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5819,
											"end": 5890,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "234"
										},
										{
											"begin": 5887,
											"end": 5888,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5876,
											"end": 5885,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 5872,
											"end": 5889,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5863,
											"end": 5869,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 5819,
											"end": 5890,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "149"
										},
										{
											"begin": 5819,
											"end": 5890,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5819,
											"end": 5890,
											"name": "tag",
											"source": 11,
											"value": "234"
										},
										{
											"begin": 5819,
											"end": 5890,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5900,
											"end": 5972,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "235"
										},
										{
											"begin": 5968,
											"end": 5970,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 5957,
											"end": 5966,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 5953,
											"end": 5971,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5944,
											"end": 5950,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 5900,
											"end": 5972,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "141"
										},
										{
											"begin": 5900,
											"end": 5972,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5900,
											"end": 5972,
											"name": "tag",
											"source": 11,
											"value": "235"
										},
										{
											"begin": 5900,
											"end": 5972,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5647,
											"end": 5979,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 5647,
											"end": 5979,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 5647,
											"end": 5979,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5647,
											"end": 5979,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5647,
											"end": 5979,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5647,
											"end": 5979,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5985,
											"end": 6075,
											"name": "tag",
											"source": 11,
											"value": "156"
										},
										{
											"begin": 5985,
											"end": 6075,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6019,
											"end": 6026,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6062,
											"end": 6067,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6055,
											"end": 6068,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 6048,
											"end": 6069,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 6037,
											"end": 6069,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6037,
											"end": 6069,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5985,
											"end": 6075,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5985,
											"end": 6075,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5985,
											"end": 6075,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5985,
											"end": 6075,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6081,
											"end": 6197,
											"name": "tag",
											"source": 11,
											"value": "157"
										},
										{
											"begin": 6081,
											"end": 6197,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6151,
											"end": 6172,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "238"
										},
										{
											"begin": 6166,
											"end": 6171,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6151,
											"end": 6172,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "156"
										},
										{
											"begin": 6151,
											"end": 6172,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6151,
											"end": 6172,
											"name": "tag",
											"source": 11,
											"value": "238"
										},
										{
											"begin": 6151,
											"end": 6172,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6144,
											"end": 6149,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6141,
											"end": 6173,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 6131,
											"end": 6191,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "239"
										},
										{
											"begin": 6131,
											"end": 6191,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 6187,
											"end": 6188,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6184,
											"end": 6185,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 6177,
											"end": 6189,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 6131,
											"end": 6191,
											"name": "tag",
											"source": 11,
											"value": "239"
										},
										{
											"begin": 6131,
											"end": 6191,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6081,
											"end": 6197,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6081,
											"end": 6197,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6203,
											"end": 6340,
											"name": "tag",
											"source": 11,
											"value": "158"
										},
										{
											"begin": 6203,
											"end": 6340,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6257,
											"end": 6262,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6288,
											"end": 6294,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6282,
											"end": 6295,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 6273,
											"end": 6295,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6273,
											"end": 6295,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6304,
											"end": 6334,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "241"
										},
										{
											"begin": 6328,
											"end": 6333,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6304,
											"end": 6334,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "157"
										},
										{
											"begin": 6304,
											"end": 6334,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6304,
											"end": 6334,
											"name": "tag",
											"source": 11,
											"value": "241"
										},
										{
											"begin": 6304,
											"end": 6334,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6203,
											"end": 6340,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 6203,
											"end": 6340,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 6203,
											"end": 6340,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6203,
											"end": 6340,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6203,
											"end": 6340,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6346,
											"end": 6691,
											"name": "tag",
											"source": 11,
											"value": "65"
										},
										{
											"begin": 6346,
											"end": 6691,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6413,
											"end": 6419,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6462,
											"end": 6464,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 6450,
											"end": 6459,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 6441,
											"end": 6448,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 6437,
											"end": 6460,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 6433,
											"end": 6465,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 6430,
											"end": 6549,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 6430,
											"end": 6549,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "243"
										},
										{
											"begin": 6430,
											"end": 6549,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 6468,
											"end": 6547,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "244"
										},
										{
											"begin": 6468,
											"end": 6547,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "134"
										},
										{
											"begin": 6468,
											"end": 6547,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6468,
											"end": 6547,
											"name": "tag",
											"source": 11,
											"value": "244"
										},
										{
											"begin": 6468,
											"end": 6547,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6430,
											"end": 6549,
											"name": "tag",
											"source": 11,
											"value": "243"
										},
										{
											"begin": 6430,
											"end": 6549,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6588,
											"end": 6589,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6613,
											"end": 6674,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "245"
										},
										{
											"begin": 6666,
											"end": 6673,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 6657,
											"end": 6663,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 6646,
											"end": 6655,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 6642,
											"end": 6664,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6613,
											"end": 6674,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "158"
										},
										{
											"begin": 6613,
											"end": 6674,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6613,
											"end": 6674,
											"name": "tag",
											"source": 11,
											"value": "245"
										},
										{
											"begin": 6613,
											"end": 6674,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6603,
											"end": 6674,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 6603,
											"end": 6674,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6559,
											"end": 6684,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6346,
											"end": 6691,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 6346,
											"end": 6691,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 6346,
											"end": 6691,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6346,
											"end": 6691,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6346,
											"end": 6691,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6697,
											"end": 6866,
											"name": "tag",
											"source": 11,
											"value": "159"
										},
										{
											"begin": 6697,
											"end": 6866,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6837,
											"end": 6858,
											"name": "PUSH",
											"source": 11,
											"value": "4E6F207265776172647320746F20636C61696D00000000000000000000000000"
										},
										{
											"begin": 6833,
											"end": 6834,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6825,
											"end": 6831,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 6821,
											"end": 6835,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6814,
											"end": 6859,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 6697,
											"end": 6866,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6697,
											"end": 6866,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6872,
											"end": 7238,
											"name": "tag",
											"source": 11,
											"value": "160"
										},
										{
											"begin": 6872,
											"end": 7238,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7014,
											"end": 7017,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 7035,
											"end": 7102,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "248"
										},
										{
											"begin": 7099,
											"end": 7101,
											"name": "PUSH",
											"source": 11,
											"value": "13"
										},
										{
											"begin": 7094,
											"end": 7097,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 7035,
											"end": 7102,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "152"
										},
										{
											"begin": 7035,
											"end": 7102,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7035,
											"end": 7102,
											"name": "tag",
											"source": 11,
											"value": "248"
										},
										{
											"begin": 7035,
											"end": 7102,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7028,
											"end": 7102,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 7028,
											"end": 7102,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7111,
											"end": 7204,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "249"
										},
										{
											"begin": 7200,
											"end": 7203,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 7111,
											"end": 7204,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "159"
										},
										{
											"begin": 7111,
											"end": 7204,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7111,
											"end": 7204,
											"name": "tag",
											"source": 11,
											"value": "249"
										},
										{
											"begin": 7111,
											"end": 7204,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7229,
											"end": 7231,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 7224,
											"end": 7227,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 7220,
											"end": 7232,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 7213,
											"end": 7232,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7213,
											"end": 7232,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6872,
											"end": 7238,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 6872,
											"end": 7238,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6872,
											"end": 7238,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6872,
											"end": 7238,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7244,
											"end": 7663,
											"name": "tag",
											"source": 11,
											"value": "70"
										},
										{
											"begin": 7244,
											"end": 7663,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7410,
											"end": 7414,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 7448,
											"end": 7450,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 7437,
											"end": 7446,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 7433,
											"end": 7451,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 7425,
											"end": 7451,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7425,
											"end": 7451,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7497,
											"end": 7506,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 7491,
											"end": 7495,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 7487,
											"end": 7507,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 7483,
											"end": 7484,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 7472,
											"end": 7481,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 7468,
											"end": 7485,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 7461,
											"end": 7508,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 7525,
											"end": 7656,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "251"
										},
										{
											"begin": 7651,
											"end": 7655,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 7525,
											"end": 7656,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "160"
										},
										{
											"begin": 7525,
											"end": 7656,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7525,
											"end": 7656,
											"name": "tag",
											"source": 11,
											"value": "251"
										},
										{
											"begin": 7525,
											"end": 7656,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7517,
											"end": 7656,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7517,
											"end": 7656,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7244,
											"end": 7663,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 7244,
											"end": 7663,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7244,
											"end": 7663,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7244,
											"end": 7663,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7669,
											"end": 7901,
											"name": "tag",
											"source": 11,
											"value": "161"
										},
										{
											"begin": 7669,
											"end": 7901,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7809,
											"end": 7843,
											"name": "PUSH",
											"source": 11,
											"value": "54686520616D6F756E742073686F756C6420626520616C776179732067726561"
										},
										{
											"begin": 7805,
											"end": 7806,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 7797,
											"end": 7803,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 7793,
											"end": 7807,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 7786,
											"end": 7844,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 7878,
											"end": 7893,
											"name": "PUSH",
											"source": 11,
											"value": "746572207468616E207A65726F00000000000000000000000000000000000000"
										},
										{
											"begin": 7873,
											"end": 7875,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 7865,
											"end": 7871,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 7861,
											"end": 7876,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 7854,
											"end": 7894,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 7669,
											"end": 7901,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7669,
											"end": 7901,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7907,
											"end": 8273,
											"name": "tag",
											"source": 11,
											"value": "162"
										},
										{
											"begin": 7907,
											"end": 8273,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8049,
											"end": 8052,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 8070,
											"end": 8137,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "254"
										},
										{
											"begin": 8134,
											"end": 8136,
											"name": "PUSH",
											"source": 11,
											"value": "2D"
										},
										{
											"begin": 8129,
											"end": 8132,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 8070,
											"end": 8137,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "152"
										},
										{
											"begin": 8070,
											"end": 8137,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 8070,
											"end": 8137,
											"name": "tag",
											"source": 11,
											"value": "254"
										},
										{
											"begin": 8070,
											"end": 8137,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8063,
											"end": 8137,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 8063,
											"end": 8137,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8146,
											"end": 8239,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "255"
										},
										{
											"begin": 8235,
											"end": 8238,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 8146,
											"end": 8239,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "161"
										},
										{
											"begin": 8146,
											"end": 8239,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 8146,
											"end": 8239,
											"name": "tag",
											"source": 11,
											"value": "255"
										},
										{
											"begin": 8146,
											"end": 8239,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8264,
											"end": 8266,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 8259,
											"end": 8262,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 8255,
											"end": 8267,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 8248,
											"end": 8267,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 8248,
											"end": 8267,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7907,
											"end": 8273,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 7907,
											"end": 8273,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7907,
											"end": 8273,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7907,
											"end": 8273,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 8279,
											"end": 8698,
											"name": "tag",
											"source": 11,
											"value": "88"
										},
										{
											"begin": 8279,
											"end": 8698,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8445,
											"end": 8449,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 8483,
											"end": 8485,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 8472,
											"end": 8481,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 8468,
											"end": 8486,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 8460,
											"end": 8486,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 8460,
											"end": 8486,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8532,
											"end": 8541,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 8526,
											"end": 8530,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 8522,
											"end": 8542,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 8518,
											"end": 8519,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 8507,
											"end": 8516,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 8503,
											"end": 8520,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 8496,
											"end": 8543,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 8560,
											"end": 8691,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "257"
										},
										{
											"begin": 8686,
											"end": 8690,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 8560,
											"end": 8691,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "162"
										},
										{
											"begin": 8560,
											"end": 8691,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 8560,
											"end": 8691,
											"name": "tag",
											"source": 11,
											"value": "257"
										},
										{
											"begin": 8560,
											"end": 8691,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8552,
											"end": 8691,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 8552,
											"end": 8691,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8279,
											"end": 8698,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 8279,
											"end": 8698,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 8279,
											"end": 8698,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8279,
											"end": 8698,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 8704,
											"end": 9036,
											"name": "tag",
											"source": 11,
											"value": "90"
										},
										{
											"begin": 8704,
											"end": 9036,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8825,
											"end": 8829,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 8863,
											"end": 8865,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 8852,
											"end": 8861,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 8848,
											"end": 8866,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 8840,
											"end": 8866,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 8840,
											"end": 8866,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8876,
											"end": 8947,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "259"
										},
										{
											"begin": 8944,
											"end": 8945,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 8933,
											"end": 8942,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 8929,
											"end": 8946,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 8920,
											"end": 8926,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 8876,
											"end": 8947,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "149"
										},
										{
											"begin": 8876,
											"end": 8947,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 8876,
											"end": 8947,
											"name": "tag",
											"source": 11,
											"value": "259"
										},
										{
											"begin": 8876,
											"end": 8947,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8957,
											"end": 9029,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "260"
										},
										{
											"begin": 9025,
											"end": 9027,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 9014,
											"end": 9023,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 9010,
											"end": 9028,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 9001,
											"end": 9007,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 8957,
											"end": 9029,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "149"
										},
										{
											"begin": 8957,
											"end": 9029,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 8957,
											"end": 9029,
											"name": "tag",
											"source": 11,
											"value": "260"
										},
										{
											"begin": 8957,
											"end": 9029,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8704,
											"end": 9036,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 8704,
											"end": 9036,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 8704,
											"end": 9036,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8704,
											"end": 9036,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8704,
											"end": 9036,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8704,
											"end": 9036,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 9042,
											"end": 9185,
											"name": "tag",
											"source": 11,
											"value": "163"
										},
										{
											"begin": 9042,
											"end": 9185,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9099,
											"end": 9104,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 9130,
											"end": 9136,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 9124,
											"end": 9137,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 9115,
											"end": 9137,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 9115,
											"end": 9137,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 9146,
											"end": 9179,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "262"
										},
										{
											"begin": 9173,
											"end": 9178,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 9146,
											"end": 9179,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "142"
										},
										{
											"begin": 9146,
											"end": 9179,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 9146,
											"end": 9179,
											"name": "tag",
											"source": 11,
											"value": "262"
										},
										{
											"begin": 9146,
											"end": 9179,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9042,
											"end": 9185,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 9042,
											"end": 9185,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 9042,
											"end": 9185,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 9042,
											"end": 9185,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 9042,
											"end": 9185,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 9191,
											"end": 9542,
											"name": "tag",
											"source": 11,
											"value": "94"
										},
										{
											"begin": 9191,
											"end": 9542,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9261,
											"end": 9267,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 9310,
											"end": 9312,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 9298,
											"end": 9307,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 9289,
											"end": 9296,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 9285,
											"end": 9308,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 9281,
											"end": 9313,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 9278,
											"end": 9397,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 9278,
											"end": 9397,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "264"
										},
										{
											"begin": 9278,
											"end": 9397,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 9316,
											"end": 9395,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "265"
										},
										{
											"begin": 9316,
											"end": 9395,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "134"
										},
										{
											"begin": 9316,
											"end": 9395,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 9316,
											"end": 9395,
											"name": "tag",
											"source": 11,
											"value": "265"
										},
										{
											"begin": 9316,
											"end": 9395,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9278,
											"end": 9397,
											"name": "tag",
											"source": 11,
											"value": "264"
										},
										{
											"begin": 9278,
											"end": 9397,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9436,
											"end": 9437,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 9461,
											"end": 9525,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "266"
										},
										{
											"begin": 9517,
											"end": 9524,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 9508,
											"end": 9514,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 9497,
											"end": 9506,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 9493,
											"end": 9515,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 9461,
											"end": 9525,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "163"
										},
										{
											"begin": 9461,
											"end": 9525,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 9461,
											"end": 9525,
											"name": "tag",
											"source": 11,
											"value": "266"
										},
										{
											"begin": 9461,
											"end": 9525,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9451,
											"end": 9525,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 9451,
											"end": 9525,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 9407,
											"end": 9535,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 9191,
											"end": 9542,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 9191,
											"end": 9542,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 9191,
											"end": 9542,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 9191,
											"end": 9542,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 9191,
											"end": 9542,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 9548,
											"end": 9774,
											"name": "tag",
											"source": 11,
											"value": "164"
										},
										{
											"begin": 9548,
											"end": 9774,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9688,
											"end": 9722,
											"name": "PUSH",
											"source": 11,
											"value": "4E6F74207365742074686520656E6F75676820616D6F756E7420666F7220616C"
										},
										{
											"begin": 9684,
											"end": 9685,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 9676,
											"end": 9682,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 9672,
											"end": 9686,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 9665,
											"end": 9723,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 9757,
											"end": 9766,
											"name": "PUSH",
											"source": 11,
											"value": "6C6F77616E636500000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9752,
											"end": 9754,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 9744,
											"end": 9750,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 9740,
											"end": 9755,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 9733,
											"end": 9767,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 9548,
											"end": 9774,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 9548,
											"end": 9774,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 9780,
											"end": 10146,
											"name": "tag",
											"source": 11,
											"value": "165"
										},
										{
											"begin": 9780,
											"end": 10146,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9922,
											"end": 9925,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 9943,
											"end": 10010,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "269"
										},
										{
											"begin": 10007,
											"end": 10009,
											"name": "PUSH",
											"source": 11,
											"value": "27"
										},
										{
											"begin": 10002,
											"end": 10005,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 9943,
											"end": 10010,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "152"
										},
										{
											"begin": 9943,
											"end": 10010,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 9943,
											"end": 10010,
											"name": "tag",
											"source": 11,
											"value": "269"
										},
										{
											"begin": 9943,
											"end": 10010,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9936,
											"end": 10010,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 9936,
											"end": 10010,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 10019,
											"end": 10112,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "270"
										},
										{
											"begin": 10108,
											"end": 10111,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 10019,
											"end": 10112,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "164"
										},
										{
											"begin": 10019,
											"end": 10112,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 10019,
											"end": 10112,
											"name": "tag",
											"source": 11,
											"value": "270"
										},
										{
											"begin": 10019,
											"end": 10112,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 10137,
											"end": 10139,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 10132,
											"end": 10135,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 10128,
											"end": 10140,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 10121,
											"end": 10140,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 10121,
											"end": 10140,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 9780,
											"end": 10146,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 9780,
											"end": 10146,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 9780,
											"end": 10146,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 9780,
											"end": 10146,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 10152,
											"end": 10571,
											"name": "tag",
											"source": 11,
											"value": "97"
										},
										{
											"begin": 10152,
											"end": 10571,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 10318,
											"end": 10322,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 10356,
											"end": 10358,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 10345,
											"end": 10354,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 10341,
											"end": 10359,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 10333,
											"end": 10359,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 10333,
											"end": 10359,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 10405,
											"end": 10414,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 10399,
											"end": 10403,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 10395,
											"end": 10415,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 10391,
											"end": 10392,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 10380,
											"end": 10389,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 10376,
											"end": 10393,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 10369,
											"end": 10416,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 10433,
											"end": 10564,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "272"
										},
										{
											"begin": 10559,
											"end": 10563,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 10433,
											"end": 10564,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "165"
										},
										{
											"begin": 10433,
											"end": 10564,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 10433,
											"end": 10564,
											"name": "tag",
											"source": 11,
											"value": "272"
										},
										{
											"begin": 10433,
											"end": 10564,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 10425,
											"end": 10564,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 10425,
											"end": 10564,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 10152,
											"end": 10571,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 10152,
											"end": 10571,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 10152,
											"end": 10571,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 10152,
											"end": 10571,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 10577,
											"end": 11019,
											"name": "tag",
											"source": 11,
											"value": "99"
										},
										{
											"begin": 10577,
											"end": 11019,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 10726,
											"end": 10730,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 10764,
											"end": 10766,
											"name": "PUSH",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 10753,
											"end": 10762,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 10749,
											"end": 10767,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 10741,
											"end": 10767,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 10741,
											"end": 10767,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 10777,
											"end": 10848,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "274"
										},
										{
											"begin": 10845,
											"end": 10846,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 10834,
											"end": 10843,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 10830,
											"end": 10847,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 10821,
											"end": 10827,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 10777,
											"end": 10848,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "149"
										},
										{
											"begin": 10777,
											"end": 10848,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 10777,
											"end": 10848,
											"name": "tag",
											"source": 11,
											"value": "274"
										},
										{
											"begin": 10777,
											"end": 10848,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 10858,
											"end": 10930,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "275"
										},
										{
											"begin": 10926,
											"end": 10928,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 10915,
											"end": 10924,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 10911,
											"end": 10929,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 10902,
											"end": 10908,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 10858,
											"end": 10930,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "149"
										},
										{
											"begin": 10858,
											"end": 10930,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 10858,
											"end": 10930,
											"name": "tag",
											"source": 11,
											"value": "275"
										},
										{
											"begin": 10858,
											"end": 10930,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 10940,
											"end": 11012,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "276"
										},
										{
											"begin": 11008,
											"end": 11010,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 10997,
											"end": 11006,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 10993,
											"end": 11011,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 10984,
											"end": 10990,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 10940,
											"end": 11012,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "141"
										},
										{
											"begin": 10940,
											"end": 11012,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 10940,
											"end": 11012,
											"name": "tag",
											"source": 11,
											"value": "276"
										},
										{
											"begin": 10940,
											"end": 11012,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 10577,
											"end": 11019,
											"name": "SWAP5",
											"source": 11
										},
										{
											"begin": 10577,
											"end": 11019,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 10577,
											"end": 11019,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 10577,
											"end": 11019,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 10577,
											"end": 11019,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 10577,
											"end": 11019,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 10577,
											"end": 11019,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 11025,
											"end": 11216,
											"name": "tag",
											"source": 11,
											"value": "106"
										},
										{
											"begin": 11025,
											"end": 11216,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 11065,
											"end": 11068,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 11084,
											"end": 11104,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "278"
										},
										{
											"begin": 11102,
											"end": 11103,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 11084,
											"end": 11104,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "140"
										},
										{
											"begin": 11084,
											"end": 11104,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 11084,
											"end": 11104,
											"name": "tag",
											"source": 11,
											"value": "278"
										},
										{
											"begin": 11084,
											"end": 11104,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 11079,
											"end": 11104,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 11079,
											"end": 11104,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 11118,
											"end": 11138,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "279"
										},
										{
											"begin": 11136,
											"end": 11137,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 11118,
											"end": 11138,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "140"
										},
										{
											"begin": 11118,
											"end": 11138,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 11118,
											"end": 11138,
											"name": "tag",
											"source": 11,
											"value": "279"
										},
										{
											"begin": 11118,
											"end": 11138,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 11113,
											"end": 11138,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 11113,
											"end": 11138,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 11161,
											"end": 11162,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 11158,
											"end": 11159,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 11154,
											"end": 11163,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 11147,
											"end": 11163,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 11147,
											"end": 11163,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 11182,
											"end": 11185,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 11179,
											"end": 11180,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 11176,
											"end": 11186,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 11173,
											"end": 11209,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 11173,
											"end": 11209,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "280"
										},
										{
											"begin": 11173,
											"end": 11209,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 11189,
											"end": 11207,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "281"
										},
										{
											"begin": 11189,
											"end": 11207,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "155"
										},
										{
											"begin": 11189,
											"end": 11207,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 11189,
											"end": 11207,
											"name": "tag",
											"source": 11,
											"value": "281"
										},
										{
											"begin": 11189,
											"end": 11207,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 11173,
											"end": 11209,
											"name": "tag",
											"source": 11,
											"value": "280"
										},
										{
											"begin": 11173,
											"end": 11209,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 11025,
											"end": 11216,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 11025,
											"end": 11216,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 11025,
											"end": 11216,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 11025,
											"end": 11216,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 11025,
											"end": 11216,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 11222,
											"end": 11632,
											"name": "tag",
											"source": 11,
											"value": "111"
										},
										{
											"begin": 11222,
											"end": 11632,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 11262,
											"end": 11269,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 11285,
											"end": 11305,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "283"
										},
										{
											"begin": 11303,
											"end": 11304,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 11285,
											"end": 11305,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "140"
										},
										{
											"begin": 11285,
											"end": 11305,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 11285,
											"end": 11305,
											"name": "tag",
											"source": 11,
											"value": "283"
										},
										{
											"begin": 11285,
											"end": 11305,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 11280,
											"end": 11305,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 11280,
											"end": 11305,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 11319,
											"end": 11339,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "284"
										},
										{
											"begin": 11337,
											"end": 11338,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 11319,
											"end": 11339,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "140"
										},
										{
											"begin": 11319,
											"end": 11339,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 11319,
											"end": 11339,
											"name": "tag",
											"source": 11,
											"value": "284"
										},
										{
											"begin": 11319,
											"end": 11339,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 11314,
											"end": 11339,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 11314,
											"end": 11339,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 11374,
											"end": 11375,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 11371,
											"end": 11372,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 11367,
											"end": 11376,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 11396,
											"end": 11426,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "285"
										},
										{
											"begin": 11414,
											"end": 11425,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 11396,
											"end": 11426,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "140"
										},
										{
											"begin": 11396,
											"end": 11426,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 11396,
											"end": 11426,
											"name": "tag",
											"source": 11,
											"value": "285"
										},
										{
											"begin": 11396,
											"end": 11426,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 11385,
											"end": 11426,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 11385,
											"end": 11426,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 11575,
											"end": 11576,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 11566,
											"end": 11573,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 11562,
											"end": 11577,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 11559,
											"end": 11560,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 11556,
											"end": 11578,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 11536,
											"end": 11537,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 11529,
											"end": 11538,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 11509,
											"end": 11592,
											"name": "OR",
											"source": 11
										},
										{
											"begin": 11486,
											"end": 11625,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "286"
										},
										{
											"begin": 11486,
											"end": 11625,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 11605,
											"end": 11623,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "287"
										},
										{
											"begin": 11605,
											"end": 11623,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "155"
										},
										{
											"begin": 11605,
											"end": 11623,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 11605,
											"end": 11623,
											"name": "tag",
											"source": 11,
											"value": "287"
										},
										{
											"begin": 11605,
											"end": 11623,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 11486,
											"end": 11625,
											"name": "tag",
											"source": 11,
											"value": "286"
										},
										{
											"begin": 11486,
											"end": 11625,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 11270,
											"end": 11632,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 11222,
											"end": 11632,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 11222,
											"end": 11632,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 11222,
											"end": 11632,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 11222,
											"end": 11632,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 11222,
											"end": 11632,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 11638,
											"end": 11818,
											"name": "tag",
											"source": 11,
											"value": "166"
										},
										{
											"begin": 11638,
											"end": 11818,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 11686,
											"end": 11763,
											"name": "PUSH",
											"source": 11,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11683,
											"end": 11684,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 11676,
											"end": 11764,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 11783,
											"end": 11787,
											"name": "PUSH",
											"source": 11,
											"value": "12"
										},
										{
											"begin": 11780,
											"end": 11781,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 11773,
											"end": 11788,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 11807,
											"end": 11811,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 11804,
											"end": 11805,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 11797,
											"end": 11812,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 11824,
											"end": 12009,
											"name": "tag",
											"source": 11,
											"value": "113"
										},
										{
											"begin": 11824,
											"end": 12009,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 11864,
											"end": 11865,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 11881,
											"end": 11901,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "290"
										},
										{
											"begin": 11899,
											"end": 11900,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 11881,
											"end": 11901,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "140"
										},
										{
											"begin": 11881,
											"end": 11901,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 11881,
											"end": 11901,
											"name": "tag",
											"source": 11,
											"value": "290"
										},
										{
											"begin": 11881,
											"end": 11901,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 11876,
											"end": 11901,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 11876,
											"end": 11901,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 11915,
											"end": 11935,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "291"
										},
										{
											"begin": 11933,
											"end": 11934,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 11915,
											"end": 11935,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "140"
										},
										{
											"begin": 11915,
											"end": 11935,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 11915,
											"end": 11935,
											"name": "tag",
											"source": 11,
											"value": "291"
										},
										{
											"begin": 11915,
											"end": 11935,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 11910,
											"end": 11935,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 11910,
											"end": 11935,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 11954,
											"end": 11955,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 11944,
											"end": 11979,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "292"
										},
										{
											"begin": 11944,
											"end": 11979,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 11959,
											"end": 11977,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "293"
										},
										{
											"begin": 11959,
											"end": 11977,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "166"
										},
										{
											"begin": 11959,
											"end": 11977,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 11959,
											"end": 11977,
											"name": "tag",
											"source": 11,
											"value": "293"
										},
										{
											"begin": 11959,
											"end": 11977,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 11944,
											"end": 11979,
											"name": "tag",
											"source": 11,
											"value": "292"
										},
										{
											"begin": 11944,
											"end": 11979,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 12001,
											"end": 12002,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 11998,
											"end": 11999,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 11994,
											"end": 12003,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 11989,
											"end": 12003,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 11989,
											"end": 12003,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 11824,
											"end": 12009,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 11824,
											"end": 12009,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 11824,
											"end": 12009,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 11824,
											"end": 12009,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 11824,
											"end": 12009,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
								"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"contracts/RewardToken.sol",
								"contracts/StakeToken.sol",
								"contracts/StakingUpgrade.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"calculateTotalRewards()": "ba5a5319",
							"claimRewards()": "372500ab",
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"rewardToken()": "f7c618c1",
							"stake(uint256)": "a694fc3a",
							"stakeToken()": "51ed6a30",
							"transferOwnership(address)": "f2fde38b",
							"userRewards(address)": "0660f1e8",
							"userStaked(address)": "acc3a939",
							"withdraw(uint256)": "2e1a7d4d"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"RewardsClaimed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Staked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Withdraw\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"calculateTotalRewards\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"claimRewards\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rewardToken\",\"outputs\":[{\"internalType\":\"contract RewardToken\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"stake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stakeToken\",\"outputs\":[{\"internalType\":\"contract StakeToken\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"userRewards\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"userStaked\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/StakingUpgrade.sol\":\"StakingUpgrade\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":{\"keccak256\":\"0xc163fcf9bb10138631a9ba5564df1fa25db9adff73bd9ee868a8ae1858fe093a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9706d43a0124053d9880f6e31a59f31bc0a6a3dc1acd66ce0a16e1111658c5f6\",\"dweb:/ipfs/QmUFmfowzkRwGtDu36cXV9SPTBHJ3n7dG9xQiK5B28jTf2\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xbf61ab2ae1d575a17ea58fbb99ca232baddcc4e0eeea180e84cbc74b0c348b31\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4e0968705bad99747a8e5288aa008678c2be2f471f919dce3925a3cc4f1dee09\",\"dweb:/ipfs/QmbAFnCQfo4tw6ssfQSjhA5LzwHWNNryXN8bX7ty8jiqqn\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"contracts/RewardToken.sol\":{\"keccak256\":\"0x41ff0f1c961168e5bce46e27b0ff13a5623361533d46272df499c761e5920a47\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://daa4a269e66c6dc837c389472d53603e751cb9ad70eaf5631b204ad110f65558\",\"dweb:/ipfs/QmVYYQFeUU8bgroTcLHN3mmSoJGHiLPQp432VDYgdAcHUw\"]},\"contracts/StakeToken.sol\":{\"keccak256\":\"0x80faa1ce7d6e7ebd7464c1c16a1cf10e5bf99a0c5aac8bf27dc835b212c79cdf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://283c65360c789447e66d27cfb7a3cd07634abe28439a4c279314f803411f74a7\",\"dweb:/ipfs/QmcuxeG2WtK3V8UqpWgxNWrLorYUDYZ6dLc9GByrHjLZcu\"]},\"contracts/StakingUpgrade.sol\":{\"keccak256\":\"0x734ca6dc9606a24a502b7b694925a0ed5626a0012c07fb0327176eb1cb859f96\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8142a28bddd90e72021ae9bbaa24ddfc8dd93cf70a3b9a97f9af41e57f0b5214\",\"dweb:/ipfs/QmUQWi6BgJq4W3omvtUxu6TScGZR3HUTurDh9YxD12jNoT\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 1345,
								"contract": "contracts/StakingUpgrade.sol:StakingUpgrade",
								"label": "stakeToken",
								"offset": 0,
								"slot": "0",
								"type": "t_contract(StakeToken)1332"
							},
							{
								"astId": 1348,
								"contract": "contracts/StakingUpgrade.sol:StakingUpgrade",
								"label": "rewardToken",
								"offset": 0,
								"slot": "1",
								"type": "t_contract(RewardToken)1306"
							},
							{
								"astId": 1350,
								"contract": "contracts/StakingUpgrade.sol:StakingUpgrade",
								"label": "lastUpdatedTime",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 1354,
								"contract": "contracts/StakingUpgrade.sol:StakingUpgrade",
								"label": "userStaked",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 1358,
								"contract": "contracts/StakingUpgrade.sol:StakingUpgrade",
								"label": "userRewards",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_address,t_uint256)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_contract(RewardToken)1306": {
								"encoding": "inplace",
								"label": "contract RewardToken",
								"numberOfBytes": "20"
							},
							"t_contract(StakeToken)1332": {
								"encoding": "inplace",
								"label": "contract StakeToken",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
					"exportedSymbols": {
						"ContextUpgradeable": [
							494
						],
						"Initializable": [
							448
						],
						"OwnableUpgradeable": [
							194
						]
					},
					"id": 195,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "102:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
							"file": "../utils/ContextUpgradeable.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 195,
							"sourceUnit": 495,
							"src": "128:67:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "ContextUpgradeable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 494,
										"src": "136:18:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
							"file": "../proxy/utils/Initializable.sol",
							"id": 5,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 195,
							"sourceUnit": 449,
							"src": "196:63:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 4,
										"name": "Initializable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 448,
										"src": "204:13:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 7,
										"name": "Initializable",
										"nameLocations": [
											"789:13:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 448,
										"src": "789:13:0"
									},
									"id": 8,
									"nodeType": "InheritanceSpecifier",
									"src": "789:13:0"
								},
								{
									"baseName": {
										"id": 9,
										"name": "ContextUpgradeable",
										"nameLocations": [
											"804:18:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 494,
										"src": "804:18:0"
									},
									"id": 10,
									"nodeType": "InheritanceSpecifier",
									"src": "804:18:0"
								}
							],
							"canonicalName": "OwnableUpgradeable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 6,
								"nodeType": "StructuredDocumentation",
								"src": "261:487:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 194,
							"linearizedBaseContracts": [
								194,
								494,
								448
							],
							"name": "OwnableUpgradeable",
							"nameLocation": "767:18:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "OwnableUpgradeable.OwnableStorage",
									"documentation": {
										"id": 11,
										"nodeType": "StructuredDocumentation",
										"src": "829:65:0",
										"text": "@custom:storage-location erc7201:openzeppelin.storage.Ownable"
									},
									"id": 14,
									"members": [
										{
											"constant": false,
											"id": 13,
											"mutability": "mutable",
											"name": "_owner",
											"nameLocation": "939:6:0",
											"nodeType": "VariableDeclaration",
											"scope": 14,
											"src": "931:14:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 12,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "931:7:0",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "OwnableStorage",
									"nameLocation": "906:14:0",
									"nodeType": "StructDefinition",
									"scope": 194,
									"src": "899:53:0",
									"visibility": "public"
								},
								{
									"constant": true,
									"id": 17,
									"mutability": "constant",
									"name": "OwnableStorageLocation",
									"nameLocation": "1094:22:0",
									"nodeType": "VariableDeclaration",
									"scope": 194,
									"src": "1069:116:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 15,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "1069:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307839303136643039643732643430666461653266643863656163366236323334633737303632313466643339633163643165363039613035323863313939333030",
										"id": 16,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1119:66:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_65173360639460082030725920392146925864023520599682862633725751242436743107328_by_1",
											"typeString": "int_const 6517...(69 digits omitted)...7328"
										},
										"value": "0x9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300"
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 24,
										"nodeType": "Block",
										"src": "1270:81:0",
										"statements": [
											{
												"AST": {
													"nativeSrc": "1289:56:0",
													"nodeType": "YulBlock",
													"src": "1289:56:0",
													"statements": [
														{
															"nativeSrc": "1303:32:0",
															"nodeType": "YulAssignment",
															"src": "1303:32:0",
															"value": {
																"name": "OwnableStorageLocation",
																"nativeSrc": "1313:22:0",
																"nodeType": "YulIdentifier",
																"src": "1313:22:0"
															},
															"variableNames": [
																{
																	"name": "$.slot",
																	"nativeSrc": "1303:6:0",
																	"nodeType": "YulIdentifier",
																	"src": "1303:6:0"
																}
															]
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 21,
														"isOffset": false,
														"isSlot": true,
														"src": "1303:6:0",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 17,
														"isOffset": false,
														"isSlot": false,
														"src": "1313:22:0",
														"valueSize": 1
													}
												],
												"id": 23,
												"nodeType": "InlineAssembly",
												"src": "1280:65:0"
											}
										]
									},
									"id": 25,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getOwnableStorage",
									"nameLocation": "1201:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 18,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1219:2:0"
									},
									"returnParameters": {
										"id": 22,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 21,
												"mutability": "mutable",
												"name": "$",
												"nameLocation": "1267:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 25,
												"src": "1244:24:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_OwnableStorage_$14_storage_ptr",
													"typeString": "struct OwnableUpgradeable.OwnableStorage"
												},
												"typeName": {
													"id": 20,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 19,
														"name": "OwnableStorage",
														"nameLocations": [
															"1244:14:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 14,
														"src": "1244:14:0"
													},
													"referencedDeclaration": 14,
													"src": "1244:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_OwnableStorage_$14_storage_ptr",
														"typeString": "struct OwnableUpgradeable.OwnableStorage"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1243:26:0"
									},
									"scope": 194,
									"src": "1192:159:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 26,
										"nodeType": "StructuredDocumentation",
										"src": "1357:85:0",
										"text": " @dev The caller account is not authorized to perform an operation."
									},
									"errorSelector": "118cdaa7",
									"id": 30,
									"name": "OwnableUnauthorizedAccount",
									"nameLocation": "1453:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 28,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1488:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 30,
												"src": "1480:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 27,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1480:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1479:17:0"
									},
									"src": "1447:50:0"
								},
								{
									"documentation": {
										"id": 31,
										"nodeType": "StructuredDocumentation",
										"src": "1503:82:0",
										"text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
									},
									"errorSelector": "1e4fbdf7",
									"id": 35,
									"name": "OwnableInvalidOwner",
									"nameLocation": "1596:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 34,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 33,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1624:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 35,
												"src": "1616:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 32,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1616:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1615:15:0"
									},
									"src": "1590:41:0"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 41,
									"name": "OwnershipTransferred",
									"nameLocation": "1643:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 40,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 37,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "1680:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 41,
												"src": "1664:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 36,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1664:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 39,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1711:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 41,
												"src": "1695:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 38,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1695:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1663:57:0"
									},
									"src": "1637:84:0"
								},
								{
									"body": {
										"id": 53,
										"nodeType": "Block",
										"src": "1919:55:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 50,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 44,
															"src": "1954:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 49,
														"name": "__Ownable_init_unchained",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 81,
														"src": "1929:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 51,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1929:38:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 52,
												"nodeType": "ExpressionStatement",
												"src": "1929:38:0"
											}
										]
									},
									"documentation": {
										"id": 42,
										"nodeType": "StructuredDocumentation",
										"src": "1727:115:0",
										"text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
									},
									"id": 54,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 47,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 46,
												"name": "onlyInitializing",
												"nameLocations": [
													"1902:16:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 357,
												"src": "1902:16:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1902:16:0"
										}
									],
									"name": "__Ownable_init",
									"nameLocation": "1856:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 45,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 44,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "1879:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1871:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 43,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1871:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1870:22:0"
									},
									"returnParameters": {
										"id": 48,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1919:0:0"
									},
									"scope": 194,
									"src": "1847:127:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 80,
										"nodeType": "Block",
										"src": "2062:153:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 66,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 61,
														"name": "initialOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 56,
														"src": "2076:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 64,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2100:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 63,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2092:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 62,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2092:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 65,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2092:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2076:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 75,
												"nodeType": "IfStatement",
												"src": "2072:95:0",
												"trueBody": {
													"id": 74,
													"nodeType": "Block",
													"src": "2104:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 70,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2153:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 69,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2145:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 68,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2145:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 71,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2145:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 67,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 35,
																	"src": "2125:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 72,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2125:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 73,
															"nodeType": "RevertStatement",
															"src": "2118:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 77,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 56,
															"src": "2195:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 76,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 193,
														"src": "2176:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 78,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2176:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 79,
												"nodeType": "ExpressionStatement",
												"src": "2176:32:0"
											}
										]
									},
									"id": 81,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 59,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 58,
												"name": "onlyInitializing",
												"nameLocations": [
													"2045:16:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 357,
												"src": "2045:16:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2045:16:0"
										}
									],
									"name": "__Ownable_init_unchained",
									"nameLocation": "1989:24:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 57,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 56,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "2022:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 81,
												"src": "2014:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 55,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2014:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2013:22:0"
									},
									"returnParameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2062:0:0"
									},
									"scope": 194,
									"src": "1980:235:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 88,
										"nodeType": "Block",
										"src": "2324:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 84,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 122,
														"src": "2334:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 85,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2334:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 86,
												"nodeType": "ExpressionStatement",
												"src": "2334:13:0"
											},
											{
												"id": 87,
												"nodeType": "PlaceholderStatement",
												"src": "2357:1:0"
											}
										]
									},
									"documentation": {
										"id": 82,
										"nodeType": "StructuredDocumentation",
										"src": "2221:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 89,
									"name": "onlyOwner",
									"nameLocation": "2312:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 83,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2321:2:0"
									},
									"src": "2303:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 104,
										"nodeType": "Block",
										"src": "2496:89:0",
										"statements": [
											{
												"assignments": [
													97
												],
												"declarations": [
													{
														"constant": false,
														"id": 97,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "2529:1:0",
														"nodeType": "VariableDeclaration",
														"scope": 104,
														"src": "2506:24:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_OwnableStorage_$14_storage_ptr",
															"typeString": "struct OwnableUpgradeable.OwnableStorage"
														},
														"typeName": {
															"id": 96,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 95,
																"name": "OwnableStorage",
																"nameLocations": [
																	"2506:14:0"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 14,
																"src": "2506:14:0"
															},
															"referencedDeclaration": 14,
															"src": "2506:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_OwnableStorage_$14_storage_ptr",
																"typeString": "struct OwnableUpgradeable.OwnableStorage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 100,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 98,
														"name": "_getOwnableStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 25,
														"src": "2533:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_OwnableStorage_$14_storage_ptr_$",
															"typeString": "function () pure returns (struct OwnableUpgradeable.OwnableStorage storage pointer)"
														}
													},
													"id": 99,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2533:20:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_OwnableStorage_$14_storage_ptr",
														"typeString": "struct OwnableUpgradeable.OwnableStorage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2506:47:0"
											},
											{
												"expression": {
													"expression": {
														"id": 101,
														"name": "$",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 97,
														"src": "2570:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_OwnableStorage_$14_storage_ptr",
															"typeString": "struct OwnableUpgradeable.OwnableStorage storage pointer"
														}
													},
													"id": 102,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "2572:6:0",
													"memberName": "_owner",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 13,
													"src": "2570:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 94,
												"id": 103,
												"nodeType": "Return",
												"src": "2563:15:0"
											}
										]
									},
									"documentation": {
										"id": 90,
										"nodeType": "StructuredDocumentation",
										"src": "2371:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 105,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "2450:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 91,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2455:2:0"
									},
									"returnParameters": {
										"id": 94,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 93,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 105,
												"src": "2487:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 92,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2487:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2486:9:0"
									},
									"scope": 194,
									"src": "2441:144:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 121,
										"nodeType": "Block",
										"src": "2703:117:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 113,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 109,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 105,
															"src": "2717:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 110,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2717:7:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 111,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 476,
															"src": "2728:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 112,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2728:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2717:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 120,
												"nodeType": "IfStatement",
												"src": "2713:101:0",
												"trueBody": {
													"id": 119,
													"nodeType": "Block",
													"src": "2742:72:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 115,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 476,
																			"src": "2790:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 116,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2790:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 114,
																	"name": "OwnableUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 30,
																	"src": "2763:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 117,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2763:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 118,
															"nodeType": "RevertStatement",
															"src": "2756:47:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 106,
										"nodeType": "StructuredDocumentation",
										"src": "2591:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 122,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "2667:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 107,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2678:2:0"
									},
									"returnParameters": {
										"id": 108,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2703:0:0"
									},
									"scope": 194,
									"src": "2658:162:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 135,
										"nodeType": "Block",
										"src": "3209:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 131,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3246:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 130,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3238:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 129,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3238:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 132,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3238:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 128,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 193,
														"src": "3219:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 133,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3219:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 134,
												"nodeType": "ExpressionStatement",
												"src": "3219:30:0"
											}
										]
									},
									"documentation": {
										"id": 123,
										"nodeType": "StructuredDocumentation",
										"src": "2826:324:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 136,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 126,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 125,
												"name": "onlyOwner",
												"nameLocations": [
													"3199:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 89,
												"src": "3199:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "3199:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "3164:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 124,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3181:2:0"
									},
									"returnParameters": {
										"id": 127,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3209:0:0"
									},
									"scope": 194,
									"src": "3155:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 163,
										"nodeType": "Block",
										"src": "3475:145:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 149,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 144,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 139,
														"src": "3489:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 147,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3509:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 146,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "3501:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 145,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "3501:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 148,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3501:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3489:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 158,
												"nodeType": "IfStatement",
												"src": "3485:91:0",
												"trueBody": {
													"id": 157,
													"nodeType": "Block",
													"src": "3513:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 153,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "3562:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 152,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "3554:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 151,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "3554:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 154,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3554:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 150,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 35,
																	"src": "3534:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 155,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3534:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 156,
															"nodeType": "RevertStatement",
															"src": "3527:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 160,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 139,
															"src": "3604:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 159,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 193,
														"src": "3585:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 161,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3585:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 162,
												"nodeType": "ExpressionStatement",
												"src": "3585:28:0"
											}
										]
									},
									"documentation": {
										"id": 137,
										"nodeType": "StructuredDocumentation",
										"src": "3262:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 164,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 142,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 141,
												"name": "onlyOwner",
												"nameLocations": [
													"3465:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 89,
												"src": "3465:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "3465:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "3414:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 140,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 139,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "3440:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 164,
												"src": "3432:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 138,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3432:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3431:18:0"
									},
									"returnParameters": {
										"id": 143,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3475:0:0"
									},
									"scope": 194,
									"src": "3405:215:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 192,
										"nodeType": "Block",
										"src": "3837:185:0",
										"statements": [
											{
												"assignments": [
													172
												],
												"declarations": [
													{
														"constant": false,
														"id": 172,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "3870:1:0",
														"nodeType": "VariableDeclaration",
														"scope": 192,
														"src": "3847:24:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_OwnableStorage_$14_storage_ptr",
															"typeString": "struct OwnableUpgradeable.OwnableStorage"
														},
														"typeName": {
															"id": 171,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 170,
																"name": "OwnableStorage",
																"nameLocations": [
																	"3847:14:0"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 14,
																"src": "3847:14:0"
															},
															"referencedDeclaration": 14,
															"src": "3847:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_OwnableStorage_$14_storage_ptr",
																"typeString": "struct OwnableUpgradeable.OwnableStorage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 175,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 173,
														"name": "_getOwnableStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 25,
														"src": "3874:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_OwnableStorage_$14_storage_ptr_$",
															"typeString": "function () pure returns (struct OwnableUpgradeable.OwnableStorage storage pointer)"
														}
													},
													"id": 174,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3874:20:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_OwnableStorage_$14_storage_ptr",
														"typeString": "struct OwnableUpgradeable.OwnableStorage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3847:47:0"
											},
											{
												"assignments": [
													177
												],
												"declarations": [
													{
														"constant": false,
														"id": 177,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "3912:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 192,
														"src": "3904:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 176,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3904:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 180,
												"initialValue": {
													"expression": {
														"id": 178,
														"name": "$",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 172,
														"src": "3923:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_OwnableStorage_$14_storage_ptr",
															"typeString": "struct OwnableUpgradeable.OwnableStorage storage pointer"
														}
													},
													"id": 179,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "3925:6:0",
													"memberName": "_owner",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 13,
													"src": "3923:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3904:27:0"
											},
											{
												"expression": {
													"id": 185,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 181,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 172,
															"src": "3941:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_OwnableStorage_$14_storage_ptr",
																"typeString": "struct OwnableUpgradeable.OwnableStorage storage pointer"
															}
														},
														"id": 183,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "3943:6:0",
														"memberName": "_owner",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 13,
														"src": "3941:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 184,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 167,
														"src": "3952:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3941:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 186,
												"nodeType": "ExpressionStatement",
												"src": "3941:19:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 188,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 177,
															"src": "3996:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 189,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 167,
															"src": "4006:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 187,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 41,
														"src": "3975:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 190,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3975:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 191,
												"nodeType": "EmitStatement",
												"src": "3970:45:0"
											}
										]
									},
									"documentation": {
										"id": 165,
										"nodeType": "StructuredDocumentation",
										"src": "3626:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 193,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "3783:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 168,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 167,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "3810:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 193,
												"src": "3802:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 166,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3802:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3801:18:0"
									},
									"returnParameters": {
										"id": 169,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3837:0:0"
									},
									"scope": 194,
									"src": "3774:248:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 195,
							"src": "749:3275:0",
							"usedErrors": [
								30,
								35,
								211,
								214
							],
							"usedEvents": [
								41,
								219
							]
						}
					],
					"src": "102:3923:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
					"exportedSymbols": {
						"Initializable": [
							448
						]
					},
					"id": 449,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 196,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "113:24:1"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Initializable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 197,
								"nodeType": "StructuredDocumentation",
								"src": "139:2209:1",
								"text": " @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\n behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\n external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\n function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\n The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\n reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in\n case an upgrade adds a module that needs to be initialized.\n For example:\n [.hljs-theme-light.nopadding]\n ```solidity\n contract MyToken is ERC20Upgradeable {\n     function initialize() initializer public {\n         __ERC20_init(\"MyToken\", \"MTK\");\n     }\n }\n contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\n     function initializeV2() reinitializer(2) public {\n         __ERC20Permit_init(\"MyToken\");\n     }\n }\n ```\n TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\n possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\n CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\n that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\n [CAUTION]\n ====\n Avoid leaving a contract uninitialized.\n An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\n contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\n the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\n [.hljs-theme-light.nopadding]\n ```\n /// @custom:oz-upgrades-unsafe-allow constructor\n constructor() {\n     _disableInitializers();\n }\n ```\n ===="
							},
							"fullyImplemented": true,
							"id": 448,
							"linearizedBaseContracts": [
								448
							],
							"name": "Initializable",
							"nameLocation": "2367:13:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "Initializable.InitializableStorage",
									"documentation": {
										"id": 198,
										"nodeType": "StructuredDocumentation",
										"src": "2387:293:1",
										"text": " @dev Storage of the initializable contract.\n It's implemented on a custom ERC-7201 namespace to reduce the risk of storage collisions\n when using with upgradeable contracts.\n @custom:storage-location erc7201:openzeppelin.storage.Initializable"
									},
									"id": 205,
									"members": [
										{
											"constant": false,
											"id": 201,
											"mutability": "mutable",
											"name": "_initialized",
											"nameLocation": "2820:12:1",
											"nodeType": "VariableDeclaration",
											"scope": 205,
											"src": "2813:19:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint64",
												"typeString": "uint64"
											},
											"typeName": {
												"id": 200,
												"name": "uint64",
												"nodeType": "ElementaryTypeName",
												"src": "2813:6:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 204,
											"mutability": "mutable",
											"name": "_initializing",
											"nameLocation": "2955:13:1",
											"nodeType": "VariableDeclaration",
											"scope": 205,
											"src": "2950:18:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 203,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "2950:4:1",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "InitializableStorage",
									"nameLocation": "2692:20:1",
									"nodeType": "StructDefinition",
									"scope": 448,
									"src": "2685:290:1",
									"visibility": "public"
								},
								{
									"constant": true,
									"id": 208,
									"mutability": "constant",
									"name": "INITIALIZABLE_STORAGE",
									"nameLocation": "3123:21:1",
									"nodeType": "VariableDeclaration",
									"scope": 448,
									"src": "3098:115:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 206,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "3098:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307866306335376531363834306466303430663135303838646332663831666533393163333932336265633733653233613936363265666339633232396336613030",
										"id": 207,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "3147:66:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_108904022758810753673719992590105913556127789646572562039383141376366747609600_by_1",
											"typeString": "int_const 1089...(70 digits omitted)...9600"
										},
										"value": "0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00"
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 209,
										"nodeType": "StructuredDocumentation",
										"src": "3220:60:1",
										"text": " @dev The contract is already initialized."
									},
									"errorSelector": "f92ee8a9",
									"id": 211,
									"name": "InvalidInitialization",
									"nameLocation": "3291:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 210,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3312:2:1"
									},
									"src": "3285:30:1"
								},
								{
									"documentation": {
										"id": 212,
										"nodeType": "StructuredDocumentation",
										"src": "3321:57:1",
										"text": " @dev The contract is not initializing."
									},
									"errorSelector": "d7e6bcf8",
									"id": 214,
									"name": "NotInitializing",
									"nameLocation": "3389:15:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 213,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3404:2:1"
									},
									"src": "3383:24:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 215,
										"nodeType": "StructuredDocumentation",
										"src": "3413:90:1",
										"text": " @dev Triggered when the contract has been initialized or reinitialized."
									},
									"eventSelector": "c7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d2",
									"id": 219,
									"name": "Initialized",
									"nameLocation": "3514:11:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 218,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 217,
												"indexed": false,
												"mutability": "mutable",
												"name": "version",
												"nameLocation": "3533:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 219,
												"src": "3526:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 216,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "3526:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3525:16:1"
									},
									"src": "3508:34:1"
								},
								{
									"body": {
										"id": 301,
										"nodeType": "Block",
										"src": "4092:1081:1",
										"statements": [
											{
												"assignments": [
													224
												],
												"declarations": [
													{
														"constant": false,
														"id": 224,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "4187:1:1",
														"nodeType": "VariableDeclaration",
														"scope": 301,
														"src": "4158:30:1",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage"
														},
														"typeName": {
															"id": 223,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 222,
																"name": "InitializableStorage",
																"nameLocations": [
																	"4158:20:1"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 205,
																"src": "4158:20:1"
															},
															"referencedDeclaration": 205,
															"src": "4158:20:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 227,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 225,
														"name": "_getInitializableStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 447,
														"src": "4191:24:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$205_storage_ptr_$",
															"typeString": "function () pure returns (struct Initializable.InitializableStorage storage pointer)"
														}
													},
													"id": 226,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4191:26:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
														"typeString": "struct Initializable.InitializableStorage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4158:59:1"
											},
											{
												"assignments": [
													229
												],
												"declarations": [
													{
														"constant": false,
														"id": 229,
														"mutability": "mutable",
														"name": "isTopLevelCall",
														"nameLocation": "4284:14:1",
														"nodeType": "VariableDeclaration",
														"scope": 301,
														"src": "4279:19:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 228,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4279:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 233,
												"initialValue": {
													"id": 232,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "4301:16:1",
													"subExpression": {
														"expression": {
															"id": 230,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 224,
															"src": "4302:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 231,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4304:13:1",
														"memberName": "_initializing",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 204,
														"src": "4302:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4279:38:1"
											},
											{
												"assignments": [
													235
												],
												"declarations": [
													{
														"constant": false,
														"id": 235,
														"mutability": "mutable",
														"name": "initialized",
														"nameLocation": "4334:11:1",
														"nodeType": "VariableDeclaration",
														"scope": 301,
														"src": "4327:18:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														},
														"typeName": {
															"id": 234,
															"name": "uint64",
															"nodeType": "ElementaryTypeName",
															"src": "4327:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 238,
												"initialValue": {
													"expression": {
														"id": 236,
														"name": "$",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 224,
														"src": "4348:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage storage pointer"
														}
													},
													"id": 237,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "4350:12:1",
													"memberName": "_initialized",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 201,
													"src": "4348:14:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4327:35:1"
											},
											{
												"assignments": [
													240
												],
												"declarations": [
													{
														"constant": false,
														"id": 240,
														"mutability": "mutable",
														"name": "initialSetup",
														"nameLocation": "4711:12:1",
														"nodeType": "VariableDeclaration",
														"scope": 301,
														"src": "4706:17:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 239,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4706:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 246,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 245,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														},
														"id": 243,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 241,
															"name": "initialized",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 235,
															"src": "4726:11:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 242,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4741:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "4726:16:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"id": 244,
														"name": "isTopLevelCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 229,
														"src": "4746:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "4726:34:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4706:54:1"
											},
											{
												"assignments": [
													248
												],
												"declarations": [
													{
														"constant": false,
														"id": 248,
														"mutability": "mutable",
														"name": "construction",
														"nameLocation": "4775:12:1",
														"nodeType": "VariableDeclaration",
														"scope": 301,
														"src": "4770:17:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 247,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4770:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 261,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 260,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														},
														"id": 251,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 249,
															"name": "initialized",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 235,
															"src": "4790:11:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "31",
															"id": 250,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4805:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "4790:16:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 259,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 254,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "4818:4:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Initializable_$448",
																				"typeString": "contract Initializable"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Initializable_$448",
																				"typeString": "contract Initializable"
																			}
																		],
																		"id": 253,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "4810:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 252,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "4810:7:1",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 255,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4810:13:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 256,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4824:4:1",
																"memberName": "code",
																"nodeType": "MemberAccess",
																"src": "4810:18:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 257,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4829:6:1",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "4810:25:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 258,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4839:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "4810:30:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "4790:50:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4770:70:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 266,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 263,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "4855:13:1",
														"subExpression": {
															"id": 262,
															"name": "initialSetup",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 240,
															"src": "4856:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"id": 265,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "4872:13:1",
														"subExpression": {
															"id": 264,
															"name": "construction",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 248,
															"src": "4873:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "4855:30:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 271,
												"nodeType": "IfStatement",
												"src": "4851:91:1",
												"trueBody": {
													"id": 270,
													"nodeType": "Block",
													"src": "4887:55:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 267,
																	"name": "InvalidInitialization",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 211,
																	"src": "4908:21:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 268,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4908:23:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 269,
															"nodeType": "RevertStatement",
															"src": "4901:30:1"
														}
													]
												}
											},
											{
												"expression": {
													"id": 276,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 272,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 224,
															"src": "4951:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 274,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "4953:12:1",
														"memberName": "_initialized",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 201,
														"src": "4951:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "31",
														"id": 275,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4968:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "4951:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"id": 277,
												"nodeType": "ExpressionStatement",
												"src": "4951:18:1"
											},
											{
												"condition": {
													"id": 278,
													"name": "isTopLevelCall",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 229,
													"src": "4983:14:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 286,
												"nodeType": "IfStatement",
												"src": "4979:67:1",
												"trueBody": {
													"id": 285,
													"nodeType": "Block",
													"src": "4999:47:1",
													"statements": [
														{
															"expression": {
																"id": 283,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 279,
																		"name": "$",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 224,
																		"src": "5013:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																			"typeString": "struct Initializable.InitializableStorage storage pointer"
																		}
																	},
																	"id": 281,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "5015:13:1",
																	"memberName": "_initializing",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 204,
																	"src": "5013:15:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "74727565",
																	"id": 282,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5031:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "5013:22:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 284,
															"nodeType": "ExpressionStatement",
															"src": "5013:22:1"
														}
													]
												}
											},
											{
												"id": 287,
												"nodeType": "PlaceholderStatement",
												"src": "5055:1:1"
											},
											{
												"condition": {
													"id": 288,
													"name": "isTopLevelCall",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 229,
													"src": "5070:14:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 300,
												"nodeType": "IfStatement",
												"src": "5066:101:1",
												"trueBody": {
													"id": 299,
													"nodeType": "Block",
													"src": "5086:81:1",
													"statements": [
														{
															"expression": {
																"id": 293,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 289,
																		"name": "$",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 224,
																		"src": "5100:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																			"typeString": "struct Initializable.InitializableStorage storage pointer"
																		}
																	},
																	"id": 291,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "5102:13:1",
																	"memberName": "_initializing",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 204,
																	"src": "5100:15:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "66616c7365",
																	"id": 292,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5118:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "false"
																},
																"src": "5100:23:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 294,
															"nodeType": "ExpressionStatement",
															"src": "5100:23:1"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"hexValue": "31",
																		"id": 296,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5154:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		}
																	],
																	"id": 295,
																	"name": "Initialized",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 219,
																	"src": "5142:11:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_uint64_$returns$__$",
																		"typeString": "function (uint64)"
																	}
																},
																"id": 297,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5142:14:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 298,
															"nodeType": "EmitStatement",
															"src": "5137:19:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 220,
										"nodeType": "StructuredDocumentation",
										"src": "3548:516:1",
										"text": " @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\n `onlyInitializing` functions can be used to initialize parent contracts.\n Similar to `reinitializer(1)`, except that in the context of a constructor an `initializer` may be invoked any\n number of times. This behavior in the constructor can be useful during testing and is not expected to be used in\n production.\n Emits an {Initialized} event."
									},
									"id": 302,
									"name": "initializer",
									"nameLocation": "4078:11:1",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 221,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4089:2:1"
									},
									"src": "4069:1104:1",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 348,
										"nodeType": "Block",
										"src": "6291:392:1",
										"statements": [
											{
												"assignments": [
													309
												],
												"declarations": [
													{
														"constant": false,
														"id": 309,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "6386:1:1",
														"nodeType": "VariableDeclaration",
														"scope": 348,
														"src": "6357:30:1",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage"
														},
														"typeName": {
															"id": 308,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 307,
																"name": "InitializableStorage",
																"nameLocations": [
																	"6357:20:1"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 205,
																"src": "6357:20:1"
															},
															"referencedDeclaration": 205,
															"src": "6357:20:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 312,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 310,
														"name": "_getInitializableStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 447,
														"src": "6390:24:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$205_storage_ptr_$",
															"typeString": "function () pure returns (struct Initializable.InitializableStorage storage pointer)"
														}
													},
													"id": 311,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6390:26:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
														"typeString": "struct Initializable.InitializableStorage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6357:59:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 319,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 313,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 309,
															"src": "6431:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 314,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6433:13:1",
														"memberName": "_initializing",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 204,
														"src": "6431:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														},
														"id": 318,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 315,
																"name": "$",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 309,
																"src": "6450:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																	"typeString": "struct Initializable.InitializableStorage storage pointer"
																}
															},
															"id": 316,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6452:12:1",
															"memberName": "_initialized",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 201,
															"src": "6450:14:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">=",
														"rightExpression": {
															"id": 317,
															"name": "version",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 305,
															"src": "6468:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"src": "6450:25:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "6431:44:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 324,
												"nodeType": "IfStatement",
												"src": "6427:105:1",
												"trueBody": {
													"id": 323,
													"nodeType": "Block",
													"src": "6477:55:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 320,
																	"name": "InvalidInitialization",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 211,
																	"src": "6498:21:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 321,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6498:23:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 322,
															"nodeType": "RevertStatement",
															"src": "6491:30:1"
														}
													]
												}
											},
											{
												"expression": {
													"id": 329,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 325,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 309,
															"src": "6541:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 327,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "6543:12:1",
														"memberName": "_initialized",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 201,
														"src": "6541:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 328,
														"name": "version",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 305,
														"src": "6558:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"src": "6541:24:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"id": 330,
												"nodeType": "ExpressionStatement",
												"src": "6541:24:1"
											},
											{
												"expression": {
													"id": 335,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 331,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 309,
															"src": "6575:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 333,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "6577:13:1",
														"memberName": "_initializing",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 204,
														"src": "6575:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 334,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6593:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "6575:22:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 336,
												"nodeType": "ExpressionStatement",
												"src": "6575:22:1"
											},
											{
												"id": 337,
												"nodeType": "PlaceholderStatement",
												"src": "6607:1:1"
											},
											{
												"expression": {
													"id": 342,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 338,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 309,
															"src": "6618:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 340,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "6620:13:1",
														"memberName": "_initializing",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 204,
														"src": "6618:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 341,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6636:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "6618:23:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 343,
												"nodeType": "ExpressionStatement",
												"src": "6618:23:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 345,
															"name": "version",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 305,
															"src": "6668:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														],
														"id": 344,
														"name": "Initialized",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 219,
														"src": "6656:11:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint64_$returns$__$",
															"typeString": "function (uint64)"
														}
													},
													"id": 346,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6656:20:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 347,
												"nodeType": "EmitStatement",
												"src": "6651:25:1"
											}
										]
									},
									"documentation": {
										"id": 303,
										"nodeType": "StructuredDocumentation",
										"src": "5179:1068:1",
										"text": " @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\n contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\n used to initialize parent contracts.\n A reinitializer may be used after the original initialization step. This is essential to configure modules that\n are added through upgrades and that require initialization.\n When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\n cannot be nested. If one is invoked in the context of another, execution will revert.\n Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\n a contract, executing them in the right order is up to the developer or operator.\n WARNING: Setting the version to 2**64 - 1 will prevent any future reinitialization.\n Emits an {Initialized} event."
									},
									"id": 349,
									"name": "reinitializer",
									"nameLocation": "6261:13:1",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 306,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 305,
												"mutability": "mutable",
												"name": "version",
												"nameLocation": "6282:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 349,
												"src": "6275:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 304,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "6275:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6274:16:1"
									},
									"src": "6252:431:1",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 356,
										"nodeType": "Block",
										"src": "6921:48:1",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 352,
														"name": "_checkInitializing",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 370,
														"src": "6931:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 353,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6931:20:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 354,
												"nodeType": "ExpressionStatement",
												"src": "6931:20:1"
											},
											{
												"id": 355,
												"nodeType": "PlaceholderStatement",
												"src": "6961:1:1"
											}
										]
									},
									"documentation": {
										"id": 350,
										"nodeType": "StructuredDocumentation",
										"src": "6689:199:1",
										"text": " @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\n {initializer} and {reinitializer} modifiers, directly or indirectly."
									},
									"id": 357,
									"name": "onlyInitializing",
									"nameLocation": "6902:16:1",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 351,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6918:2:1"
									},
									"src": "6893:76:1",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 369,
										"nodeType": "Block",
										"src": "7136:89:1",
										"statements": [
											{
												"condition": {
													"id": 363,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "7150:18:1",
													"subExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 361,
															"name": "_isInitializing",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 438,
															"src": "7151:15:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
																"typeString": "function () view returns (bool)"
															}
														},
														"id": 362,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7151:17:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 368,
												"nodeType": "IfStatement",
												"src": "7146:73:1",
												"trueBody": {
													"id": 367,
													"nodeType": "Block",
													"src": "7170:49:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 364,
																	"name": "NotInitializing",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 214,
																	"src": "7191:15:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 365,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7191:17:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 366,
															"nodeType": "RevertStatement",
															"src": "7184:24:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 358,
										"nodeType": "StructuredDocumentation",
										"src": "6975:104:1",
										"text": " @dev Reverts if the contract is not in an initializing state. See {onlyInitializing}."
									},
									"id": 370,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkInitializing",
									"nameLocation": "7093:18:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 359,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7111:2:1"
									},
									"returnParameters": {
										"id": 360,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7136:0:1"
									},
									"scope": 448,
									"src": "7084:141:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 415,
										"nodeType": "Block",
										"src": "7760:373:1",
										"statements": [
											{
												"assignments": [
													376
												],
												"declarations": [
													{
														"constant": false,
														"id": 376,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "7855:1:1",
														"nodeType": "VariableDeclaration",
														"scope": 415,
														"src": "7826:30:1",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage"
														},
														"typeName": {
															"id": 375,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 374,
																"name": "InitializableStorage",
																"nameLocations": [
																	"7826:20:1"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 205,
																"src": "7826:20:1"
															},
															"referencedDeclaration": 205,
															"src": "7826:20:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 379,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 377,
														"name": "_getInitializableStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 447,
														"src": "7859:24:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$205_storage_ptr_$",
															"typeString": "function () pure returns (struct Initializable.InitializableStorage storage pointer)"
														}
													},
													"id": 378,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7859:26:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
														"typeString": "struct Initializable.InitializableStorage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7826:59:1"
											},
											{
												"condition": {
													"expression": {
														"id": 380,
														"name": "$",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 376,
														"src": "7900:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage storage pointer"
														}
													},
													"id": 381,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "7902:13:1",
													"memberName": "_initializing",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 204,
													"src": "7900:15:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 386,
												"nodeType": "IfStatement",
												"src": "7896:76:1",
												"trueBody": {
													"id": 385,
													"nodeType": "Block",
													"src": "7917:55:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 382,
																	"name": "InvalidInitialization",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 211,
																	"src": "7938:21:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 383,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7938:23:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 384,
															"nodeType": "RevertStatement",
															"src": "7931:30:1"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													},
													"id": 394,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 387,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 376,
															"src": "7985:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 388,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7987:12:1",
														"memberName": "_initialized",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 201,
														"src": "7985:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 391,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "8008:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint64_$",
																		"typeString": "type(uint64)"
																	},
																	"typeName": {
																		"id": 390,
																		"name": "uint64",
																		"nodeType": "ElementaryTypeName",
																		"src": "8008:6:1",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint64_$",
																		"typeString": "type(uint64)"
																	}
																],
																"id": 389,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "8003:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 392,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8003:12:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint64",
																"typeString": "type(uint64)"
															}
														},
														"id": 393,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "8016:3:1",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "8003:16:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"src": "7985:34:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 414,
												"nodeType": "IfStatement",
												"src": "7981:146:1",
												"trueBody": {
													"id": 413,
													"nodeType": "Block",
													"src": "8021:106:1",
													"statements": [
														{
															"expression": {
																"id": 403,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 395,
																		"name": "$",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 376,
																		"src": "8035:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																			"typeString": "struct Initializable.InitializableStorage storage pointer"
																		}
																	},
																	"id": 397,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "8037:12:1",
																	"memberName": "_initialized",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 201,
																	"src": "8035:14:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint64",
																		"typeString": "uint64"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"expression": {
																		"arguments": [
																			{
																				"id": 400,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "8057:6:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint64_$",
																					"typeString": "type(uint64)"
																				},
																				"typeName": {
																					"id": 399,
																					"name": "uint64",
																					"nodeType": "ElementaryTypeName",
																					"src": "8057:6:1",
																					"typeDescriptions": {}
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_type$_t_uint64_$",
																					"typeString": "type(uint64)"
																				}
																			],
																			"id": 398,
																			"name": "type",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967269,
																			"src": "8052:4:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 401,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8052:12:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_meta_type_t_uint64",
																			"typeString": "type(uint64)"
																		}
																	},
																	"id": 402,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "8065:3:1",
																	"memberName": "max",
																	"nodeType": "MemberAccess",
																	"src": "8052:16:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint64",
																		"typeString": "uint64"
																	}
																},
																"src": "8035:33:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint64",
																	"typeString": "uint64"
																}
															},
															"id": 404,
															"nodeType": "ExpressionStatement",
															"src": "8035:33:1"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 408,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "8104:6:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_uint64_$",
																						"typeString": "type(uint64)"
																					},
																					"typeName": {
																						"id": 407,
																						"name": "uint64",
																						"nodeType": "ElementaryTypeName",
																						"src": "8104:6:1",
																						"typeDescriptions": {}
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_type$_t_uint64_$",
																						"typeString": "type(uint64)"
																					}
																				],
																				"id": 406,
																				"name": "type",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967269,
																				"src": "8099:4:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																					"typeString": "function () pure"
																				}
																			},
																			"id": 409,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "8099:12:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_meta_type_t_uint64",
																				"typeString": "type(uint64)"
																			}
																		},
																		"id": 410,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "8112:3:1",
																		"memberName": "max",
																		"nodeType": "MemberAccess",
																		"src": "8099:16:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint64",
																			"typeString": "uint64"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint64",
																			"typeString": "uint64"
																		}
																	],
																	"id": 405,
																	"name": "Initialized",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 219,
																	"src": "8087:11:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_uint64_$returns$__$",
																		"typeString": "function (uint64)"
																	}
																},
																"id": 411,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8087:29:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 412,
															"nodeType": "EmitStatement",
															"src": "8082:34:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 371,
										"nodeType": "StructuredDocumentation",
										"src": "7231:475:1",
										"text": " @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\n Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\n to any version. It is recommended to use this to lock implementation contracts that are designed to be called\n through proxies.\n Emits an {Initialized} event the first time it is successfully executed."
									},
									"id": 416,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_disableInitializers",
									"nameLocation": "7720:20:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 372,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7740:2:1"
									},
									"returnParameters": {
										"id": 373,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7760:0:1"
									},
									"scope": 448,
									"src": "7711:422:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 426,
										"nodeType": "Block",
										"src": "8308:63:1",
										"statements": [
											{
												"expression": {
													"expression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 422,
															"name": "_getInitializableStorage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 447,
															"src": "8325:24:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$205_storage_ptr_$",
																"typeString": "function () pure returns (struct Initializable.InitializableStorage storage pointer)"
															}
														},
														"id": 423,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8325:26:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage storage pointer"
														}
													},
													"id": 424,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "8352:12:1",
													"memberName": "_initialized",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 201,
													"src": "8325:39:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"functionReturnParameters": 421,
												"id": 425,
												"nodeType": "Return",
												"src": "8318:46:1"
											}
										]
									},
									"documentation": {
										"id": 417,
										"nodeType": "StructuredDocumentation",
										"src": "8139:99:1",
										"text": " @dev Returns the highest version that has been initialized. See {reinitializer}."
									},
									"id": 427,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getInitializedVersion",
									"nameLocation": "8252:22:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 418,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8274:2:1"
									},
									"returnParameters": {
										"id": 421,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 420,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 427,
												"src": "8300:6:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 419,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "8300:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8299:8:1"
									},
									"scope": 448,
									"src": "8243:128:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 437,
										"nodeType": "Block",
										"src": "8543:64:1",
										"statements": [
											{
												"expression": {
													"expression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 433,
															"name": "_getInitializableStorage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 447,
															"src": "8560:24:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$205_storage_ptr_$",
																"typeString": "function () pure returns (struct Initializable.InitializableStorage storage pointer)"
															}
														},
														"id": 434,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8560:26:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage storage pointer"
														}
													},
													"id": 435,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "8587:13:1",
													"memberName": "_initializing",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 204,
													"src": "8560:40:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 432,
												"id": 436,
												"nodeType": "Return",
												"src": "8553:47:1"
											}
										]
									},
									"documentation": {
										"id": 428,
										"nodeType": "StructuredDocumentation",
										"src": "8377:105:1",
										"text": " @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}."
									},
									"id": 438,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_isInitializing",
									"nameLocation": "8496:15:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 429,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8511:2:1"
									},
									"returnParameters": {
										"id": 432,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 431,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 438,
												"src": "8537:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 430,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8537:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8536:6:1"
									},
									"scope": 448,
									"src": "8487:120:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 446,
										"nodeType": "Block",
										"src": "8827:80:1",
										"statements": [
											{
												"AST": {
													"nativeSrc": "8846:55:1",
													"nodeType": "YulBlock",
													"src": "8846:55:1",
													"statements": [
														{
															"nativeSrc": "8860:31:1",
															"nodeType": "YulAssignment",
															"src": "8860:31:1",
															"value": {
																"name": "INITIALIZABLE_STORAGE",
																"nativeSrc": "8870:21:1",
																"nodeType": "YulIdentifier",
																"src": "8870:21:1"
															},
															"variableNames": [
																{
																	"name": "$.slot",
																	"nativeSrc": "8860:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "8860:6:1"
																}
															]
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 443,
														"isOffset": false,
														"isSlot": true,
														"src": "8860:6:1",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 208,
														"isOffset": false,
														"isSlot": false,
														"src": "8870:21:1",
														"valueSize": 1
													}
												],
												"id": 445,
												"nodeType": "InlineAssembly",
												"src": "8837:64:1"
											}
										]
									},
									"documentation": {
										"id": 439,
										"nodeType": "StructuredDocumentation",
										"src": "8613:67:1",
										"text": " @dev Returns a pointer to the storage namespace."
									},
									"id": 447,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getInitializableStorage",
									"nameLocation": "8746:24:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 440,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8770:2:1"
									},
									"returnParameters": {
										"id": 444,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 443,
												"mutability": "mutable",
												"name": "$",
												"nameLocation": "8824:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 447,
												"src": "8795:30:1",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
													"typeString": "struct Initializable.InitializableStorage"
												},
												"typeName": {
													"id": 442,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 441,
														"name": "InitializableStorage",
														"nameLocations": [
															"8795:20:1"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 205,
														"src": "8795:20:1"
													},
													"referencedDeclaration": 205,
													"src": "8795:20:1",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
														"typeString": "struct Initializable.InitializableStorage"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8794:32:1"
									},
									"scope": 448,
									"src": "8737:170:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 449,
							"src": "2349:6560:1",
							"usedErrors": [
								211,
								214
							],
							"usedEvents": [
								219
							]
						}
					],
					"src": "113:8797:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
					"exportedSymbols": {
						"ContextUpgradeable": [
							494
						],
						"Initializable": [
							448
						]
					},
					"id": 495,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 450,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
							"file": "../proxy/utils/Initializable.sol",
							"id": 452,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 495,
							"sourceUnit": 449,
							"src": "126:63:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 451,
										"name": "Initializable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 448,
										"src": "134:13:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 454,
										"name": "Initializable",
										"nameLocations": [
											"728:13:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 448,
										"src": "728:13:2"
									},
									"id": 455,
									"nodeType": "InheritanceSpecifier",
									"src": "728:13:2"
								}
							],
							"canonicalName": "ContextUpgradeable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 453,
								"nodeType": "StructuredDocumentation",
								"src": "191:496:2",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 494,
							"linearizedBaseContracts": [
								494,
								448
							],
							"name": "ContextUpgradeable",
							"nameLocation": "706:18:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 460,
										"nodeType": "Block",
										"src": "800:7:2",
										"statements": []
									},
									"id": 461,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 458,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 457,
												"name": "onlyInitializing",
												"nameLocations": [
													"783:16:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 357,
												"src": "783:16:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "783:16:2"
										}
									],
									"name": "__Context_init",
									"nameLocation": "757:14:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 456,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "771:2:2"
									},
									"returnParameters": {
										"id": 459,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "800:0:2"
									},
									"scope": 494,
									"src": "748:59:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 466,
										"nodeType": "Block",
										"src": "875:7:2",
										"statements": []
									},
									"id": 467,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 464,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 463,
												"name": "onlyInitializing",
												"nameLocations": [
													"858:16:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 357,
												"src": "858:16:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "858:16:2"
										}
									],
									"name": "__Context_init_unchained",
									"nameLocation": "822:24:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 462,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "846:2:2"
									},
									"returnParameters": {
										"id": 465,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "875:0:2"
									},
									"scope": 494,
									"src": "813:69:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 475,
										"nodeType": "Block",
										"src": "949:34:2",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 472,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "966:3:2",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 473,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "970:6:2",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "966:10:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 471,
												"id": 474,
												"nodeType": "Return",
												"src": "959:17:2"
											}
										]
									},
									"id": 476,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "896:10:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 468,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "906:2:2"
									},
									"returnParameters": {
										"id": 471,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 470,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 476,
												"src": "940:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 469,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "940:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "939:9:2"
									},
									"scope": 494,
									"src": "887:96:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 484,
										"nodeType": "Block",
										"src": "1056:32:2",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 481,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "1073:3:2",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 482,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "1077:4:2",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "1073:8:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 480,
												"id": 483,
												"nodeType": "Return",
												"src": "1066:15:2"
											}
										]
									},
									"id": 485,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "998:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 477,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1006:2:2"
									},
									"returnParameters": {
										"id": 480,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 479,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 485,
												"src": "1040:14:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 478,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1040:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1039:16:2"
									},
									"scope": 494,
									"src": "989:99:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 492,
										"nodeType": "Block",
										"src": "1166:25:2",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 490,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1183:1:2",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 489,
												"id": 491,
												"nodeType": "Return",
												"src": "1176:8:2"
											}
										]
									},
									"id": 493,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "1103:20:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 486,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1123:2:2"
									},
									"returnParameters": {
										"id": 489,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 488,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 493,
												"src": "1157:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 487,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1157:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1156:9:2"
									},
									"scope": 494,
									"src": "1094:97:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 495,
							"src": "688:505:2",
							"usedErrors": [
								211,
								214
							],
							"usedEvents": [
								219
							]
						}
					],
					"src": "101:1093:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
					"exportedSymbols": {
						"IERC1155Errors": [
							631
						],
						"IERC20Errors": [
							536
						],
						"IERC721Errors": [
							584
						]
					},
					"id": 632,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 496,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "112:24:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 497,
								"nodeType": "StructuredDocumentation",
								"src": "138:141:3",
								"text": " @dev Standard ERC-20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens."
							},
							"fullyImplemented": true,
							"id": 536,
							"linearizedBaseContracts": [
								536
							],
							"name": "IERC20Errors",
							"nameLocation": "290:12:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 498,
										"nodeType": "StructuredDocumentation",
										"src": "309:309:3",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "e450d38c",
									"id": 506,
									"name": "ERC20InsufficientBalance",
									"nameLocation": "629:24:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 505,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 500,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "662:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 506,
												"src": "654:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 499,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "654:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 502,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "678:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 506,
												"src": "670:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 501,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "670:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 504,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "695:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 506,
												"src": "687:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 503,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "687:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "653:49:3"
									},
									"src": "623:80:3"
								},
								{
									"documentation": {
										"id": 507,
										"nodeType": "StructuredDocumentation",
										"src": "709:152:3",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "96c6fd1e",
									"id": 511,
									"name": "ERC20InvalidSender",
									"nameLocation": "872:18:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 510,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 509,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "899:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 511,
												"src": "891:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 508,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "891:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "890:16:3"
									},
									"src": "866:41:3"
								},
								{
									"documentation": {
										"id": 512,
										"nodeType": "StructuredDocumentation",
										"src": "913:159:3",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "ec442f05",
									"id": 516,
									"name": "ERC20InvalidReceiver",
									"nameLocation": "1083:20:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 515,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 514,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "1112:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 516,
												"src": "1104:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 513,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1104:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1103:18:3"
									},
									"src": "1077:45:3"
								},
								{
									"documentation": {
										"id": 517,
										"nodeType": "StructuredDocumentation",
										"src": "1128:345:3",
										"text": " @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "fb8f41b2",
									"id": 525,
									"name": "ERC20InsufficientAllowance",
									"nameLocation": "1484:26:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 524,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 519,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1519:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 525,
												"src": "1511:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 518,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1511:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 521,
												"mutability": "mutable",
												"name": "allowance",
												"nameLocation": "1536:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 525,
												"src": "1528:17:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 520,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1528:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 523,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "1555:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 525,
												"src": "1547:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 522,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1547:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1510:52:3"
									},
									"src": "1478:85:3"
								},
								{
									"documentation": {
										"id": 526,
										"nodeType": "StructuredDocumentation",
										"src": "1569:174:3",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "e602df05",
									"id": 530,
									"name": "ERC20InvalidApprover",
									"nameLocation": "1754:20:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 529,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 528,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "1783:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 530,
												"src": "1775:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 527,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1775:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1774:18:3"
									},
									"src": "1748:45:3"
								},
								{
									"documentation": {
										"id": 531,
										"nodeType": "StructuredDocumentation",
										"src": "1799:195:3",
										"text": " @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "94280d62",
									"id": 535,
									"name": "ERC20InvalidSpender",
									"nameLocation": "2005:19:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 534,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 533,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2033:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 535,
												"src": "2025:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 532,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2025:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2024:17:3"
									},
									"src": "1999:43:3"
								}
							],
							"scope": 632,
							"src": "280:1764:3",
							"usedErrors": [
								506,
								511,
								516,
								525,
								530,
								535
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 537,
								"nodeType": "StructuredDocumentation",
								"src": "2046:143:3",
								"text": " @dev Standard ERC-721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens."
							},
							"fullyImplemented": true,
							"id": 584,
							"linearizedBaseContracts": [
								584
							],
							"name": "IERC721Errors",
							"nameLocation": "2200:13:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 538,
										"nodeType": "StructuredDocumentation",
										"src": "2220:219:3",
										"text": " @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "89c62b64",
									"id": 542,
									"name": "ERC721InvalidOwner",
									"nameLocation": "2450:18:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 541,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 540,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2477:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 542,
												"src": "2469:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 539,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2469:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2468:15:3"
									},
									"src": "2444:40:3"
								},
								{
									"documentation": {
										"id": 543,
										"nodeType": "StructuredDocumentation",
										"src": "2490:132:3",
										"text": " @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "7e273289",
									"id": 547,
									"name": "ERC721NonexistentToken",
									"nameLocation": "2633:22:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 546,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 545,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2664:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 547,
												"src": "2656:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 544,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2656:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2655:17:3"
									},
									"src": "2627:46:3"
								},
								{
									"documentation": {
										"id": 548,
										"nodeType": "StructuredDocumentation",
										"src": "2679:289:3",
										"text": " @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "64283d7b",
									"id": 556,
									"name": "ERC721IncorrectOwner",
									"nameLocation": "2979:20:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 555,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 550,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3008:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 556,
												"src": "3000:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 549,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3000:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 552,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3024:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 556,
												"src": "3016:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 551,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3016:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 554,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3041:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 556,
												"src": "3033:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 553,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3033:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2999:48:3"
									},
									"src": "2973:75:3"
								},
								{
									"documentation": {
										"id": 557,
										"nodeType": "StructuredDocumentation",
										"src": "3054:152:3",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "73c6ac6e",
									"id": 561,
									"name": "ERC721InvalidSender",
									"nameLocation": "3217:19:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 560,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 559,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3245:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 561,
												"src": "3237:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 558,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3237:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3236:16:3"
									},
									"src": "3211:42:3"
								},
								{
									"documentation": {
										"id": 562,
										"nodeType": "StructuredDocumentation",
										"src": "3259:159:3",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "64a0ae92",
									"id": 566,
									"name": "ERC721InvalidReceiver",
									"nameLocation": "3429:21:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 565,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 564,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "3459:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 566,
												"src": "3451:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 563,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3451:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3450:18:3"
									},
									"src": "3423:46:3"
								},
								{
									"documentation": {
										"id": 567,
										"nodeType": "StructuredDocumentation",
										"src": "3475:247:3",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "177e802f",
									"id": 573,
									"name": "ERC721InsufficientApproval",
									"nameLocation": "3733:26:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 572,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 569,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3768:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 573,
												"src": "3760:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 568,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3760:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 571,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3786:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 573,
												"src": "3778:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 570,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3778:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3759:35:3"
									},
									"src": "3727:68:3"
								},
								{
									"documentation": {
										"id": 574,
										"nodeType": "StructuredDocumentation",
										"src": "3801:174:3",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "a9fbf51f",
									"id": 578,
									"name": "ERC721InvalidApprover",
									"nameLocation": "3986:21:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 577,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 576,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "4016:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 578,
												"src": "4008:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 575,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4008:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4007:18:3"
									},
									"src": "3980:46:3"
								},
								{
									"documentation": {
										"id": 579,
										"nodeType": "StructuredDocumentation",
										"src": "4032:197:3",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "5b08ba18",
									"id": 583,
									"name": "ERC721InvalidOperator",
									"nameLocation": "4240:21:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 582,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 581,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4270:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 583,
												"src": "4262:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 580,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4262:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4261:18:3"
									},
									"src": "4234:46:3"
								}
							],
							"scope": 632,
							"src": "2190:2092:3",
							"usedErrors": [
								542,
								547,
								556,
								561,
								566,
								573,
								578,
								583
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1155Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 585,
								"nodeType": "StructuredDocumentation",
								"src": "4284:145:3",
								"text": " @dev Standard ERC-1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens."
							},
							"fullyImplemented": true,
							"id": 631,
							"linearizedBaseContracts": [
								631
							],
							"name": "IERC1155Errors",
							"nameLocation": "4440:14:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 586,
										"nodeType": "StructuredDocumentation",
										"src": "4461:361:3",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "03dee4c5",
									"id": 596,
									"name": "ERC1155InsufficientBalance",
									"nameLocation": "4833:26:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 595,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 588,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "4868:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 596,
												"src": "4860:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 587,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4860:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 590,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "4884:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 596,
												"src": "4876:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 589,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4876:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 592,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "4901:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 596,
												"src": "4893:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 591,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4893:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 594,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4917:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 596,
												"src": "4909:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 593,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4909:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4859:66:3"
									},
									"src": "4827:99:3"
								},
								{
									"documentation": {
										"id": 597,
										"nodeType": "StructuredDocumentation",
										"src": "4932:152:3",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "01a83514",
									"id": 601,
									"name": "ERC1155InvalidSender",
									"nameLocation": "5095:20:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 600,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 599,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5124:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 601,
												"src": "5116:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 598,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5116:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5115:16:3"
									},
									"src": "5089:43:3"
								},
								{
									"documentation": {
										"id": 602,
										"nodeType": "StructuredDocumentation",
										"src": "5138:159:3",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "57f447ce",
									"id": 606,
									"name": "ERC1155InvalidReceiver",
									"nameLocation": "5308:22:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 605,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 604,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "5339:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 606,
												"src": "5331:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 603,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5331:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5330:18:3"
									},
									"src": "5302:47:3"
								},
								{
									"documentation": {
										"id": 607,
										"nodeType": "StructuredDocumentation",
										"src": "5355:256:3",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "e237d922",
									"id": 613,
									"name": "ERC1155MissingApprovalForAll",
									"nameLocation": "5622:28:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 612,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 609,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "5659:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 613,
												"src": "5651:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 608,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5651:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 611,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5677:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 613,
												"src": "5669:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 610,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5669:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5650:33:3"
									},
									"src": "5616:68:3"
								},
								{
									"documentation": {
										"id": 614,
										"nodeType": "StructuredDocumentation",
										"src": "5690:174:3",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "3e31884e",
									"id": 618,
									"name": "ERC1155InvalidApprover",
									"nameLocation": "5875:22:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 617,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 616,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "5906:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 618,
												"src": "5898:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 615,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5898:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5897:18:3"
									},
									"src": "5869:47:3"
								},
								{
									"documentation": {
										"id": 619,
										"nodeType": "StructuredDocumentation",
										"src": "5922:197:3",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "ced3e100",
									"id": 623,
									"name": "ERC1155InvalidOperator",
									"nameLocation": "6130:22:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 622,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 621,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "6161:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 623,
												"src": "6153:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 620,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6153:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6152:18:3"
									},
									"src": "6124:47:3"
								},
								{
									"documentation": {
										"id": 624,
										"nodeType": "StructuredDocumentation",
										"src": "6177:280:3",
										"text": " @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"
									},
									"errorSelector": "5b059991",
									"id": 630,
									"name": "ERC1155InvalidArrayLength",
									"nameLocation": "6468:25:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 629,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 626,
												"mutability": "mutable",
												"name": "idsLength",
												"nameLocation": "6502:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 630,
												"src": "6494:17:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 625,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6494:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 628,
												"mutability": "mutable",
												"name": "valuesLength",
												"nameLocation": "6521:12:3",
												"nodeType": "VariableDeclaration",
												"scope": 630,
												"src": "6513:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 627,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6513:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6493:41:3"
									},
									"src": "6462:73:3"
								}
							],
							"scope": 632,
							"src": "4430:2107:3",
							"usedErrors": [
								596,
								601,
								606,
								613,
								618,
								623,
								630
							],
							"usedEvents": []
						}
					],
					"src": "112:6426:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
					"exportedSymbols": {
						"Context": [
							1280
						],
						"ERC20": [
							1146
						],
						"IERC20": [
							1224
						],
						"IERC20Errors": [
							536
						],
						"IERC20Metadata": [
							1250
						]
					},
					"id": 1147,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 633,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "105:24:4"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 635,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1147,
							"sourceUnit": 1225,
							"src": "131:36:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 634,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1224,
										"src": "139:6:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
							"file": "./extensions/IERC20Metadata.sol",
							"id": 637,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1147,
							"sourceUnit": 1251,
							"src": "168:63:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 636,
										"name": "IERC20Metadata",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1250,
										"src": "176:14:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../../utils/Context.sol",
							"id": 639,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1147,
							"sourceUnit": 1281,
							"src": "232:48:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 638,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1280,
										"src": "240:7:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
							"file": "../../interfaces/draft-IERC6093.sol",
							"id": 641,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1147,
							"sourceUnit": 632,
							"src": "281:65:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 640,
										"name": "IERC20Errors",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 536,
										"src": "289:12:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 643,
										"name": "Context",
										"nameLocations": [
											"1133:7:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1280,
										"src": "1133:7:4"
									},
									"id": 644,
									"nodeType": "InheritanceSpecifier",
									"src": "1133:7:4"
								},
								{
									"baseName": {
										"id": 645,
										"name": "IERC20",
										"nameLocations": [
											"1142:6:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1224,
										"src": "1142:6:4"
									},
									"id": 646,
									"nodeType": "InheritanceSpecifier",
									"src": "1142:6:4"
								},
								{
									"baseName": {
										"id": 647,
										"name": "IERC20Metadata",
										"nameLocations": [
											"1150:14:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1250,
										"src": "1150:14:4"
									},
									"id": 648,
									"nodeType": "InheritanceSpecifier",
									"src": "1150:14:4"
								},
								{
									"baseName": {
										"id": 649,
										"name": "IERC20Errors",
										"nameLocations": [
											"1166:12:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 536,
										"src": "1166:12:4"
									},
									"id": 650,
									"nodeType": "InheritanceSpecifier",
									"src": "1166:12:4"
								}
							],
							"canonicalName": "ERC20",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 642,
								"nodeType": "StructuredDocumentation",
								"src": "348:757:4",
								"text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC-20\n applications."
							},
							"fullyImplemented": true,
							"id": 1146,
							"linearizedBaseContracts": [
								1146,
								536,
								1250,
								1224,
								1280
							],
							"name": "ERC20",
							"nameLocation": "1124:5:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 654,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "1229:9:4",
									"nodeType": "VariableDeclaration",
									"scope": 1146,
									"src": "1185:53:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 653,
										"keyName": "account",
										"keyNameLocation": "1201:7:4",
										"keyType": {
											"id": 651,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1193:7:4",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1185:35:4",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 652,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1212:7:4",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 660,
									"mutability": "mutable",
									"name": "_allowances",
									"nameLocation": "1317:11:4",
									"nodeType": "VariableDeclaration",
									"scope": 1146,
									"src": "1245:83:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 659,
										"keyName": "account",
										"keyNameLocation": "1261:7:4",
										"keyType": {
											"id": 655,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1253:7:4",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1245:63:4",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 658,
											"keyName": "spender",
											"keyNameLocation": "1288:7:4",
											"keyType": {
												"id": 656,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1280:7:4",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1272:35:4",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 657,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1299:7:4",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 662,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "1351:12:4",
									"nodeType": "VariableDeclaration",
									"scope": 1146,
									"src": "1335:28:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 661,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1335:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 664,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "1385:5:4",
									"nodeType": "VariableDeclaration",
									"scope": 1146,
									"src": "1370:20:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 663,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1370:6:4",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 666,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "1411:7:4",
									"nodeType": "VariableDeclaration",
									"scope": 1146,
									"src": "1396:22:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 665,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1396:6:4",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 682,
										"nodeType": "Block",
										"src": "1657:57:4",
										"statements": [
											{
												"expression": {
													"id": 676,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 674,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 664,
														"src": "1667:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 675,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 669,
														"src": "1675:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1667:13:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 677,
												"nodeType": "ExpressionStatement",
												"src": "1667:13:4"
											},
											{
												"expression": {
													"id": 680,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 678,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 666,
														"src": "1690:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 679,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 671,
														"src": "1700:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1690:17:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 681,
												"nodeType": "ExpressionStatement",
												"src": "1690:17:4"
											}
										]
									},
									"documentation": {
										"id": 667,
										"nodeType": "StructuredDocumentation",
										"src": "1425:171:4",
										"text": " @dev Sets the values for {name} and {symbol}.\n All two of these values are immutable: they can only be set once during\n construction."
									},
									"id": 683,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 672,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 669,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "1627:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 683,
												"src": "1613:19:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 668,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1613:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 671,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "1648:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 683,
												"src": "1634:21:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 670,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1634:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1612:44:4"
									},
									"returnParameters": {
										"id": 673,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1657:0:4"
									},
									"scope": 1146,
									"src": "1601:113:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1237
									],
									"body": {
										"id": 691,
										"nodeType": "Block",
										"src": "1839:29:4",
										"statements": [
											{
												"expression": {
													"id": 689,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 664,
													"src": "1856:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 688,
												"id": 690,
												"nodeType": "Return",
												"src": "1849:12:4"
											}
										]
									},
									"documentation": {
										"id": 684,
										"nodeType": "StructuredDocumentation",
										"src": "1720:54:4",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 692,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "1788:4:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 685,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1792:2:4"
									},
									"returnParameters": {
										"id": 688,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 687,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 692,
												"src": "1824:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 686,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1824:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1823:15:4"
									},
									"scope": 1146,
									"src": "1779:89:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1243
									],
									"body": {
										"id": 700,
										"nodeType": "Block",
										"src": "2043:31:4",
										"statements": [
											{
												"expression": {
													"id": 698,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 666,
													"src": "2060:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 697,
												"id": 699,
												"nodeType": "Return",
												"src": "2053:14:4"
											}
										]
									},
									"documentation": {
										"id": 693,
										"nodeType": "StructuredDocumentation",
										"src": "1874:102:4",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 701,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "1990:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 694,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1996:2:4"
									},
									"returnParameters": {
										"id": 697,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 696,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 701,
												"src": "2028:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 695,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2028:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2027:15:4"
									},
									"scope": 1146,
									"src": "1981:93:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1249
									],
									"body": {
										"id": 709,
										"nodeType": "Block",
										"src": "2763:26:4",
										"statements": [
											{
												"expression": {
													"hexValue": "3138",
													"id": 707,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2780:2:4",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"functionReturnParameters": 706,
												"id": 708,
												"nodeType": "Return",
												"src": "2773:9:4"
											}
										]
									},
									"documentation": {
										"id": 702,
										"nodeType": "StructuredDocumentation",
										"src": "2080:622:4",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 710,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "2716:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 703,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2724:2:4"
									},
									"returnParameters": {
										"id": 706,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 705,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 710,
												"src": "2756:5:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 704,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "2756:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2755:7:4"
									},
									"scope": 1146,
									"src": "2707:82:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1173
									],
									"body": {
										"id": 718,
										"nodeType": "Block",
										"src": "2910:36:4",
										"statements": [
											{
												"expression": {
													"id": 716,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 662,
													"src": "2927:12:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 715,
												"id": 717,
												"nodeType": "Return",
												"src": "2920:19:4"
											}
										]
									},
									"documentation": {
										"id": 711,
										"nodeType": "StructuredDocumentation",
										"src": "2795:49:4",
										"text": " @dev See {IERC20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 719,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "2858:11:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 712,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2869:2:4"
									},
									"returnParameters": {
										"id": 715,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 714,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 719,
												"src": "2901:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 713,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2901:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2900:9:4"
									},
									"scope": 1146,
									"src": "2849:97:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1181
									],
									"body": {
										"id": 731,
										"nodeType": "Block",
										"src": "3078:42:4",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 727,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 654,
														"src": "3095:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 729,
													"indexExpression": {
														"id": 728,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 722,
														"src": "3105:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3095:18:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 726,
												"id": 730,
												"nodeType": "Return",
												"src": "3088:25:4"
											}
										]
									},
									"documentation": {
										"id": 720,
										"nodeType": "StructuredDocumentation",
										"src": "2952:47:4",
										"text": " @dev See {IERC20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 732,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "3013:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 723,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 722,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3031:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 732,
												"src": "3023:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 721,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3023:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3022:17:4"
									},
									"returnParameters": {
										"id": 726,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 725,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 732,
												"src": "3069:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 724,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3069:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3068:9:4"
									},
									"scope": 1146,
									"src": "3004:116:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1191
									],
									"body": {
										"id": 755,
										"nodeType": "Block",
										"src": "3390:103:4",
										"statements": [
											{
												"assignments": [
													743
												],
												"declarations": [
													{
														"constant": false,
														"id": 743,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "3408:5:4",
														"nodeType": "VariableDeclaration",
														"scope": 755,
														"src": "3400:13:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 742,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3400:7:4",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 746,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 744,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1262,
														"src": "3416:10:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 745,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3416:12:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3400:28:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 748,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 743,
															"src": "3448:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 749,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 735,
															"src": "3455:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 750,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 737,
															"src": "3459:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 747,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 876,
														"src": "3438:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 751,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3438:27:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 752,
												"nodeType": "ExpressionStatement",
												"src": "3438:27:4"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 753,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3482:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 741,
												"id": 754,
												"nodeType": "Return",
												"src": "3475:11:4"
											}
										]
									},
									"documentation": {
										"id": 733,
										"nodeType": "StructuredDocumentation",
										"src": "3126:184:4",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `value`."
									},
									"functionSelector": "a9059cbb",
									"id": 756,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "3324:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 738,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 735,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3341:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 756,
												"src": "3333:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 734,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3333:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 737,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3353:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 756,
												"src": "3345:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 736,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3345:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3332:27:4"
									},
									"returnParameters": {
										"id": 741,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 740,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 756,
												"src": "3384:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 739,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3384:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3383:6:4"
									},
									"scope": 1146,
									"src": "3315:178:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1201
									],
									"body": {
										"id": 772,
										"nodeType": "Block",
										"src": "3640:51:4",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 766,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 660,
															"src": "3657:11:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 768,
														"indexExpression": {
															"id": 767,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 759,
															"src": "3669:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3657:18:4",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 770,
													"indexExpression": {
														"id": 769,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 761,
														"src": "3676:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3657:27:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 765,
												"id": 771,
												"nodeType": "Return",
												"src": "3650:34:4"
											}
										]
									},
									"documentation": {
										"id": 757,
										"nodeType": "StructuredDocumentation",
										"src": "3499:47:4",
										"text": " @dev See {IERC20-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 773,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "3560:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 762,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 759,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3578:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 773,
												"src": "3570:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 758,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3570:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 761,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3593:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 773,
												"src": "3585:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 760,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3585:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3569:32:4"
									},
									"returnParameters": {
										"id": 765,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 764,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 773,
												"src": "3631:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 763,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3631:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3630:9:4"
									},
									"scope": 1146,
									"src": "3551:140:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1211
									],
									"body": {
										"id": 796,
										"nodeType": "Block",
										"src": "4077:107:4",
										"statements": [
											{
												"assignments": [
													784
												],
												"declarations": [
													{
														"constant": false,
														"id": 784,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "4095:5:4",
														"nodeType": "VariableDeclaration",
														"scope": 796,
														"src": "4087:13:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 783,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4087:7:4",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 787,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 785,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1262,
														"src": "4103:10:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 786,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4103:12:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4087:28:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 789,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 784,
															"src": "4134:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 790,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 776,
															"src": "4141:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 791,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 778,
															"src": "4150:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 788,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1037,
															1097
														],
														"referencedDeclaration": 1037,
														"src": "4125:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 792,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4125:31:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 793,
												"nodeType": "ExpressionStatement",
												"src": "4125:31:4"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 794,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4173:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 782,
												"id": 795,
												"nodeType": "Return",
												"src": "4166:11:4"
											}
										]
									},
									"documentation": {
										"id": 774,
										"nodeType": "StructuredDocumentation",
										"src": "3697:296:4",
										"text": " @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 797,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "4007:7:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 779,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 776,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4023:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 797,
												"src": "4015:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 775,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4015:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 778,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4040:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 797,
												"src": "4032:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 777,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4032:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4014:32:4"
									},
									"returnParameters": {
										"id": 782,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 781,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 797,
												"src": "4071:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 780,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4071:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4070:6:4"
									},
									"scope": 1146,
									"src": "3998:186:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1223
									],
									"body": {
										"id": 828,
										"nodeType": "Block",
										"src": "4869:151:4",
										"statements": [
											{
												"assignments": [
													810
												],
												"declarations": [
													{
														"constant": false,
														"id": 810,
														"mutability": "mutable",
														"name": "spender",
														"nameLocation": "4887:7:4",
														"nodeType": "VariableDeclaration",
														"scope": 828,
														"src": "4879:15:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 809,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4879:7:4",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 813,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 811,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1262,
														"src": "4897:10:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 812,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4897:12:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4879:30:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 815,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 800,
															"src": "4935:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 816,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 810,
															"src": "4941:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 817,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 804,
															"src": "4950:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 814,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1145,
														"src": "4919:15:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 818,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4919:37:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 819,
												"nodeType": "ExpressionStatement",
												"src": "4919:37:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 821,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 800,
															"src": "4976:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 822,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 802,
															"src": "4982:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 823,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 804,
															"src": "4986:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 820,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 876,
														"src": "4966:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 824,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4966:26:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 825,
												"nodeType": "ExpressionStatement",
												"src": "4966:26:4"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 826,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5009:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 808,
												"id": 827,
												"nodeType": "Return",
												"src": "5002:11:4"
											}
										]
									},
									"documentation": {
										"id": 798,
										"nodeType": "StructuredDocumentation",
										"src": "4190:581:4",
										"text": " @dev See {IERC20-transferFrom}.\n Skips emitting an {Approval} event indicating an allowance update. This is not\n required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `value`.\n - the caller must have allowance for ``from``'s tokens of at least\n `value`."
									},
									"functionSelector": "23b872dd",
									"id": 829,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "4785:12:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 805,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 800,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "4806:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 829,
												"src": "4798:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 799,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4798:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 802,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4820:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 829,
												"src": "4812:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 801,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4812:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 804,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4832:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 829,
												"src": "4824:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 803,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4824:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4797:41:4"
									},
									"returnParameters": {
										"id": 808,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 807,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 829,
												"src": "4863:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 806,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4863:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4862:6:4"
									},
									"scope": 1146,
									"src": "4776:244:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 875,
										"nodeType": "Block",
										"src": "5462:231:4",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 844,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 839,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 832,
														"src": "5476:4:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 842,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5492:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 841,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5484:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 840,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5484:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 843,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5484:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5476:18:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 853,
												"nodeType": "IfStatement",
												"src": "5472:86:4",
												"trueBody": {
													"id": 852,
													"nodeType": "Block",
													"src": "5496:62:4",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 848,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5544:1:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 847,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5536:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 846,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5536:7:4",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 849,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5536:10:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 845,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 511,
																	"src": "5517:18:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 850,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5517:30:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 851,
															"nodeType": "RevertStatement",
															"src": "5510:37:4"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 859,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 854,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 834,
														"src": "5571:2:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 857,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5585:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 856,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5577:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 855,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5577:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 858,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5577:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5571:16:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 868,
												"nodeType": "IfStatement",
												"src": "5567:86:4",
												"trueBody": {
													"id": 867,
													"nodeType": "Block",
													"src": "5589:64:4",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 863,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5639:1:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 862,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5631:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 861,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5631:7:4",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 864,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5631:10:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 860,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 516,
																	"src": "5610:20:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 865,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5610:32:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 866,
															"nodeType": "RevertStatement",
															"src": "5603:39:4"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 870,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 832,
															"src": "5670:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 871,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 834,
															"src": "5676:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 872,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 836,
															"src": "5680:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 869,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 953,
														"src": "5662:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 873,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5662:24:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 874,
												"nodeType": "ExpressionStatement",
												"src": "5662:24:4"
											}
										]
									},
									"documentation": {
										"id": 830,
										"nodeType": "StructuredDocumentation",
										"src": "5026:362:4",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 876,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "5402:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 837,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 832,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5420:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "5412:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 831,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5412:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 834,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5434:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "5426:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 833,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5426:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 836,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5446:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "5438:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 835,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5438:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5411:41:4"
									},
									"returnParameters": {
										"id": 838,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5462:0:4"
									},
									"scope": 1146,
									"src": "5393:300:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 952,
										"nodeType": "Block",
										"src": "6083:1032:4",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 891,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 886,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 879,
														"src": "6097:4:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 889,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6113:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 888,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6105:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 887,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6105:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 890,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6105:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6097:18:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 923,
													"nodeType": "Block",
													"src": "6271:362:4",
													"statements": [
														{
															"assignments": [
																898
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 898,
																	"mutability": "mutable",
																	"name": "fromBalance",
																	"nameLocation": "6293:11:4",
																	"nodeType": "VariableDeclaration",
																	"scope": 923,
																	"src": "6285:19:4",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 897,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "6285:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 902,
															"initialValue": {
																"baseExpression": {
																	"id": 899,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 654,
																	"src": "6307:9:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 901,
																"indexExpression": {
																	"id": 900,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 879,
																	"src": "6317:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6307:15:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "6285:37:4"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 905,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 903,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 898,
																	"src": "6340:11:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 904,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 883,
																	"src": "6354:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6340:19:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 913,
															"nodeType": "IfStatement",
															"src": "6336:115:4",
															"trueBody": {
																"id": 912,
																"nodeType": "Block",
																"src": "6361:90:4",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 907,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 879,
																					"src": "6411:4:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 908,
																					"name": "fromBalance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 898,
																					"src": "6417:11:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 909,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 883,
																					"src": "6430:5:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 906,
																				"name": "ERC20InsufficientBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 506,
																				"src": "6386:24:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256,uint256) pure returns (error)"
																				}
																			},
																			"id": 910,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6386:50:4",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 911,
																		"nodeType": "RevertStatement",
																		"src": "6379:57:4"
																	}
																]
															}
														},
														{
															"id": 922,
															"nodeType": "UncheckedBlock",
															"src": "6464:159:4",
															"statements": [
																{
																	"expression": {
																		"id": 920,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 914,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 654,
																				"src": "6571:9:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 916,
																			"indexExpression": {
																				"id": 915,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 879,
																				"src": "6581:4:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "6571:15:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 919,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 917,
																				"name": "fromBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 898,
																				"src": "6589:11:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 918,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 883,
																				"src": "6603:5:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "6589:19:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6571:37:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 921,
																	"nodeType": "ExpressionStatement",
																	"src": "6571:37:4"
																}
															]
														}
													]
												},
												"id": 924,
												"nodeType": "IfStatement",
												"src": "6093:540:4",
												"trueBody": {
													"id": 896,
													"nodeType": "Block",
													"src": "6117:148:4",
													"statements": [
														{
															"expression": {
																"id": 894,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 892,
																	"name": "_totalSupply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 662,
																	"src": "6233:12:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 893,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 883,
																	"src": "6249:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6233:21:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 895,
															"nodeType": "ExpressionStatement",
															"src": "6233:21:4"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 930,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 925,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 881,
														"src": "6647:2:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 928,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6661:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 927,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6653:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 926,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6653:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 929,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6653:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6647:16:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 944,
													"nodeType": "Block",
													"src": "6862:206:4",
													"statements": [
														{
															"id": 943,
															"nodeType": "UncheckedBlock",
															"src": "6876:182:4",
															"statements": [
																{
																	"expression": {
																		"id": 941,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 937,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 654,
																				"src": "7021:9:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 939,
																			"indexExpression": {
																				"id": 938,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 881,
																				"src": "7031:2:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "7021:13:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"id": 940,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 883,
																			"src": "7038:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7021:22:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 942,
																	"nodeType": "ExpressionStatement",
																	"src": "7021:22:4"
																}
															]
														}
													]
												},
												"id": 945,
												"nodeType": "IfStatement",
												"src": "6643:425:4",
												"trueBody": {
													"id": 936,
													"nodeType": "Block",
													"src": "6665:191:4",
													"statements": [
														{
															"id": 935,
															"nodeType": "UncheckedBlock",
															"src": "6679:167:4",
															"statements": [
																{
																	"expression": {
																		"id": 933,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 931,
																			"name": "_totalSupply",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 662,
																			"src": "6810:12:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "-=",
																		"rightHandSide": {
																			"id": 932,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 883,
																			"src": "6826:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6810:21:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 934,
																	"nodeType": "ExpressionStatement",
																	"src": "6810:21:4"
																}
															]
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 947,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 879,
															"src": "7092:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 948,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 881,
															"src": "7098:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 949,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 883,
															"src": "7102:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 946,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1158,
														"src": "7083:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 950,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7083:25:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 951,
												"nodeType": "EmitStatement",
												"src": "7078:30:4"
											}
										]
									},
									"documentation": {
										"id": 877,
										"nodeType": "StructuredDocumentation",
										"src": "5699:304:4",
										"text": " @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n this function.\n Emits a {Transfer} event."
									},
									"id": 953,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "6017:7:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 884,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 879,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6033:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 953,
												"src": "6025:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 878,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6025:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 881,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6047:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 953,
												"src": "6039:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 880,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6039:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 883,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6059:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 953,
												"src": "6051:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 882,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6051:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6024:41:4"
									},
									"returnParameters": {
										"id": 885,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6083:0:4"
									},
									"scope": 1146,
									"src": "6008:1107:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 985,
										"nodeType": "Block",
										"src": "7514:152:4",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 966,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 961,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 956,
														"src": "7528:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 964,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7547:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 963,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "7539:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 962,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "7539:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 965,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7539:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7528:21:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 975,
												"nodeType": "IfStatement",
												"src": "7524:91:4",
												"trueBody": {
													"id": 974,
													"nodeType": "Block",
													"src": "7551:64:4",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 970,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "7601:1:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 969,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "7593:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 968,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "7593:7:4",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 971,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7593:10:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 967,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 516,
																	"src": "7572:20:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 972,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7572:32:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 973,
															"nodeType": "RevertStatement",
															"src": "7565:39:4"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 979,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7640:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 978,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7632:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 977,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "7632:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 980,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7632:10:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 981,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 956,
															"src": "7644:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 982,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 958,
															"src": "7653:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 976,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 953,
														"src": "7624:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 983,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7624:35:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 984,
												"nodeType": "ExpressionStatement",
												"src": "7624:35:4"
											}
										]
									},
									"documentation": {
										"id": 954,
										"nodeType": "StructuredDocumentation",
										"src": "7121:332:4",
										"text": " @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 986,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "7467:5:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 959,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 956,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7481:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 986,
												"src": "7473:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 955,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7473:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 958,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7498:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 986,
												"src": "7490:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 957,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7490:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7472:32:4"
									},
									"returnParameters": {
										"id": 960,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7514:0:4"
									},
									"scope": 1146,
									"src": "7458:208:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1018,
										"nodeType": "Block",
										"src": "8040:150:4",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 999,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 994,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 989,
														"src": "8054:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 997,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8073:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 996,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "8065:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 995,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "8065:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 998,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8065:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "8054:21:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1008,
												"nodeType": "IfStatement",
												"src": "8050:89:4",
												"trueBody": {
													"id": 1007,
													"nodeType": "Block",
													"src": "8077:62:4",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1003,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "8125:1:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1002,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "8117:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1001,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "8117:7:4",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1004,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8117:10:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1000,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 511,
																	"src": "8098:18:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 1005,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8098:30:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1006,
															"nodeType": "RevertStatement",
															"src": "8091:37:4"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1010,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 989,
															"src": "8156:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1013,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8173:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1012,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8165:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1011,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8165:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 1014,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8165:10:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1015,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 991,
															"src": "8177:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1009,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 953,
														"src": "8148:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1016,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8148:35:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1017,
												"nodeType": "ExpressionStatement",
												"src": "8148:35:4"
											}
										]
									},
									"documentation": {
										"id": 987,
										"nodeType": "StructuredDocumentation",
										"src": "7672:307:4",
										"text": " @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"
									},
									"id": 1019,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "7993:5:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 992,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 989,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "8007:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1019,
												"src": "7999:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 988,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7999:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 991,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8024:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1019,
												"src": "8016:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 990,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8016:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7998:32:4"
									},
									"returnParameters": {
										"id": 993,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8040:0:4"
									},
									"scope": 1146,
									"src": "7984:206:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1036,
										"nodeType": "Block",
										"src": "8800:54:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1030,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1022,
															"src": "8819:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1031,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1024,
															"src": "8826:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1032,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1026,
															"src": "8835:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "74727565",
															"id": 1033,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8842:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1029,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1037,
															1097
														],
														"referencedDeclaration": 1097,
														"src": "8810:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
															"typeString": "function (address,address,uint256,bool)"
														}
													},
													"id": 1034,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8810:37:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1035,
												"nodeType": "ExpressionStatement",
												"src": "8810:37:4"
											}
										]
									},
									"documentation": {
										"id": 1020,
										"nodeType": "StructuredDocumentation",
										"src": "8196:525:4",
										"text": " @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."
									},
									"id": 1037,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "8735:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1027,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1022,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "8752:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1037,
												"src": "8744:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1021,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8744:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1024,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "8767:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1037,
												"src": "8759:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1023,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8759:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1026,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8784:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1037,
												"src": "8776:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1025,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8776:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8743:47:4"
									},
									"returnParameters": {
										"id": 1028,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8800:0:4"
									},
									"scope": 1146,
									"src": "8726:128:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1096,
										"nodeType": "Block",
										"src": "9799:334:4",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1054,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1049,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1040,
														"src": "9813:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1052,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9830:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1051,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9822:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1050,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9822:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 1053,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9822:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9813:19:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1063,
												"nodeType": "IfStatement",
												"src": "9809:89:4",
												"trueBody": {
													"id": 1062,
													"nodeType": "Block",
													"src": "9834:64:4",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1058,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9884:1:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1057,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9876:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1056,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9876:7:4",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1059,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9876:10:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1055,
																	"name": "ERC20InvalidApprover",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 530,
																	"src": "9855:20:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 1060,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9855:32:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1061,
															"nodeType": "RevertStatement",
															"src": "9848:39:4"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1069,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1064,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1042,
														"src": "9911:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1067,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9930:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1066,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9922:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1065,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9922:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 1068,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9922:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9911:21:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1078,
												"nodeType": "IfStatement",
												"src": "9907:90:4",
												"trueBody": {
													"id": 1077,
													"nodeType": "Block",
													"src": "9934:63:4",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1073,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9983:1:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1072,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9975:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1071,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9975:7:4",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1074,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9975:10:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1070,
																	"name": "ERC20InvalidSpender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 535,
																	"src": "9955:19:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 1075,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9955:31:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1076,
															"nodeType": "RevertStatement",
															"src": "9948:38:4"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1085,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 1079,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 660,
																"src": "10006:11:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 1082,
															"indexExpression": {
																"id": 1080,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1040,
																"src": "10018:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "10006:18:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1083,
														"indexExpression": {
															"id": 1081,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1042,
															"src": "10025:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "10006:27:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1084,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1044,
														"src": "10036:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10006:35:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1086,
												"nodeType": "ExpressionStatement",
												"src": "10006:35:4"
											},
											{
												"condition": {
													"id": 1087,
													"name": "emitEvent",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1046,
													"src": "10055:9:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1095,
												"nodeType": "IfStatement",
												"src": "10051:76:4",
												"trueBody": {
													"id": 1094,
													"nodeType": "Block",
													"src": "10066:61:4",
													"statements": [
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 1089,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1040,
																		"src": "10094:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1090,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1042,
																		"src": "10101:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1091,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1044,
																		"src": "10110:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1088,
																	"name": "Approval",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1167,
																	"src": "10085:8:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 1092,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10085:31:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1093,
															"nodeType": "EmitStatement",
															"src": "10080:36:4"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1038,
										"nodeType": "StructuredDocumentation",
										"src": "8860:836:4",
										"text": " @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n `Approval` event during `transferFrom` operations.\n Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n true using the following override:\n ```solidity\n function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     super._approve(owner, spender, value, true);\n }\n ```\n Requirements are the same as {_approve}."
									},
									"id": 1097,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "9710:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1047,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1040,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "9727:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1097,
												"src": "9719:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1039,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9719:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1042,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "9742:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1097,
												"src": "9734:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1041,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9734:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1044,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "9759:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1097,
												"src": "9751:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1043,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9751:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1046,
												"mutability": "mutable",
												"name": "emitEvent",
												"nameLocation": "9771:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 1097,
												"src": "9766:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1045,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "9766:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9718:63:4"
									},
									"returnParameters": {
										"id": 1048,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9799:0:4"
									},
									"scope": 1146,
									"src": "9701:432:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1144,
										"nodeType": "Block",
										"src": "10504:388:4",
										"statements": [
											{
												"assignments": [
													1108
												],
												"declarations": [
													{
														"constant": false,
														"id": 1108,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "10522:16:4",
														"nodeType": "VariableDeclaration",
														"scope": 1144,
														"src": "10514:24:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1107,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10514:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1113,
												"initialValue": {
													"arguments": [
														{
															"id": 1110,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1100,
															"src": "10551:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1111,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1102,
															"src": "10558:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1109,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 773,
														"src": "10541:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 1112,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10541:25:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10514:52:4"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1120,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1114,
														"name": "currentAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1108,
														"src": "10580:16:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1117,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10605:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 1116,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "10605:7:4",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	}
																],
																"id": 1115,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "10600:4:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 1118,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10600:13:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint256",
																"typeString": "type(uint256)"
															}
														},
														"id": 1119,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "10614:3:4",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "10600:17:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10580:37:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1143,
												"nodeType": "IfStatement",
												"src": "10576:310:4",
												"trueBody": {
													"id": 1142,
													"nodeType": "Block",
													"src": "10619:267:4",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1123,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1121,
																	"name": "currentAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1108,
																	"src": "10637:16:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 1122,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1104,
																	"src": "10656:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10637:24:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1131,
															"nodeType": "IfStatement",
															"src": "10633:130:4",
															"trueBody": {
																"id": 1130,
																"nodeType": "Block",
																"src": "10663:100:4",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 1125,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1102,
																					"src": "10715:7:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 1126,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1108,
																					"src": "10724:16:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 1127,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1104,
																					"src": "10742:5:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 1124,
																				"name": "ERC20InsufficientAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 525,
																				"src": "10688:26:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256,uint256) pure returns (error)"
																				}
																			},
																			"id": 1128,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "10688:60:4",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 1129,
																		"nodeType": "RevertStatement",
																		"src": "10681:67:4"
																	}
																]
															}
														},
														{
															"id": 1141,
															"nodeType": "UncheckedBlock",
															"src": "10776:100:4",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 1133,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1100,
																				"src": "10813:5:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 1134,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1102,
																				"src": "10820:7:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1137,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1135,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1108,
																					"src": "10829:16:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 1136,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1104,
																					"src": "10848:5:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10829:24:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"hexValue": "66616c7365",
																				"id": 1138,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "bool",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10855:5:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"value": "false"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			],
																			"id": 1132,
																			"name": "_approve",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [
																				1037,
																				1097
																			],
																			"referencedDeclaration": 1097,
																			"src": "10804:8:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
																				"typeString": "function (address,address,uint256,bool)"
																			}
																		},
																		"id": 1139,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10804:57:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 1140,
																	"nodeType": "ExpressionStatement",
																	"src": "10804:57:4"
																}
															]
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1098,
										"nodeType": "StructuredDocumentation",
										"src": "10139:271:4",
										"text": " @dev Updates `owner` s allowance for `spender` based on spent `value`.\n Does not update the allowance value in case of infinite allowance.\n Revert if not enough allowance is available.\n Does not emit an {Approval} event."
									},
									"id": 1145,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_spendAllowance",
									"nameLocation": "10424:15:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1105,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1100,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "10448:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1145,
												"src": "10440:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1099,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10440:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1102,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "10463:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1145,
												"src": "10455:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1101,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10455:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1104,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10480:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1145,
												"src": "10472:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1103,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10472:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10439:47:4"
									},
									"returnParameters": {
										"id": 1106,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10504:0:4"
									},
									"scope": 1146,
									"src": "10415:477:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1147,
							"src": "1106:9788:4",
							"usedErrors": [
								506,
								511,
								516,
								525,
								530,
								535
							],
							"usedEvents": [
								1158,
								1167
							]
						}
					],
					"src": "105:10790:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							1224
						]
					},
					"id": 1225,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1148,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:5"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1149,
								"nodeType": "StructuredDocumentation",
								"src": "132:71:5",
								"text": " @dev Interface of the ERC-20 standard as defined in the ERC."
							},
							"fullyImplemented": false,
							"id": 1224,
							"linearizedBaseContracts": [
								1224
							],
							"name": "IERC20",
							"nameLocation": "214:6:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 1150,
										"nodeType": "StructuredDocumentation",
										"src": "227:158:5",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 1158,
									"name": "Transfer",
									"nameLocation": "396:8:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1157,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1152,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "421:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1158,
												"src": "405:20:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1151,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "405:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1154,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "443:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 1158,
												"src": "427:18:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1153,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "427:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1156,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "455:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1158,
												"src": "447:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1155,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "447:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "404:57:5"
									},
									"src": "390:72:5"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1159,
										"nodeType": "StructuredDocumentation",
										"src": "468:148:5",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 1167,
									"name": "Approval",
									"nameLocation": "627:8:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1166,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1161,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "652:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1167,
												"src": "636:21:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1160,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "636:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1163,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "675:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1167,
												"src": "659:23:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1162,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "659:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1165,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "692:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1167,
												"src": "684:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1164,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "684:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "635:63:5"
									},
									"src": "621:78:5"
								},
								{
									"documentation": {
										"id": 1168,
										"nodeType": "StructuredDocumentation",
										"src": "705:65:5",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 1173,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "784:11:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1169,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "795:2:5"
									},
									"returnParameters": {
										"id": 1172,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1171,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1173,
												"src": "821:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1170,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "821:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "820:9:5"
									},
									"scope": 1224,
									"src": "775:55:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1174,
										"nodeType": "StructuredDocumentation",
										"src": "836:71:5",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 1181,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "921:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1177,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1176,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "939:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1181,
												"src": "931:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1175,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:5"
									},
									"returnParameters": {
										"id": 1180,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1179,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1181,
												"src": "971:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1178,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:5"
									},
									"scope": 1224,
									"src": "912:68:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1182,
										"nodeType": "StructuredDocumentation",
										"src": "986:213:5",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 1191,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1213:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1187,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1184,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1230:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 1191,
												"src": "1222:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1183,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1222:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1186,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1242:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1191,
												"src": "1234:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1185,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1234:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1221:27:5"
									},
									"returnParameters": {
										"id": 1190,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1189,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1191,
												"src": "1267:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1188,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1267:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1266:6:5"
									},
									"scope": 1224,
									"src": "1204:69:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1192,
										"nodeType": "StructuredDocumentation",
										"src": "1279:264:5",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 1201,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1557:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1197,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1194,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1575:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1201,
												"src": "1567:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1193,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1567:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1196,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1590:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1201,
												"src": "1582:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1195,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1582:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1566:32:5"
									},
									"returnParameters": {
										"id": 1200,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1199,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1201,
												"src": "1622:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1198,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1622:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1621:9:5"
									},
									"scope": 1224,
									"src": "1548:83:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1202,
										"nodeType": "StructuredDocumentation",
										"src": "1637:667:5",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 1211,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2318:7:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1207,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1204,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2334:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1211,
												"src": "2326:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1203,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2326:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1206,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2351:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1211,
												"src": "2343:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1205,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2343:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2325:32:5"
									},
									"returnParameters": {
										"id": 1210,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1209,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1211,
												"src": "2376:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1208,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2376:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2375:6:5"
									},
									"scope": 1224,
									"src": "2309:73:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1212,
										"nodeType": "StructuredDocumentation",
										"src": "2388:297:5",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 1223,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2699:12:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1219,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1214,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2720:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1223,
												"src": "2712:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1213,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2712:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1216,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2734:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 1223,
												"src": "2726:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1215,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2726:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1218,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2746:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1223,
												"src": "2738:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1217,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2738:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2711:41:5"
									},
									"returnParameters": {
										"id": 1222,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1221,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1223,
												"src": "2771:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1220,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2771:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2770:6:5"
									},
									"scope": 1224,
									"src": "2690:87:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1225,
							"src": "204:2575:5",
							"usedErrors": [],
							"usedEvents": [
								1158,
								1167
							]
						}
					],
					"src": "106:2674:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
					"exportedSymbols": {
						"IERC20": [
							1224
						],
						"IERC20Metadata": [
							1250
						]
					},
					"id": 1251,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1226,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "125:24:6"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 1228,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1251,
							"sourceUnit": 1225,
							"src": "151:37:6",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1227,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1224,
										"src": "159:6:6",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1230,
										"name": "IERC20",
										"nameLocations": [
											"306:6:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1224,
										"src": "306:6:6"
									},
									"id": 1231,
									"nodeType": "InheritanceSpecifier",
									"src": "306:6:6"
								}
							],
							"canonicalName": "IERC20Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1229,
								"nodeType": "StructuredDocumentation",
								"src": "190:87:6",
								"text": " @dev Interface for the optional metadata functions from the ERC-20 standard."
							},
							"fullyImplemented": false,
							"id": 1250,
							"linearizedBaseContracts": [
								1250,
								1224
							],
							"name": "IERC20Metadata",
							"nameLocation": "288:14:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1232,
										"nodeType": "StructuredDocumentation",
										"src": "319:54:6",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 1237,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "387:4:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1233,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "391:2:6"
									},
									"returnParameters": {
										"id": 1236,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1235,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1237,
												"src": "417:13:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1234,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "417:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "416:15:6"
									},
									"scope": 1250,
									"src": "378:54:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1238,
										"nodeType": "StructuredDocumentation",
										"src": "438:56:6",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 1243,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "508:6:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1239,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "514:2:6"
									},
									"returnParameters": {
										"id": 1242,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1241,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1243,
												"src": "540:13:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1240,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "540:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "539:15:6"
									},
									"scope": 1250,
									"src": "499:56:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1244,
										"nodeType": "StructuredDocumentation",
										"src": "561:65:6",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 1249,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "640:8:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1245,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "648:2:6"
									},
									"returnParameters": {
										"id": 1248,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1247,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1249,
												"src": "674:5:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1246,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "674:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "673:7:6"
									},
									"scope": 1250,
									"src": "631:50:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1251,
							"src": "278:405:6",
							"usedErrors": [],
							"usedEvents": [
								1158,
								1167
							]
						}
					],
					"src": "125:559:6"
				},
				"id": 6
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							1280
						]
					},
					"id": 1281,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1252,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:7"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1253,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:7",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 1280,
							"linearizedBaseContracts": [
								1280
							],
							"name": "Context",
							"nameLocation": "642:7:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1261,
										"nodeType": "Block",
										"src": "718:34:7",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1258,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:7",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1259,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:7",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:7",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1257,
												"id": 1260,
												"nodeType": "Return",
												"src": "728:17:7"
											}
										]
									},
									"id": 1262,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1254,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:7"
									},
									"returnParameters": {
										"id": 1257,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1256,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1262,
												"src": "709:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1255,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:7"
									},
									"scope": 1280,
									"src": "656:96:7",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1270,
										"nodeType": "Block",
										"src": "825:32:7",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1267,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:7",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1268,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:7",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 1266,
												"id": 1269,
												"nodeType": "Return",
												"src": "835:15:7"
											}
										]
									},
									"id": 1271,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1263,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:7"
									},
									"returnParameters": {
										"id": 1266,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1265,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1271,
												"src": "809:14:7",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1264,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:7"
									},
									"scope": 1280,
									"src": "758:99:7",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1278,
										"nodeType": "Block",
										"src": "935:25:7",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 1276,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:7",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 1275,
												"id": 1277,
												"nodeType": "Return",
												"src": "945:8:7"
											}
										]
									},
									"id": 1279,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1272,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:7"
									},
									"returnParameters": {
										"id": 1275,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1274,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1279,
												"src": "926:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1273,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:7"
									},
									"scope": 1280,
									"src": "863:97:7",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1281,
							"src": "624:338:7",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:7"
				},
				"id": 7
			},
			"contracts/RewardToken.sol": {
				"ast": {
					"absolutePath": "contracts/RewardToken.sol",
					"exportedSymbols": {
						"Context": [
							1280
						],
						"ERC20": [
							1146
						],
						"IERC20": [
							1224
						],
						"IERC20Errors": [
							536
						],
						"IERC20Metadata": [
							1250
						],
						"RewardToken": [
							1306
						]
					},
					"id": 1307,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1282,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "33:24:8"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"id": 1283,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1307,
							"sourceUnit": 1147,
							"src": "59:55:8",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1284,
										"name": "ERC20",
										"nameLocations": [
											"142:5:8"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1146,
										"src": "142:5:8"
									},
									"id": 1285,
									"nodeType": "InheritanceSpecifier",
									"src": "142:5:8"
								}
							],
							"canonicalName": "RewardToken",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1306,
							"linearizedBaseContracts": [
								1306,
								1146,
								536,
								1250,
								1224,
								1280
							],
							"name": "RewardToken",
							"nameLocation": "127:11:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1292,
										"nodeType": "Block",
										"src": "194:2:8",
										"statements": []
									},
									"id": 1293,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"hexValue": "526577617264546f6b656e",
													"id": 1288,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "174:13:8",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_2a776aa54923a68806e6d50a40a28332ccac2b7062a6ee74697d69bf81833639",
														"typeString": "literal_string \"RewardToken\""
													},
													"value": "RewardToken"
												},
												{
													"hexValue": "525744",
													"id": 1289,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "188:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_472b34ad5599e04104fb23c4104edd03ea87fd21961b319f7bb0fbee818f9d06",
														"typeString": "literal_string \"RWD\""
													},
													"value": "RWD"
												}
											],
											"id": 1290,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 1287,
												"name": "ERC20",
												"nameLocations": [
													"168:5:8"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1146,
												"src": "168:5:8"
											},
											"nodeType": "ModifierInvocation",
											"src": "168:26:8"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1286,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "165:2:8"
									},
									"returnParameters": {
										"id": 1291,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "194:0:8"
									},
									"scope": 1306,
									"src": "154:42:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1304,
										"nodeType": "Block",
										"src": "237:43:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1299,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "254:3:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1300,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "258:6:8",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "254:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1301,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1295,
															"src": "265:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1298,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 986,
														"src": "248:5:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1302,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "248:24:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1303,
												"nodeType": "ExpressionStatement",
												"src": "248:24:8"
											}
										]
									},
									"functionSelector": "a0712d68",
									"id": 1305,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mint",
									"nameLocation": "213:4:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1296,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1295,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "223:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1305,
												"src": "218:11:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1294,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "218:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "217:13:8"
									},
									"returnParameters": {
										"id": 1297,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "237:0:8"
									},
									"scope": 1306,
									"src": "204:76:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 1307,
							"src": "118:165:8",
							"usedErrors": [
								506,
								511,
								516,
								525,
								530,
								535
							],
							"usedEvents": [
								1158,
								1167
							]
						}
					],
					"src": "33:250:8"
				},
				"id": 8
			},
			"contracts/StakeToken.sol": {
				"ast": {
					"absolutePath": "contracts/StakeToken.sol",
					"exportedSymbols": {
						"Context": [
							1280
						],
						"ERC20": [
							1146
						],
						"IERC20": [
							1224
						],
						"IERC20Errors": [
							536
						],
						"IERC20Metadata": [
							1250
						],
						"StakeToken": [
							1332
						]
					},
					"id": 1333,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1308,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "33:24:9"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"id": 1309,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1333,
							"sourceUnit": 1147,
							"src": "59:55:9",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1310,
										"name": "ERC20",
										"nameLocations": [
											"141:5:9"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1146,
										"src": "141:5:9"
									},
									"id": 1311,
									"nodeType": "InheritanceSpecifier",
									"src": "141:5:9"
								}
							],
							"canonicalName": "StakeToken",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1332,
							"linearizedBaseContracts": [
								1332,
								1146,
								536,
								1250,
								1224,
								1280
							],
							"name": "StakeToken",
							"nameLocation": "127:10:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1318,
										"nodeType": "Block",
										"src": "192:2:9",
										"statements": []
									},
									"id": 1319,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"hexValue": "5374616b65546f6b656e",
													"id": 1314,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "173:12:9",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_41d3c5c2e4e467f9a977d9335db7cb50d55b0472c7bad5adbc55f80c6a87c664",
														"typeString": "literal_string \"StakeToken\""
													},
													"value": "StakeToken"
												},
												{
													"hexValue": "53544b",
													"id": 1315,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "186:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_ddd63dcd5916e2715f93ae4bf1497005f4f308cec81ea856ac13c63c6bc50072",
														"typeString": "literal_string \"STK\""
													},
													"value": "STK"
												}
											],
											"id": 1316,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 1313,
												"name": "ERC20",
												"nameLocations": [
													"167:5:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1146,
												"src": "167:5:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "167:25:9"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1312,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "164:2:9"
									},
									"returnParameters": {
										"id": 1317,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "192:0:9"
									},
									"scope": 1332,
									"src": "153:41:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1330,
										"nodeType": "Block",
										"src": "235:43:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1325,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "252:3:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1326,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "256:6:9",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "252:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1327,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1321,
															"src": "263:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1324,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 986,
														"src": "246:5:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1328,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "246:24:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1329,
												"nodeType": "ExpressionStatement",
												"src": "246:24:9"
											}
										]
									},
									"functionSelector": "a0712d68",
									"id": 1331,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mint",
									"nameLocation": "211:4:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1322,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1321,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "221:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1331,
												"src": "216:11:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1320,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "216:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "215:13:9"
									},
									"returnParameters": {
										"id": 1323,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "235:0:9"
									},
									"scope": 1332,
									"src": "202:76:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 1333,
							"src": "118:163:9",
							"usedErrors": [
								506,
								511,
								516,
								525,
								530,
								535
							],
							"usedEvents": [
								1158,
								1167
							]
						}
					],
					"src": "33:248:9"
				},
				"id": 9
			},
			"contracts/StakingUpgrade.sol": {
				"ast": {
					"absolutePath": "contracts/StakingUpgrade.sol",
					"exportedSymbols": {
						"Context": [
							1280
						],
						"ContextUpgradeable": [
							494
						],
						"ERC20": [
							1146
						],
						"IERC20": [
							1224
						],
						"IERC20Errors": [
							536
						],
						"IERC20Metadata": [
							1250
						],
						"Initializable": [
							448
						],
						"OwnableUpgradeable": [
							194
						],
						"RewardToken": [
							1306
						],
						"StakeToken": [
							1332
						],
						"StakingUpgrade": [
							1580
						]
					},
					"id": 1581,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1334,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "33:24:10"
						},
						{
							"absolutePath": "contracts/StakeToken.sol",
							"file": "./StakeToken.sol",
							"id": 1335,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1581,
							"sourceUnit": 1333,
							"src": "59:26:10",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/RewardToken.sol",
							"file": "./RewardToken.sol",
							"id": 1336,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1581,
							"sourceUnit": 1307,
							"src": "87:27:10",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
							"file": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
							"id": 1337,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1581,
							"sourceUnit": 449,
							"src": "116:75:10",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
							"file": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
							"id": 1338,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1581,
							"sourceUnit": 195,
							"src": "193:75:10",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1339,
										"name": "Initializable",
										"nameLocations": [
											"299:13:10"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 448,
										"src": "299:13:10"
									},
									"id": 1340,
									"nodeType": "InheritanceSpecifier",
									"src": "299:13:10"
								},
								{
									"baseName": {
										"id": 1341,
										"name": "OwnableUpgradeable",
										"nameLocations": [
											"313:18:10"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 194,
										"src": "313:18:10"
									},
									"id": 1342,
									"nodeType": "InheritanceSpecifier",
									"src": "313:18:10"
								}
							],
							"canonicalName": "StakingUpgrade",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1580,
							"linearizedBaseContracts": [
								1580,
								194,
								494,
								448
							],
							"name": "StakingUpgrade",
							"nameLocation": "281:14:10",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "51ed6a30",
									"id": 1345,
									"mutability": "mutable",
									"name": "stakeToken",
									"nameLocation": "356:10:10",
									"nodeType": "VariableDeclaration",
									"scope": 1580,
									"src": "338:28:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_StakeToken_$1332",
										"typeString": "contract StakeToken"
									},
									"typeName": {
										"id": 1344,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1343,
											"name": "StakeToken",
											"nameLocations": [
												"338:10:10"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 1332,
											"src": "338:10:10"
										},
										"referencedDeclaration": 1332,
										"src": "338:10:10",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_StakeToken_$1332",
											"typeString": "contract StakeToken"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "f7c618c1",
									"id": 1348,
									"mutability": "mutable",
									"name": "rewardToken",
									"nameLocation": "392:11:10",
									"nodeType": "VariableDeclaration",
									"scope": 1580,
									"src": "373:30:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_RewardToken_$1306",
										"typeString": "contract RewardToken"
									},
									"typeName": {
										"id": 1347,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1346,
											"name": "RewardToken",
											"nameLocations": [
												"373:11:10"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 1306,
											"src": "373:11:10"
										},
										"referencedDeclaration": 1306,
										"src": "373:11:10",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_RewardToken_$1306",
											"typeString": "contract RewardToken"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 1350,
									"mutability": "mutable",
									"name": "lastUpdatedTime",
									"nameLocation": "418:15:10",
									"nodeType": "VariableDeclaration",
									"scope": 1580,
									"src": "410:23:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1349,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "410:7:10",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"functionSelector": "acc3a939",
									"id": 1354,
									"mutability": "mutable",
									"name": "userStaked",
									"nameLocation": "1139:10:10",
									"nodeType": "VariableDeclaration",
									"scope": 1580,
									"src": "1109:40:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 1353,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 1351,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1117:7:10",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1109:22:10",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1352,
											"name": "uint",
											"nodeType": "ElementaryTypeName",
											"src": "1126:4:10",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "0660f1e8",
									"id": 1358,
									"mutability": "mutable",
									"name": "userRewards",
									"nameLocation": "1186:11:10",
									"nodeType": "VariableDeclaration",
									"scope": 1580,
									"src": "1156:41:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 1357,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 1355,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1164:7:10",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1156:22:10",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1356,
											"name": "uint",
											"nodeType": "ElementaryTypeName",
											"src": "1173:4:10",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"eventSelector": "9e71bc8eea02a63969f509818f2dafb9254532904319f9dbda79b67bd34a5f3d",
									"id": 1364,
									"name": "Staked",
									"nameLocation": "1244:6:10",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1363,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1360,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "1267:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 1364,
												"src": "1251:20:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1359,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1251:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1362,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1278:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 1364,
												"src": "1273:11:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1361,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1273:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1250:35:10"
									},
									"src": "1238:48:10"
								},
								{
									"anonymous": false,
									"eventSelector": "884edad9ce6fa2440d8a54cc123490eb96d2768479d49ff9c7366125a9424364",
									"id": 1370,
									"name": "Withdraw",
									"nameLocation": "1298:8:10",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1369,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1366,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "1323:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 1370,
												"src": "1307:20:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1365,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1307:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1368,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1334:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 1370,
												"src": "1329:11:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1367,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1329:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1306:35:10"
									},
									"src": "1292:50:10"
								},
								{
									"anonymous": false,
									"eventSelector": "fc30cddea38e2bf4d6ea7d3f9ed3b6ad7f176419f4963bd81318067a4aee73fe",
									"id": 1376,
									"name": "RewardsClaimed",
									"nameLocation": "1354:14:10",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1375,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1372,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "1385:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 1376,
												"src": "1369:20:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1371,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1369:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1374,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1396:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 1376,
												"src": "1391:11:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1373,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1391:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1368:35:10"
									},
									"src": "1348:56:10"
								},
								{
									"body": {
										"id": 1446,
										"nodeType": "Block",
										"src": "1482:701:10",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1384,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1382,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1378,
																"src": "1501:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1383,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1508:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1501:8:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "54686520616d6f756e742073686f756c6420626520616c776179732067726561746572207468616e207a65726f",
															"id": 1385,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1510:47:10",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9265d513a88feb6004cd4b739a8194dd02d5c83559a911b27a38cd4f3dac6ec5",
																"typeString": "literal_string \"The amount should be always greater than zero\""
															},
															"value": "The amount should be always greater than zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9265d513a88feb6004cd4b739a8194dd02d5c83559a911b27a38cd4f3dac6ec5",
																"typeString": "literal_string \"The amount should be always greater than zero\""
															}
														],
														"id": 1381,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1493:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1386,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1493:65:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1387,
												"nodeType": "ExpressionStatement",
												"src": "1493:65:10"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1399,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1391,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "1641:3:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1392,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "1645:6:10",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "1641:10:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"id": 1395,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "1660:4:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_StakingUpgrade_$1580",
																					"typeString": "contract StakingUpgrade"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_StakingUpgrade_$1580",
																					"typeString": "contract StakingUpgrade"
																				}
																			],
																			"id": 1394,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1652:7:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1393,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1652:7:10",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1396,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1652:13:10",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"id": 1389,
																		"name": "stakeToken",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1345,
																		"src": "1620:10:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_StakeToken_$1332",
																			"typeString": "contract StakeToken"
																		}
																	},
																	"id": 1390,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1631:9:10",
																	"memberName": "allowance",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 773,
																	"src": "1620:20:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address,address) view external returns (uint256)"
																	}
																},
																"id": 1397,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1620:46:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1398,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1378,
																"src": "1668:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1620:54:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f74207365742074686520656e6f75676820616d6f756e7420666f7220616c6c6f77616e6365",
															"id": 1400,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1675:41:10",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1476f4531570197b018bd30cea07a1c62b9a95bce5c7fd24f913423271c1f390",
																"typeString": "literal_string \"Not set the enough amount for allowance\""
															},
															"value": "Not set the enough amount for allowance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1476f4531570197b018bd30cea07a1c62b9a95bce5c7fd24f913423271c1f390",
																"typeString": "literal_string \"Not set the enough amount for allowance\""
															}
														],
														"id": 1388,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1612:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1401,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1612:105:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1402,
												"nodeType": "ExpressionStatement",
												"src": "1612:105:10"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1406,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1794:3:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1407,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1798:6:10",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1794:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 1410,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "1813:4:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_StakingUpgrade_$1580",
																		"typeString": "contract StakingUpgrade"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_StakingUpgrade_$1580",
																		"typeString": "contract StakingUpgrade"
																	}
																],
																"id": 1409,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1805:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1408,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1805:7:10",
																	"typeDescriptions": {}
																}
															},
															"id": 1411,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1805:13:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1412,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1378,
															"src": "1819:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1403,
															"name": "stakeToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1345,
															"src": "1770:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_StakeToken_$1332",
																"typeString": "contract StakeToken"
															}
														},
														"id": 1405,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1781:12:10",
														"memberName": "transferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 829,
														"src": "1770:23:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,address,uint256) external returns (bool)"
														}
													},
													"id": 1413,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1770:56:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1414,
												"nodeType": "ExpressionStatement",
												"src": "1770:56:10"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1417,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1415,
														"name": "lastUpdatedTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1350,
														"src": "1915:15:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 1416,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1932:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1915:18:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1422,
												"nodeType": "IfStatement",
												"src": "1912:72:10",
												"trueBody": {
													"id": 1421,
													"nodeType": "Block",
													"src": "1934:50:10",
													"statements": [
														{
															"expression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1418,
																	"name": "calculateTotalRewards",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1538,
																	"src": "1949:21:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
																		"typeString": "function ()"
																	}
																},
																"id": 1419,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1949:23:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1420,
															"nodeType": "ExpressionStatement",
															"src": "1949:23:10"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1433,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1423,
															"name": "userStaked",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1354,
															"src": "1996:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1426,
														"indexExpression": {
															"expression": {
																"id": 1424,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2007:3:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1425,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2011:6:10",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2007:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1996:22:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1432,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"baseExpression": {
																"id": 1427,
																"name": "userStaked",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1354,
																"src": "2019:10:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																	"typeString": "mapping(address => uint256)"
																}
															},
															"id": 1430,
															"indexExpression": {
																"expression": {
																	"id": 1428,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "2030:3:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1429,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2034:6:10",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "2030:10:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "2019:22:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"id": 1431,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1378,
															"src": "2042:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2019:29:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1996:52:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1434,
												"nodeType": "ExpressionStatement",
												"src": "1996:52:10"
											},
											{
												"expression": {
													"id": 1438,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1435,
														"name": "lastUpdatedTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1350,
														"src": "2059:15:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 1436,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "2075:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 1437,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2081:9:10",
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "2075:15:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2059:31:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1439,
												"nodeType": "ExpressionStatement",
												"src": "2059:31:10"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1441,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2157:3:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1442,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2161:6:10",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2157:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1443,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1378,
															"src": "2168:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1440,
														"name": "Staked",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1364,
														"src": "2150:6:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1444,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2150:25:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1445,
												"nodeType": "EmitStatement",
												"src": "2145:30:10"
											}
										]
									},
									"functionSelector": "a694fc3a",
									"id": 1447,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "stake",
									"nameLocation": "1457:5:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1379,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1378,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1468:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 1447,
												"src": "1463:11:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1377,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1463:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1462:13:10"
									},
									"returnParameters": {
										"id": 1380,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1482:0:10"
									},
									"scope": 1580,
									"src": "1448:735:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1496,
										"nodeType": "Block",
										"src": "2267:360:10",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1458,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"id": 1453,
																	"name": "userStaked",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1354,
																	"src": "2286:10:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1456,
																"indexExpression": {
																	"expression": {
																		"id": 1454,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "2297:3:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1455,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2301:6:10",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "2297:10:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "2286:22:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1457,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2309:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2286:24:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e73756666696369656e74207374616b65642062616c616e6365",
															"id": 1459,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2311:29:10",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_62de0d8da76f74ee61d44db19de671b1f704b747455dcaf92e282519e8ff7dd2",
																"typeString": "literal_string \"Insufficient staked balance\""
															},
															"value": "Insufficient staked balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_62de0d8da76f74ee61d44db19de671b1f704b747455dcaf92e282519e8ff7dd2",
																"typeString": "literal_string \"Insufficient staked balance\""
															}
														],
														"id": 1452,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2278:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1460,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2278:63:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1461,
												"nodeType": "ExpressionStatement",
												"src": "2278:63:10"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1462,
														"name": "calculateTotalRewards",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1538,
														"src": "2352:21:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 1463,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2352:23:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1464,
												"nodeType": "ExpressionStatement",
												"src": "2352:23:10"
											},
											{
												"expression": {
													"id": 1475,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1465,
															"name": "userStaked",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1354,
															"src": "2386:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1468,
														"indexExpression": {
															"expression": {
																"id": 1466,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2397:3:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1467,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2401:6:10",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2397:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2386:22:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1474,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"baseExpression": {
																"id": 1469,
																"name": "userStaked",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1354,
																"src": "2409:10:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																	"typeString": "mapping(address => uint256)"
																}
															},
															"id": 1472,
															"indexExpression": {
																"expression": {
																	"id": 1470,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "2420:3:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1471,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2424:6:10",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "2420:10:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "2409:22:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "-",
														"rightExpression": {
															"id": 1473,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1449,
															"src": "2432:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2409:29:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2386:52:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1476,
												"nodeType": "ExpressionStatement",
												"src": "2386:52:10"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1480,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2469:3:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1481,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2473:6:10",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2469:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1482,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1449,
															"src": "2480:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1477,
															"name": "stakeToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1345,
															"src": "2449:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_StakeToken_$1332",
																"typeString": "contract StakeToken"
															}
														},
														"id": 1479,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2460:8:10",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 756,
														"src": "2449:19:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 1483,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2449:38:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1484,
												"nodeType": "ExpressionStatement",
												"src": "2449:38:10"
											},
											{
												"expression": {
													"id": 1488,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1485,
														"name": "lastUpdatedTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1350,
														"src": "2498:15:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 1486,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "2514:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 1487,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2520:9:10",
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "2514:15:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2498:31:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1489,
												"nodeType": "ExpressionStatement",
												"src": "2498:31:10"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1491,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2601:3:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1492,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2605:6:10",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2601:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1493,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1449,
															"src": "2612:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1490,
														"name": "Withdraw",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1370,
														"src": "2592:8:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1494,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2592:27:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1495,
												"nodeType": "EmitStatement",
												"src": "2587:32:10"
											}
										]
									},
									"functionSelector": "2e1a7d4d",
									"id": 1497,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "withdraw",
									"nameLocation": "2239:8:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1450,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1449,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2253:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 1497,
												"src": "2248:11:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1448,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2248:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2247:13:10"
									},
									"returnParameters": {
										"id": 1451,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2267:0:10"
									},
									"scope": 1580,
									"src": "2230:397:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1537,
										"nodeType": "Block",
										"src": "2763:355:10",
										"statements": [
											{
												"assignments": [
													1501
												],
												"declarations": [
													{
														"constant": false,
														"id": 1501,
														"mutability": "mutable",
														"name": "calculatedTime",
														"nameLocation": "2779:14:10",
														"nodeType": "VariableDeclaration",
														"scope": 1537,
														"src": "2774:19:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1500,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "2774:4:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1506,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1505,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1502,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "2794:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 1503,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2800:9:10",
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "2794:15:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 1504,
														"name": "lastUpdatedTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1350,
														"src": "2810:15:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2794:31:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2774:51:10"
											},
											{
												"assignments": [
													1508
												],
												"declarations": [
													{
														"constant": false,
														"id": 1508,
														"mutability": "mutable",
														"name": "StakeRewardsPerSecond",
														"nameLocation": "2902:21:10",
														"nodeType": "VariableDeclaration",
														"scope": 1537,
														"src": "2897:26:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1507,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "2897:4:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1518,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1517,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1514,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"baseExpression": {
																		"id": 1509,
																		"name": "userStaked",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1354,
																		"src": "2925:10:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 1512,
																	"indexExpression": {
																		"expression": {
																			"id": 1510,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "2936:3:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1511,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "2940:6:10",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "2936:10:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "2925:22:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"hexValue": "34",
																	"id": 1513,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2948:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "2925:24:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1515,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "2924:26:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"hexValue": "313030",
														"id": 1516,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2951:3:10",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_100_by_1",
															"typeString": "int_const 100"
														},
														"value": "100"
													},
													"src": "2924:30:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2897:57:10"
											},
											{
												"assignments": [
													1520
												],
												"declarations": [
													{
														"constant": false,
														"id": 1520,
														"mutability": "mutable",
														"name": "totalRewardsCalculated",
														"nameLocation": "2970:22:10",
														"nodeType": "VariableDeclaration",
														"scope": 1537,
														"src": "2965:27:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1519,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "2965:4:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1524,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1523,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1521,
														"name": "StakeRewardsPerSecond",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1508,
														"src": "2993:21:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 1522,
														"name": "calculatedTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1501,
														"src": "3015:14:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2993:36:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2965:64:10"
											},
											{
												"expression": {
													"id": 1535,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1525,
															"name": "userRewards",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1358,
															"src": "3040:11:10",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1528,
														"indexExpression": {
															"expression": {
																"id": 1526,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3052:3:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1527,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3056:6:10",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3052:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "3040:23:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1534,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"baseExpression": {
																"id": 1529,
																"name": "userRewards",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1358,
																"src": "3064:11:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																	"typeString": "mapping(address => uint256)"
																}
															},
															"id": 1532,
															"indexExpression": {
																"expression": {
																	"id": 1530,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "3076:3:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1531,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3080:6:10",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "3076:10:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "3064:23:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"id": 1533,
															"name": "totalRewardsCalculated",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1520,
															"src": "3088:22:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "3064:46:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3040:70:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1536,
												"nodeType": "ExpressionStatement",
												"src": "3040:70:10"
											}
										]
									},
									"functionSelector": "ba5a5319",
									"id": 1538,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "calculateTotalRewards",
									"nameLocation": "2733:21:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1498,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2754:2:10"
									},
									"returnParameters": {
										"id": 1499,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2763:0:10"
									},
									"scope": 1580,
									"src": "2724:394:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1578,
										"nodeType": "Block",
										"src": "3195:288:10",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1547,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"id": 1542,
																	"name": "userRewards",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1358,
																	"src": "3214:11:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1545,
																"indexExpression": {
																	"expression": {
																		"id": 1543,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "3226:3:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1544,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "3230:6:10",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "3226:10:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "3214:23:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1546,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3238:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "3214:25:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f207265776172647320746f20636c61696d",
															"id": 1548,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3240:21:10",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_584cf1690fd4124c524340f65c2f0897ce34c8cad61c485ada0c89030473339d",
																"typeString": "literal_string \"No rewards to claim\""
															},
															"value": "No rewards to claim"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_584cf1690fd4124c524340f65c2f0897ce34c8cad61c485ada0c89030473339d",
																"typeString": "literal_string \"No rewards to claim\""
															}
														],
														"id": 1541,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3206:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1549,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3206:56:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1550,
												"nodeType": "ExpressionStatement",
												"src": "3206:56:10"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1554,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3294:3:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1555,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3298:6:10",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3294:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"baseExpression": {
																"id": 1556,
																"name": "userRewards",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1358,
																"src": "3305:11:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																	"typeString": "mapping(address => uint256)"
																}
															},
															"id": 1559,
															"indexExpression": {
																"expression": {
																	"id": 1557,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "3317:3:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1558,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3321:6:10",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "3317:10:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "3305:23:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1551,
															"name": "rewardToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1348,
															"src": "3273:11:10",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_RewardToken_$1306",
																"typeString": "contract RewardToken"
															}
														},
														"id": 1553,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3285:8:10",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 756,
														"src": "3273:20:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 1560,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3273:56:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1561,
												"nodeType": "ExpressionStatement",
												"src": "3273:56:10"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1563,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3404:3:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1564,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3408:6:10",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3404:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"baseExpression": {
																"id": 1565,
																"name": "userRewards",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1358,
																"src": "3415:11:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																	"typeString": "mapping(address => uint256)"
																}
															},
															"id": 1568,
															"indexExpression": {
																"expression": {
																	"id": 1566,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "3427:3:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1567,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3431:6:10",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "3427:10:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "3415:23:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1562,
														"name": "RewardsClaimed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1376,
														"src": "3389:14:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1569,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3389:50:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1570,
												"nodeType": "EmitStatement",
												"src": "3384:55:10"
											},
											{
												"expression": {
													"id": 1576,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1571,
															"name": "userRewards",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1358,
															"src": "3450:11:10",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1574,
														"indexExpression": {
															"expression": {
																"id": 1572,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3462:3:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1573,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3466:6:10",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3462:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "3450:23:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 1575,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3474:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3450:25:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1577,
												"nodeType": "ExpressionStatement",
												"src": "3450:25:10"
											}
										]
									},
									"functionSelector": "372500ab",
									"id": 1579,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "claimRewards",
									"nameLocation": "3174:12:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1539,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3186:2:10"
									},
									"returnParameters": {
										"id": 1540,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3195:0:10"
									},
									"scope": 1580,
									"src": "3165:318:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 1581,
							"src": "272:3214:10",
							"usedErrors": [
								30,
								35,
								211,
								214
							],
							"usedEvents": [
								41,
								219,
								1364,
								1370,
								1376
							]
						}
					],
					"src": "33:3453:10"
				},
				"id": 10
			}
		}
	}
}